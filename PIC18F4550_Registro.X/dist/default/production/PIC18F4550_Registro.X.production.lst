

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 20:04:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text80,global,reloc=2,class=CODE,delta=1
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	text88,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109  0000                     
   110                           ; Version 2.20
   111                           ; Generated 12/02/2020 GMT
   112                           ; 
   113                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F4550 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     
   145                           	psect	idataBANK0
   146  003B40                     __pidataBANK0:
   147                           	callstack 0
   148                           
   149                           ;initializer for _add
   150  003B40  00A1               	dw	161
   151                           
   152                           ;initializer for _diax
   153  003B42  1C                 	db	28
   154                           
   155                           ;initializer for _mesx
   156  003B43  0A                 	db	10
   157                           
   158                           ;initializer for _aniox
   159  003B44  15                 	db	21
   160                           
   161                           ;initializer for _dia
   162  003B45  1C                 	db	28
   163                           
   164                           ;initializer for _mes
   165  003B46  0A                 	db	10
   166                           
   167                           ;initializer for _anio
   168  003B47  15                 	db	21
   169                           
   170                           ;initializer for _Segundo
   171  003B48  01                 	db	1
   172                           
   173                           ;initializer for _Minuto
   174  003B49  31                 	db	49
   175                           
   176                           ;initializer for _Hora
   177  003B4A  16                 	db	22
   178                           
   179                           	psect	mediumconst
   180  00704E                     __pmediumconst:
   181                           	callstack 0
   182  00704E  00                 	db	0
   183  00704F                     _BIG_FONTS:
   184                           	callstack 0
   185  00704F  00                 	db	0
   186  007050  00                 	db	0
   187  007051  00                 	db	0
   188  007052  00                 	db	0
   189  007053  00                 	db	0
   190  007054  00                 	db	0
   191  007055  00                 	db	0
   192  007056  00                 	db	0
   193  007057  00                 	db	0
   194  007058  00                 	db	0
   195  007059  00                 	db	0
   196  00705A  00                 	db	0
   197  00705B  00                 	db	0
   198  00705C  00                 	db	0
   199  00705D  00                 	db	0
   200  00705E  00                 	db	0
   201  00705F  00                 	db	0
   202  007060  00                 	db	0
   203  007061  00                 	db	0
   204  007062  00                 	db	0
   205  007063  00                 	db	0
   206  007064  00                 	db	0
   207  007065  00                 	db	0
   208  007066  00                 	db	0
   209  007067  00                 	db	0
   210  007068  00                 	db	0
   211  007069  00                 	db	0
   212  00706A  00                 	db	0
   213  00706B  00                 	db	0
   214  00706C  00                 	db	0
   215  00706D  00                 	db	0
   216  00706E  00                 	db	0
   217  00706F  00                 	db	0
   218  007070  00                 	db	0
   219  007071  00                 	db	0
   220  007072  00                 	db	0
   221  007073  F8                 	db	248
   222  007074  FC                 	db	252
   223  007075  FC                 	db	252
   224  007076  FC                 	db	252
   225  007077  F8                 	db	248
   226  007078  00                 	db	0
   227  007079  00                 	db	0
   228  00707A  00                 	db	0
   229  00707B  00                 	db	0
   230  00707C  00                 	db	0
   231  00707D  00                 	db	0
   232  00707E  00                 	db	0
   233  00707F  00                 	db	0
   234  007080  00                 	db	0
   235  007081  00                 	db	0
   236  007082  00                 	db	0
   237  007083  00                 	db	0
   238  007084  73                 	db	115
   239  007085  73                 	db	115
   240  007086  73                 	db	115
   241  007087  00                 	db	0
   242  007088  00                 	db	0
   243  007089  00                 	db	0
   244  00708A  00                 	db	0
   245  00708B  00                 	db	0
   246  00708C  00                 	db	0
   247  00708D  00                 	db	0
   248  00708E  00                 	db	0
   249  00708F  00                 	db	0
   250  007090  00                 	db	0
   251  007091  00                 	db	0
   252  007092  00                 	db	0
   253  007093  1E                 	db	30
   254  007094  3E                 	db	62
   255  007095  3E                 	db	62
   256  007096  00                 	db	0
   257  007097  00                 	db	0
   258  007098  00                 	db	0
   259  007099  3E                 	db	62
   260  00709A  3E                 	db	62
   261  00709B  1E                 	db	30
   262  00709C  00                 	db	0
   263  00709D  00                 	db	0
   264  00709E  00                 	db	0
   265  00709F  00                 	db	0
   266  0070A0  00                 	db	0
   267  0070A1  00                 	db	0
   268  0070A2  00                 	db	0
   269  0070A3  00                 	db	0
   270  0070A4  00                 	db	0
   271  0070A5  00                 	db	0
   272  0070A6  00                 	db	0
   273  0070A7  00                 	db	0
   274  0070A8  00                 	db	0
   275  0070A9  00                 	db	0
   276  0070AA  00                 	db	0
   277  0070AB  00                 	db	0
   278  0070AC  00                 	db	0
   279  0070AD  00                 	db	0
   280  0070AE  00                 	db	0
   281  0070AF  00                 	db	0
   282  0070B0  30                 	db	48
   283  0070B1  30                 	db	48
   284  0070B2  30                 	db	48
   285  0070B3  FE                 	db	254
   286  0070B4  FE                 	db	254
   287  0070B5  30                 	db	48
   288  0070B6  30                 	db	48
   289  0070B7  30                 	db	48
   290  0070B8  30                 	db	48
   291  0070B9  FE                 	db	254
   292  0070BA  FE                 	db	254
   293  0070BB  30                 	db	48
   294  0070BC  30                 	db	48
   295  0070BD  30                 	db	48
   296  0070BE  00                 	db	0
   297  0070BF  00                 	db	0
   298  0070C0  0C                 	db	12
   299  0070C1  0C                 	db	12
   300  0070C2  0C                 	db	12
   301  0070C3  7F                 	db	127
   302  0070C4  7F                 	db	127
   303  0070C5  0C                 	db	12
   304  0070C6  0C                 	db	12
   305  0070C7  0C                 	db	12
   306  0070C8  0C                 	db	12
   307  0070C9  7F                 	db	127
   308  0070CA  7F                 	db	127
   309  0070CB  0C                 	db	12
   310  0070CC  0C                 	db	12
   311  0070CD  0C                 	db	12
   312  0070CE  00                 	db	0
   313  0070CF  00                 	db	0
   314  0070D0  00                 	db	0
   315  0070D1  00                 	db	0
   316  0070D2  F0                 	db	240
   317  0070D3  F8                 	db	248
   318  0070D4  98                 	db	152
   319  0070D5  FE                 	db	254
   320  0070D6  98                 	db	152
   321  0070D7  98                 	db	152
   322  0070D8  FE                 	db	254
   323  0070D9  98                 	db	152
   324  0070DA  98                 	db	152
   325  0070DB  18                 	db	24
   326  0070DC  00                 	db	0
   327  0070DD  00                 	db	0
   328  0070DE  00                 	db	0
   329  0070DF  00                 	db	0
   330  0070E0  00                 	db	0
   331  0070E1  00                 	db	0
   332  0070E2  18                 	db	24
   333  0070E3  19                 	db	25
   334  0070E4  19                 	db	25
   335  0070E5  7F                 	db	127
   336  0070E6  19                 	db	25
   337  0070E7  19                 	db	25
   338  0070E8  7F                 	db	127
   339  0070E9  19                 	db	25
   340  0070EA  1F                 	db	31
   341  0070EB  0F                 	db	15
   342  0070EC  00                 	db	0
   343  0070ED  00                 	db	0
   344  0070EE  00                 	db	0
   345  0070EF  00                 	db	0
   346  0070F0  00                 	db	0
   347  0070F1  00                 	db	0
   348  0070F2  00                 	db	0
   349  0070F3  38                 	db	56
   350  0070F4  38                 	db	56
   351  0070F5  38                 	db	56
   352  0070F6  80                 	db	128
   353  0070F7  C0                 	db	192
   354  0070F8  E0                 	db	224
   355  0070F9  70                 	db	112
   356  0070FA  38                 	db	56
   357  0070FB  00                 	db	0
   358  0070FC  00                 	db	0
   359  0070FD  00                 	db	0
   360  0070FE  00                 	db	0
   361  0070FF  00                 	db	0
   362  007100  00                 	db	0
   363  007101  00                 	db	0
   364  007102  00                 	db	0
   365  007103  1C                 	db	28
   366  007104  0E                 	db	14
   367  007105  07                 	db	7
   368  007106  03                 	db	3
   369  007107  01                 	db	1
   370  007108  1C                 	db	28
   371  007109  1C                 	db	28
   372  00710A  1C                 	db	28
   373  00710B  00                 	db	0
   374  00710C  00                 	db	0
   375  00710D  00                 	db	0
   376  00710E  00                 	db	0
   377  00710F  00                 	db	0
   378  007110  00                 	db	0
   379  007111  00                 	db	0
   380  007112  38                 	db	56
   381  007113  FC                 	db	252
   382  007114  C4                 	db	196
   383  007115  C4                 	db	196
   384  007116  FC                 	db	252
   385  007117  38                 	db	56
   386  007118  00                 	db	0
   387  007119  00                 	db	0
   388  00711A  00                 	db	0
   389  00711B  80                 	db	128
   390  00711C  00                 	db	0
   391  00711D  00                 	db	0
   392  00711E  00                 	db	0
   393  00711F  00                 	db	0
   394  007120  00                 	db	0
   395  007121  00                 	db	0
   396  007122  1E                 	db	30
   397  007123  3F                 	db	63
   398  007124  21                 	db	33
   399  007125  21                 	db	33
   400  007126  33                 	db	51
   401  007127  3F                 	db	63
   402  007128  1E                 	db	30
   403  007129  1E                 	db	30
   404  00712A  37                 	db	55
   405  00712B  23                 	db	35
   406  00712C  00                 	db	0
   407  00712D  00                 	db	0
   408  00712E  00                 	db	0
   409  00712F  00                 	db	0
   410  007130  00                 	db	0
   411  007131  00                 	db	0
   412  007132  00                 	db	0
   413  007133  20                 	db	32
   414  007134  3C                 	db	60
   415  007135  3C                 	db	60
   416  007136  1C                 	db	28
   417  007137  00                 	db	0
   418  007138  00                 	db	0
   419  007139  00                 	db	0
   420  00713A  00                 	db	0
   421  00713B  00                 	db	0
   422  00713C  00                 	db	0
   423  00713D  00                 	db	0
   424  00713E  00                 	db	0
   425  00713F  00                 	db	0
   426  007140  00                 	db	0
   427  007141  00                 	db	0
   428  007142  00                 	db	0
   429  007143  00                 	db	0
   430  007144  00                 	db	0
   431  007145  00                 	db	0
   432  007146  00                 	db	0
   433  007147  00                 	db	0
   434  007148  00                 	db	0
   435  007149  00                 	db	0
   436  00714A  00                 	db	0
   437  00714B  00                 	db	0
   438  00714C  00                 	db	0
   439  00714D  00                 	db	0
   440  00714E  00                 	db	0
   441  00714F  00                 	db	0
   442  007150  00                 	db	0
   443  007151  00                 	db	0
   444  007152  00                 	db	0
   445  007153  C0                 	db	192
   446  007154  E0                 	db	224
   447  007155  F0                 	db	240
   448  007156  38                 	db	56
   449  007157  1C                 	db	28
   450  007158  0C                 	db	12
   451  007159  04                 	db	4
   452  00715A  04                 	db	4
   453  00715B  00                 	db	0
   454  00715C  00                 	db	0
   455  00715D  00                 	db	0
   456  00715E  00                 	db	0
   457  00715F  00                 	db	0
   458  007160  00                 	db	0
   459  007161  00                 	db	0
   460  007162  00                 	db	0
   461  007163  03                 	db	3
   462  007164  07                 	db	7
   463  007165  0F                 	db	15
   464  007166  1C                 	db	28
   465  007167  38                 	db	56
   466  007168  30                 	db	48
   467  007169  20                 	db	32
   468  00716A  20                 	db	32
   469  00716B  00                 	db	0
   470  00716C  00                 	db	0
   471  00716D  00                 	db	0
   472  00716E  00                 	db	0
   473  00716F  00                 	db	0
   474  007170  00                 	db	0
   475  007171  00                 	db	0
   476  007172  00                 	db	0
   477  007173  04                 	db	4
   478  007174  04                 	db	4
   479  007175  0C                 	db	12
   480  007176  1C                 	db	28
   481  007177  38                 	db	56
   482  007178  F0                 	db	240
   483  007179  E0                 	db	224
   484  00717A  C0                 	db	192
   485  00717B  00                 	db	0
   486  00717C  00                 	db	0
   487  00717D  00                 	db	0
   488  00717E  00                 	db	0
   489  00717F  00                 	db	0
   490  007180  00                 	db	0
   491  007181  00                 	db	0
   492  007182  00                 	db	0
   493  007183  20                 	db	32
   494  007184  20                 	db	32
   495  007185  30                 	db	48
   496  007186  38                 	db	56
   497  007187  1C                 	db	28
   498  007188  0F                 	db	15
   499  007189  07                 	db	7
   500  00718A  03                 	db	3
   501  00718B  00                 	db	0
   502  00718C  00                 	db	0
   503  00718D  00                 	db	0
   504  00718E  00                 	db	0
   505  00718F  00                 	db	0
   506  007190  00                 	db	0
   507  007191  80                 	db	128
   508  007192  88                 	db	136
   509  007193  90                 	db	144
   510  007194  E0                 	db	224
   511  007195  E0                 	db	224
   512  007196  FC                 	db	252
   513  007197  FC                 	db	252
   514  007198  E0                 	db	224
   515  007199  E0                 	db	224
   516  00719A  90                 	db	144
   517  00719B  88                 	db	136
   518  00719C  80                 	db	128
   519  00719D  00                 	db	0
   520  00719E  00                 	db	0
   521  00719F  00                 	db	0
   522  0071A0  00                 	db	0
   523  0071A1  01                 	db	1
   524  0071A2  11                 	db	17
   525  0071A3  09                 	db	9
   526  0071A4  07                 	db	7
   527  0071A5  07                 	db	7
   528  0071A6  3F                 	db	63
   529  0071A7  3F                 	db	63
   530  0071A8  07                 	db	7
   531  0071A9  07                 	db	7
   532  0071AA  09                 	db	9
   533  0071AB  11                 	db	17
   534  0071AC  01                 	db	1
   535  0071AD  00                 	db	0
   536  0071AE  00                 	db	0
   537  0071AF  00                 	db	0
   538  0071B0  00                 	db	0
   539  0071B1  00                 	db	0
   540  0071B2  00                 	db	0
   541  0071B3  80                 	db	128
   542  0071B4  80                 	db	128
   543  0071B5  80                 	db	128
   544  0071B6  F0                 	db	240
   545  0071B7  F0                 	db	240
   546  0071B8  80                 	db	128
   547  0071B9  80                 	db	128
   548  0071BA  80                 	db	128
   549  0071BB  00                 	db	0
   550  0071BC  00                 	db	0
   551  0071BD  00                 	db	0
   552  0071BE  00                 	db	0
   553  0071BF  00                 	db	0
   554  0071C0  00                 	db	0
   555  0071C1  00                 	db	0
   556  0071C2  00                 	db	0
   557  0071C3  01                 	db	1
   558  0071C4  01                 	db	1
   559  0071C5  01                 	db	1
   560  0071C6  0F                 	db	15
   561  0071C7  0F                 	db	15
   562  0071C8  01                 	db	1
   563  0071C9  01                 	db	1
   564  0071CA  01                 	db	1
   565  0071CB  00                 	db	0
   566  0071CC  00                 	db	0
   567  0071CD  00                 	db	0
   568  0071CE  00                 	db	0
   569  0071CF  00                 	db	0
   570  0071D0  00                 	db	0
   571  0071D1  00                 	db	0
   572  0071D2  00                 	db	0
   573  0071D3  00                 	db	0
   574  0071D4  00                 	db	0
   575  0071D5  00                 	db	0
   576  0071D6  00                 	db	0
   577  0071D7  00                 	db	0
   578  0071D8  00                 	db	0
   579  0071D9  00                 	db	0
   580  0071DA  00                 	db	0
   581  0071DB  00                 	db	0
   582  0071DC  00                 	db	0
   583  0071DD  00                 	db	0
   584  0071DE  00                 	db	0
   585  0071DF  00                 	db	0
   586  0071E0  00                 	db	0
   587  0071E1  00                 	db	0
   588  0071E2  00                 	db	0
   589  0071E3  40                 	db	64
   590  0071E4  78                 	db	120
   591  0071E5  78                 	db	120
   592  0071E6  38                 	db	56
   593  0071E7  00                 	db	0
   594  0071E8  00                 	db	0
   595  0071E9  00                 	db	0
   596  0071EA  00                 	db	0
   597  0071EB  00                 	db	0
   598  0071EC  00                 	db	0
   599  0071ED  00                 	db	0
   600  0071EE  00                 	db	0
   601  0071EF  00                 	db	0
   602  0071F0  00                 	db	0
   603  0071F1  00                 	db	0
   604  0071F2  80                 	db	128
   605  0071F3  80                 	db	128
   606  0071F4  80                 	db	128
   607  0071F5  80                 	db	128
   608  0071F6  80                 	db	128
   609  0071F7  80                 	db	128
   610  0071F8  80                 	db	128
   611  0071F9  80                 	db	128
   612  0071FA  80                 	db	128
   613  0071FB  80                 	db	128
   614  0071FC  00                 	db	0
   615  0071FD  00                 	db	0
   616  0071FE  00                 	db	0
   617  0071FF  00                 	db	0
   618  007200  00                 	db	0
   619  007201  00                 	db	0
   620  007202  01                 	db	1
   621  007203  01                 	db	1
   622  007204  01                 	db	1
   623  007205  01                 	db	1
   624  007206  01                 	db	1
   625  007207  01                 	db	1
   626  007208  01                 	db	1
   627  007209  01                 	db	1
   628  00720A  01                 	db	1
   629  00720B  01                 	db	1
   630  00720C  00                 	db	0
   631  00720D  00                 	db	0
   632  00720E  00                 	db	0
   633  00720F  00                 	db	0
   634  007210  00                 	db	0
   635  007211  00                 	db	0
   636  007212  00                 	db	0
   637  007213  00                 	db	0
   638  007214  00                 	db	0
   639  007215  00                 	db	0
   640  007216  00                 	db	0
   641  007217  00                 	db	0
   642  007218  00                 	db	0
   643  007219  00                 	db	0
   644  00721A  00                 	db	0
   645  00721B  00                 	db	0
   646  00721C  00                 	db	0
   647  00721D  00                 	db	0
   648  00721E  00                 	db	0
   649  00721F  00                 	db	0
   650  007220  00                 	db	0
   651  007221  00                 	db	0
   652  007222  00                 	db	0
   653  007223  00                 	db	0
   654  007224  38                 	db	56
   655  007225  38                 	db	56
   656  007226  38                 	db	56
   657  007227  00                 	db	0
   658  007228  00                 	db	0
   659  007229  00                 	db	0
   660  00722A  00                 	db	0
   661  00722B  00                 	db	0
   662  00722C  00                 	db	0
   663  00722D  00                 	db	0
   664  00722E  00                 	db	0
   665  00722F  00                 	db	0
   666  007230  00                 	db	0
   667  007231  00                 	db	0
   668  007232  00                 	db	0
   669  007233  00                 	db	0
   670  007234  00                 	db	0
   671  007235  00                 	db	0
   672  007236  00                 	db	0
   673  007237  00                 	db	0
   674  007238  80                 	db	128
   675  007239  C0                 	db	192
   676  00723A  E0                 	db	224
   677  00723B  70                 	db	112
   678  00723C  38                 	db	56
   679  00723D  1C                 	db	28
   680  00723E  00                 	db	0
   681  00723F  00                 	db	0
   682  007240  00                 	db	0
   683  007241  00                 	db	0
   684  007242  20                 	db	32
   685  007243  30                 	db	48
   686  007244  38                 	db	56
   687  007245  1C                 	db	28
   688  007246  0E                 	db	14
   689  007247  07                 	db	7
   690  007248  03                 	db	3
   691  007249  01                 	db	1
   692  00724A  00                 	db	0
   693  00724B  00                 	db	0
   694  00724C  00                 	db	0
   695  00724D  00                 	db	0
   696  00724E  00                 	db	0
   697  00724F  00                 	db	0
   698  007250  00                 	db	0
   699  007251  00                 	db	0
   700  007252  F8                 	db	248
   701  007253  FC                 	db	252
   702  007254  FC                 	db	252
   703  007255  04                 	db	4
   704  007256  84                 	db	132
   705  007257  E4                 	db	228
   706  007258  74                 	db	116
   707  007259  FC                 	db	252
   708  00725A  FC                 	db	252
   709  00725B  F8                 	db	248
   710  00725C  00                 	db	0
   711  00725D  00                 	db	0
   712  00725E  00                 	db	0
   713  00725F  00                 	db	0
   714  007260  00                 	db	0
   715  007261  00                 	db	0
   716  007262  1F                 	db	31
   717  007263  3F                 	db	63
   718  007264  3F                 	db	63
   719  007265  2E                 	db	46
   720  007266  27                 	db	39
   721  007267  21                 	db	33
   722  007268  20                 	db	32
   723  007269  3F                 	db	63
   724  00726A  3F                 	db	63
   725  00726B  1F                 	db	31
   726  00726C  00                 	db	0
   727  00726D  00                 	db	0
   728  00726E  00                 	db	0
   729  00726F  00                 	db	0
   730  007270  00                 	db	0
   731  007271  00                 	db	0
   732  007272  60                 	db	96
   733  007273  60                 	db	96
   734  007274  60                 	db	96
   735  007275  F0                 	db	240
   736  007276  FC                 	db	252
   737  007277  FC                 	db	252
   738  007278  00                 	db	0
   739  007279  00                 	db	0
   740  00727A  00                 	db	0
   741  00727B  00                 	db	0
   742  00727C  00                 	db	0
   743  00727D  00                 	db	0
   744  00727E  00                 	db	0
   745  00727F  00                 	db	0
   746  007280  00                 	db	0
   747  007281  00                 	db	0
   748  007282  20                 	db	32
   749  007283  20                 	db	32
   750  007284  20                 	db	32
   751  007285  3F                 	db	63
   752  007286  3F                 	db	63
   753  007287  3F                 	db	63
   754  007288  20                 	db	32
   755  007289  20                 	db	32
   756  00728A  20                 	db	32
   757  00728B  00                 	db	0
   758  00728C  00                 	db	0
   759  00728D  00                 	db	0
   760  00728E  00                 	db	0
   761  00728F  00                 	db	0
   762  007290  00                 	db	0
   763  007291  00                 	db	0
   764  007292  18                 	db	24
   765  007293  1C                 	db	28
   766  007294  1C                 	db	28
   767  007295  04                 	db	4
   768  007296  04                 	db	4
   769  007297  84                 	db	132
   770  007298  CC                 	db	204
   771  007299  FC                 	db	252
   772  00729A  78                 	db	120
   773  00729B  30                 	db	48
   774  00729C  00                 	db	0
   775  00729D  00                 	db	0
   776  00729E  00                 	db	0
   777  00729F  00                 	db	0
   778  0072A0  00                 	db	0
   779  0072A1  00                 	db	0
   780  0072A2  30                 	db	48
   781  0072A3  38                 	db	56
   782  0072A4  3C                 	db	60
   783  0072A5  2E                 	db	46
   784  0072A6  27                 	db	39
   785  0072A7  23                 	db	35
   786  0072A8  21                 	db	33
   787  0072A9  38                 	db	56
   788  0072AA  38                 	db	56
   789  0072AB  38                 	db	56
   790  0072AC  00                 	db	0
   791  0072AD  00                 	db	0
   792  0072AE  00                 	db	0
   793  0072AF  00                 	db	0
   794  0072B0  00                 	db	0
   795  0072B1  00                 	db	0
   796  0072B2  18                 	db	24
   797  0072B3  1C                 	db	28
   798  0072B4  1C                 	db	28
   799  0072B5  84                 	db	132
   800  0072B6  84                 	db	132
   801  0072B7  84                 	db	132
   802  0072B8  CC                 	db	204
   803  0072B9  7C                 	db	124
   804  0072BA  78                 	db	120
   805  0072BB  30                 	db	48
   806  0072BC  00                 	db	0
   807  0072BD  00                 	db	0
   808  0072BE  00                 	db	0
   809  0072BF  00                 	db	0
   810  0072C0  00                 	db	0
   811  0072C1  00                 	db	0
   812  0072C2  18                 	db	24
   813  0072C3  38                 	db	56
   814  0072C4  38                 	db	56
   815  0072C5  21                 	db	33
   816  0072C6  21                 	db	33
   817  0072C7  21                 	db	33
   818  0072C8  33                 	db	51
   819  0072C9  3E                 	db	62
   820  0072CA  1E                 	db	30
   821  0072CB  0C                 	db	12
   822  0072CC  00                 	db	0
   823  0072CD  00                 	db	0
   824  0072CE  00                 	db	0
   825  0072CF  00                 	db	0
   826  0072D0  00                 	db	0
   827  0072D1  00                 	db	0
   828  0072D2  80                 	db	128
   829  0072D3  C0                 	db	192
   830  0072D4  60                 	db	96
   831  0072D5  30                 	db	48
   832  0072D6  18                 	db	24
   833  0072D7  FC                 	db	252
   834  0072D8  FC                 	db	252
   835  0072D9  FC                 	db	252
   836  0072DA  00                 	db	0
   837  0072DB  00                 	db	0
   838  0072DC  00                 	db	0
   839  0072DD  00                 	db	0
   840  0072DE  00                 	db	0
   841  0072DF  00                 	db	0
   842  0072E0  00                 	db	0
   843  0072E1  00                 	db	0
   844  0072E2  03                 	db	3
   845  0072E3  03                 	db	3
   846  0072E4  03                 	db	3
   847  0072E5  23                 	db	35
   848  0072E6  23                 	db	35
   849  0072E7  3F                 	db	63
   850  0072E8  3F                 	db	63
   851  0072E9  3F                 	db	63
   852  0072EA  23                 	db	35
   853  0072EB  23                 	db	35
   854  0072EC  00                 	db	0
   855  0072ED  00                 	db	0
   856  0072EE  00                 	db	0
   857  0072EF  00                 	db	0
   858  0072F0  00                 	db	0
   859  0072F1  00                 	db	0
   860  0072F2  FC                 	db	252
   861  0072F3  FC                 	db	252
   862  0072F4  FC                 	db	252
   863  0072F5  84                 	db	132
   864  0072F6  84                 	db	132
   865  0072F7  84                 	db	132
   866  0072F8  84                 	db	132
   867  0072F9  84                 	db	132
   868  0072FA  04                 	db	4
   869  0072FB  04                 	db	4
   870  0072FC  00                 	db	0
   871  0072FD  00                 	db	0
   872  0072FE  00                 	db	0
   873  0072FF  00                 	db	0
   874  007300  00                 	db	0
   875  007301  00                 	db	0
   876  007302  19                 	db	25
   877  007303  39                 	db	57
   878  007304  39                 	db	57
   879  007305  21                 	db	33
   880  007306  21                 	db	33
   881  007307  21                 	db	33
   882  007308  33                 	db	51
   883  007309  3F                 	db	63
   884  00730A  1F                 	db	31
   885  00730B  0E                 	db	14
   886  00730C  00                 	db	0
   887  00730D  00                 	db	0
   888  00730E  00                 	db	0
   889  00730F  00                 	db	0
   890  007310  00                 	db	0
   891  007311  00                 	db	0
   892  007312  E0                 	db	224
   893  007313  F0                 	db	240
   894  007314  F8                 	db	248
   895  007315  9C                 	db	156
   896  007316  8C                 	db	140
   897  007317  84                 	db	132
   898  007318  84                 	db	132
   899  007319  84                 	db	132
   900  00731A  80                 	db	128
   901  00731B  00                 	db	0
   902  00731C  00                 	db	0
   903  00731D  00                 	db	0
   904  00731E  00                 	db	0
   905  00731F  00                 	db	0
   906  007320  00                 	db	0
   907  007321  00                 	db	0
   908  007322  1F                 	db	31
   909  007323  3F                 	db	63
   910  007324  3F                 	db	63
   911  007325  21                 	db	33
   912  007326  21                 	db	33
   913  007327  21                 	db	33
   914  007328  21                 	db	33
   915  007329  3F                 	db	63
   916  00732A  3F                 	db	63
   917  00732B  1F                 	db	31
   918  00732C  00                 	db	0
   919  00732D  00                 	db	0
   920  00732E  00                 	db	0
   921  00732F  00                 	db	0
   922  007330  00                 	db	0
   923  007331  00                 	db	0
   924  007332  3C                 	db	60
   925  007333  3C                 	db	60
   926  007334  3C                 	db	60
   927  007335  04                 	db	4
   928  007336  04                 	db	4
   929  007337  04                 	db	4
   930  007338  04                 	db	4
   931  007339  84                 	db	132
   932  00733A  FC                 	db	252
   933  00733B  FC                 	db	252
   934  00733C  7C                 	db	124
   935  00733D  00                 	db	0
   936  00733E  00                 	db	0
   937  00733F  00                 	db	0
   938  007340  00                 	db	0
   939  007341  00                 	db	0
   940  007342  00                 	db	0
   941  007343  00                 	db	0
   942  007344  00                 	db	0
   943  007345  38                 	db	56
   944  007346  3C                 	db	60
   945  007347  3E                 	db	62
   946  007348  07                 	db	7
   947  007349  03                 	db	3
   948  00734A  01                 	db	1
   949  00734B  00                 	db	0
   950  00734C  00                 	db	0
   951  00734D  00                 	db	0
   952  00734E  00                 	db	0
   953  00734F  00                 	db	0
   954  007350  00                 	db	0
   955  007351  00                 	db	0
   956  007352  78                 	db	120
   957  007353  7C                 	db	124
   958  007354  FC                 	db	252
   959  007355  C4                 	db	196
   960  007356  C4                 	db	196
   961  007357  84                 	db	132
   962  007358  84                 	db	132
   963  007359  FC                 	db	252
   964  00735A  7C                 	db	124
   965  00735B  78                 	db	120
   966  00735C  00                 	db	0
   967  00735D  00                 	db	0
   968  00735E  00                 	db	0
   969  00735F  00                 	db	0
   970  007360  00                 	db	0
   971  007361  00                 	db	0
   972  007362  1E                 	db	30
   973  007363  3E                 	db	62
   974  007364  3F                 	db	63
   975  007365  21                 	db	33
   976  007366  21                 	db	33
   977  007367  23                 	db	35
   978  007368  23                 	db	35
   979  007369  3F                 	db	63
   980  00736A  3E                 	db	62
   981  00736B  1E                 	db	30
   982  00736C  00                 	db	0
   983  00736D  00                 	db	0
   984  00736E  00                 	db	0
   985  00736F  00                 	db	0
   986  007370  00                 	db	0
   987  007371  00                 	db	0
   988  007372  F8                 	db	248
   989  007373  FC                 	db	252
   990  007374  FC                 	db	252
   991  007375  84                 	db	132
   992  007376  84                 	db	132
   993  007377  84                 	db	132
   994  007378  84                 	db	132
   995  007379  FC                 	db	252
   996  00737A  FC                 	db	252
   997  00737B  F8                 	db	248
   998  00737C  00                 	db	0
   999  00737D  00                 	db	0
  1000  00737E  00                 	db	0
  1001  00737F  00                 	db	0
  1002  007380  00                 	db	0
  1003  007381  00                 	db	0
  1004  007382  00                 	db	0
  1005  007383  01                 	db	1
  1006  007384  21                 	db	33
  1007  007385  21                 	db	33
  1008  007386  21                 	db	33
  1009  007387  31                 	db	49
  1010  007388  39                 	db	57
  1011  007389  1F                 	db	31
  1012  00738A  0F                 	db	15
  1013  00738B  07                 	db	7
  1014  00738C  00                 	db	0
  1015  00738D  00                 	db	0
  1016  00738E  00                 	db	0
  1017  00738F  00                 	db	0
  1018  007390  00                 	db	0
  1019  007391  00                 	db	0
  1020  007392  00                 	db	0
  1021  007393  00                 	db	0
  1022  007394  00                 	db	0
  1023  007395  70                 	db	112
  1024  007396  70                 	db	112
  1025  007397  70                 	db	112
  1026  007398  00                 	db	0
  1027  007399  00                 	db	0
  1028  00739A  00                 	db	0
  1029  00739B  00                 	db	0
  1030  00739C  00                 	db	0
  1031  00739D  00                 	db	0
  1032  00739E  00                 	db	0
  1033  00739F  00                 	db	0
  1034  0073A0  00                 	db	0
  1035  0073A1  00                 	db	0
  1036  0073A2  00                 	db	0
  1037  0073A3  00                 	db	0
  1038  0073A4  00                 	db	0
  1039  0073A5  0E                 	db	14
  1040  0073A6  0E                 	db	14
  1041  0073A7  0E                 	db	14
  1042  0073A8  00                 	db	0
  1043  0073A9  00                 	db	0
  1044  0073AA  00                 	db	0
  1045  0073AB  00                 	db	0
  1046  0073AC  00                 	db	0
  1047  0073AD  00                 	db	0
  1048  0073AE  00                 	db	0
  1049  0073AF  00                 	db	0
  1050  0073B0  00                 	db	0
  1051  0073B1  00                 	db	0
  1052  0073B2  00                 	db	0
  1053  0073B3  00                 	db	0
  1054  0073B4  00                 	db	0
  1055  0073B5  70                 	db	112
  1056  0073B6  70                 	db	112
  1057  0073B7  70                 	db	112
  1058  0073B8  00                 	db	0
  1059  0073B9  00                 	db	0
  1060  0073BA  00                 	db	0
  1061  0073BB  00                 	db	0
  1062  0073BC  00                 	db	0
  1063  0073BD  00                 	db	0
  1064  0073BE  00                 	db	0
  1065  0073BF  00                 	db	0
  1066  0073C0  00                 	db	0
  1067  0073C1  00                 	db	0
  1068  0073C2  00                 	db	0
  1069  0073C3  00                 	db	0
  1070  0073C4  10                 	db	16
  1071  0073C5  1E                 	db	30
  1072  0073C6  1E                 	db	30
  1073  0073C7  0E                 	db	14
  1074  0073C8  00                 	db	0
  1075  0073C9  00                 	db	0
  1076  0073CA  00                 	db	0
  1077  0073CB  00                 	db	0
  1078  0073CC  00                 	db	0
  1079  0073CD  00                 	db	0
  1080  0073CE  00                 	db	0
  1081  0073CF  00                 	db	0
  1082  0073D0  00                 	db	0
  1083  0073D1  00                 	db	0
  1084  0073D2  80                 	db	128
  1085  0073D3  C0                 	db	192
  1086  0073D4  E0                 	db	224
  1087  0073D5  70                 	db	112
  1088  0073D6  38                 	db	56
  1089  0073D7  1C                 	db	28
  1090  0073D8  0E                 	db	14
  1091  0073D9  06                 	db	6
  1092  0073DA  02                 	db	2
  1093  0073DB  00                 	db	0
  1094  0073DC  00                 	db	0
  1095  0073DD  00                 	db	0
  1096  0073DE  00                 	db	0
  1097  0073DF  00                 	db	0
  1098  0073E0  00                 	db	0
  1099  0073E1  00                 	db	0
  1100  0073E2  01                 	db	1
  1101  0073E3  03                 	db	3
  1102  0073E4  07                 	db	7
  1103  0073E5  0E                 	db	14
  1104  0073E6  1C                 	db	28
  1105  0073E7  38                 	db	56
  1106  0073E8  70                 	db	112
  1107  0073E9  60                 	db	96
  1108  0073EA  40                 	db	64
  1109  0073EB  00                 	db	0
  1110  0073EC  00                 	db	0
  1111  0073ED  00                 	db	0
  1112  0073EE  00                 	db	0
  1113  0073EF  00                 	db	0
  1114  0073F0  00                 	db	0
  1115  0073F1  60                 	db	96
  1116  0073F2  60                 	db	96
  1117  0073F3  60                 	db	96
  1118  0073F4  60                 	db	96
  1119  0073F5  60                 	db	96
  1120  0073F6  60                 	db	96
  1121  0073F7  60                 	db	96
  1122  0073F8  60                 	db	96
  1123  0073F9  60                 	db	96
  1124  0073FA  60                 	db	96
  1125  0073FB  60                 	db	96
  1126  0073FC  60                 	db	96
  1127  0073FD  00                 	db	0
  1128  0073FE  00                 	db	0
  1129  0073FF  00                 	db	0
  1130  007400  00                 	db	0
  1131  007401  06                 	db	6
  1132  007402  06                 	db	6
  1133  007403  06                 	db	6
  1134  007404  06                 	db	6
  1135  007405  06                 	db	6
  1136  007406  06                 	db	6
  1137  007407  06                 	db	6
  1138  007408  06                 	db	6
  1139  007409  06                 	db	6
  1140  00740A  06                 	db	6
  1141  00740B  06                 	db	6
  1142  00740C  06                 	db	6
  1143  00740D  00                 	db	0
  1144  00740E  00                 	db	0
  1145  00740F  00                 	db	0
  1146  007410  00                 	db	0
  1147  007411  00                 	db	0
  1148  007412  02                 	db	2
  1149  007413  06                 	db	6
  1150  007414  0E                 	db	14
  1151  007415  1C                 	db	28
  1152  007416  38                 	db	56
  1153  007417  70                 	db	112
  1154  007418  E0                 	db	224
  1155  007419  C0                 	db	192
  1156  00741A  80                 	db	128
  1157  00741B  00                 	db	0
  1158  00741C  00                 	db	0
  1159  00741D  00                 	db	0
  1160  00741E  00                 	db	0
  1161  00741F  00                 	db	0
  1162  007420  00                 	db	0
  1163  007421  00                 	db	0
  1164  007422  40                 	db	64
  1165  007423  60                 	db	96
  1166  007424  70                 	db	112
  1167  007425  38                 	db	56
  1168  007426  1C                 	db	28
  1169  007427  0E                 	db	14
  1170  007428  07                 	db	7
  1171  007429  03                 	db	3
  1172  00742A  01                 	db	1
  1173  00742B  00                 	db	0
  1174  00742C  00                 	db	0
  1175  00742D  00                 	db	0
  1176  00742E  00                 	db	0
  1177  00742F  00                 	db	0
  1178  007430  00                 	db	0
  1179  007431  00                 	db	0
  1180  007432  18                 	db	24
  1181  007433  1C                 	db	28
  1182  007434  0C                 	db	12
  1183  007435  0E                 	db	14
  1184  007436  06                 	db	6
  1185  007437  86                 	db	134
  1186  007438  CE                 	db	206
  1187  007439  FC                 	db	252
  1188  00743A  7C                 	db	124
  1189  00743B  38                 	db	56
  1190  00743C  00                 	db	0
  1191  00743D  00                 	db	0
  1192  00743E  00                 	db	0
  1193  00743F  00                 	db	0
  1194  007440  00                 	db	0
  1195  007441  00                 	db	0
  1196  007442  00                 	db	0
  1197  007443  00                 	db	0
  1198  007444  00                 	db	0
  1199  007445  00                 	db	0
  1200  007446  73                 	db	115
  1201  007447  73                 	db	115
  1202  007448  73                 	db	115
  1203  007449  00                 	db	0
  1204  00744A  00                 	db	0
  1205  00744B  00                 	db	0
  1206  00744C  00                 	db	0
  1207  00744D  00                 	db	0
  1208  00744E  00                 	db	0
  1209  00744F  00                 	db	0
  1210  007450  00                 	db	0
  1211  007451  00                 	db	0
  1212  007452  FC                 	db	252
  1213  007453  FE                 	db	254
  1214  007454  FE                 	db	254
  1215  007455  02                 	db	2
  1216  007456  02                 	db	2
  1217  007457  C2                 	db	194
  1218  007458  C2                 	db	194
  1219  007459  C2                 	db	194
  1220  00745A  FE                 	db	254
  1221  00745B  FE                 	db	254
  1222  00745C  FC                 	db	252
  1223  00745D  00                 	db	0
  1224  00745E  00                 	db	0
  1225  00745F  00                 	db	0
  1226  007460  00                 	db	0
  1227  007461  00                 	db	0
  1228  007462  3F                 	db	63
  1229  007463  3F                 	db	63
  1230  007464  7F                 	db	127
  1231  007465  60                 	db	96
  1232  007466  60                 	db	96
  1233  007467  63                 	db	99
  1234  007468  63                 	db	99
  1235  007469  63                 	db	99
  1236  00746A  63                 	db	99
  1237  00746B  43                 	db	67
  1238  00746C  03                 	db	3
  1239  00746D  00                 	db	0
  1240  00746E  00                 	db	0
  1241  00746F  00                 	db	0
  1242  007470  00                 	db	0
  1243  007471  00                 	db	0
  1244  007472  E0                 	db	224
  1245  007473  F0                 	db	240
  1246  007474  F8                 	db	248
  1247  007475  1C                 	db	28
  1248  007476  0C                 	db	12
  1249  007477  0C                 	db	12
  1250  007478  1C                 	db	28
  1251  007479  F8                 	db	248
  1252  00747A  F0                 	db	240
  1253  00747B  E0                 	db	224
  1254  00747C  00                 	db	0
  1255  00747D  00                 	db	0
  1256  00747E  00                 	db	0
  1257  00747F  00                 	db	0
  1258  007480  00                 	db	0
  1259  007481  00                 	db	0
  1260  007482  3F                 	db	63
  1261  007483  3F                 	db	63
  1262  007484  3F                 	db	63
  1263  007485  02                 	db	2
  1264  007486  02                 	db	2
  1265  007487  02                 	db	2
  1266  007488  02                 	db	2
  1267  007489  3F                 	db	63
  1268  00748A  3F                 	db	63
  1269  00748B  3F                 	db	63
  1270  00748C  00                 	db	0
  1271  00748D  00                 	db	0
  1272  00748E  00                 	db	0
  1273  00748F  00                 	db	0
  1274  007490  00                 	db	0
  1275  007491  00                 	db	0
  1276  007492  04                 	db	4
  1277  007493  FC                 	db	252
  1278  007494  FC                 	db	252
  1279  007495  FC                 	db	252
  1280  007496  84                 	db	132
  1281  007497  84                 	db	132
  1282  007498  84                 	db	132
  1283  007499  FC                 	db	252
  1284  00749A  FC                 	db	252
  1285  00749B  78                 	db	120
  1286  00749C  00                 	db	0
  1287  00749D  00                 	db	0
  1288  00749E  00                 	db	0
  1289  00749F  00                 	db	0
  1290  0074A0  00                 	db	0
  1291  0074A1  00                 	db	0
  1292  0074A2  20                 	db	32
  1293  0074A3  3F                 	db	63
  1294  0074A4  3F                 	db	63
  1295  0074A5  3F                 	db	63
  1296  0074A6  21                 	db	33
  1297  0074A7  21                 	db	33
  1298  0074A8  21                 	db	33
  1299  0074A9  3F                 	db	63
  1300  0074AA  3F                 	db	63
  1301  0074AB  1E                 	db	30
  1302  0074AC  00                 	db	0
  1303  0074AD  00                 	db	0
  1304  0074AE  00                 	db	0
  1305  0074AF  00                 	db	0
  1306  0074B0  00                 	db	0
  1307  0074B1  00                 	db	0
  1308  0074B2  F0                 	db	240
  1309  0074B3  F8                 	db	248
  1310  0074B4  FC                 	db	252
  1311  0074B5  0C                 	db	12
  1312  0074B6  04                 	db	4
  1313  0074B7  04                 	db	4
  1314  0074B8  04                 	db	4
  1315  0074B9  1C                 	db	28
  1316  0074BA  1C                 	db	28
  1317  0074BB  18                 	db	24
  1318  0074BC  00                 	db	0
  1319  0074BD  00                 	db	0
  1320  0074BE  00                 	db	0
  1321  0074BF  00                 	db	0
  1322  0074C0  00                 	db	0
  1323  0074C1  00                 	db	0
  1324  0074C2  0F                 	db	15
  1325  0074C3  1F                 	db	31
  1326  0074C4  3F                 	db	63
  1327  0074C5  30                 	db	48
  1328  0074C6  20                 	db	32
  1329  0074C7  20                 	db	32
  1330  0074C8  20                 	db	32
  1331  0074C9  38                 	db	56
  1332  0074CA  38                 	db	56
  1333  0074CB  18                 	db	24
  1334  0074CC  00                 	db	0
  1335  0074CD  00                 	db	0
  1336  0074CE  00                 	db	0
  1337  0074CF  00                 	db	0
  1338  0074D0  00                 	db	0
  1339  0074D1  00                 	db	0
  1340  0074D2  04                 	db	4
  1341  0074D3  FC                 	db	252
  1342  0074D4  FC                 	db	252
  1343  0074D5  FC                 	db	252
  1344  0074D6  04                 	db	4
  1345  0074D7  04                 	db	4
  1346  0074D8  0C                 	db	12
  1347  0074D9  FC                 	db	252
  1348  0074DA  F8                 	db	248
  1349  0074DB  F0                 	db	240
  1350  0074DC  00                 	db	0
  1351  0074DD  00                 	db	0
  1352  0074DE  00                 	db	0
  1353  0074DF  00                 	db	0
  1354  0074E0  00                 	db	0
  1355  0074E1  00                 	db	0
  1356  0074E2  20                 	db	32
  1357  0074E3  3F                 	db	63
  1358  0074E4  3F                 	db	63
  1359  0074E5  3F                 	db	63
  1360  0074E6  20                 	db	32
  1361  0074E7  20                 	db	32
  1362  0074E8  30                 	db	48
  1363  0074E9  3F                 	db	63
  1364  0074EA  1F                 	db	31
  1365  0074EB  0F                 	db	15
  1366  0074EC  00                 	db	0
  1367  0074ED  00                 	db	0
  1368  0074EE  00                 	db	0
  1369  0074EF  00                 	db	0
  1370  0074F0  00                 	db	0
  1371  0074F1  00                 	db	0
  1372  0074F2  04                 	db	4
  1373  0074F3  FC                 	db	252
  1374  0074F4  FC                 	db	252
  1375  0074F5  FC                 	db	252
  1376  0074F6  84                 	db	132
  1377  0074F7  84                 	db	132
  1378  0074F8  84                 	db	132
  1379  0074F9  C4                 	db	196
  1380  0074FA  CC                 	db	204
  1381  0074FB  1C                 	db	28
  1382  0074FC  00                 	db	0
  1383  0074FD  00                 	db	0
  1384  0074FE  00                 	db	0
  1385  0074FF  00                 	db	0
  1386  007500  00                 	db	0
  1387  007501  00                 	db	0
  1388  007502  20                 	db	32
  1389  007503  3F                 	db	63
  1390  007504  3F                 	db	63
  1391  007505  3F                 	db	63
  1392  007506  21                 	db	33
  1393  007507  21                 	db	33
  1394  007508  21                 	db	33
  1395  007509  23                 	db	35
  1396  00750A  33                 	db	51
  1397  00750B  38                 	db	56
  1398  00750C  00                 	db	0
  1399  00750D  00                 	db	0
  1400  00750E  00                 	db	0
  1401  00750F  00                 	db	0
  1402  007510  00                 	db	0
  1403  007511  00                 	db	0
  1404  007512  04                 	db	4
  1405  007513  FC                 	db	252
  1406  007514  FC                 	db	252
  1407  007515  FC                 	db	252
  1408  007516  84                 	db	132
  1409  007517  84                 	db	132
  1410  007518  84                 	db	132
  1411  007519  C4                 	db	196
  1412  00751A  CC                 	db	204
  1413  00751B  1C                 	db	28
  1414  00751C  00                 	db	0
  1415  00751D  00                 	db	0
  1416  00751E  00                 	db	0
  1417  00751F  00                 	db	0
  1418  007520  00                 	db	0
  1419  007521  00                 	db	0
  1420  007522  20                 	db	32
  1421  007523  3F                 	db	63
  1422  007524  3F                 	db	63
  1423  007525  3F                 	db	63
  1424  007526  21                 	db	33
  1425  007527  01                 	db	1
  1426  007528  01                 	db	1
  1427  007529  03                 	db	3
  1428  00752A  03                 	db	3
  1429  00752B  00                 	db	0
  1430  00752C  00                 	db	0
  1431  00752D  00                 	db	0
  1432  00752E  00                 	db	0
  1433  00752F  00                 	db	0
  1434  007530  00                 	db	0
  1435  007531  00                 	db	0
  1436  007532  F0                 	db	240
  1437  007533  F8                 	db	248
  1438  007534  FC                 	db	252
  1439  007535  0C                 	db	12
  1440  007536  04                 	db	4
  1441  007537  04                 	db	4
  1442  007538  04                 	db	4
  1443  007539  3C                 	db	60
  1444  00753A  3C                 	db	60
  1445  00753B  38                 	db	56
  1446  00753C  00                 	db	0
  1447  00753D  00                 	db	0
  1448  00753E  00                 	db	0
  1449  00753F  00                 	db	0
  1450  007540  00                 	db	0
  1451  007541  00                 	db	0
  1452  007542  0F                 	db	15
  1453  007543  1F                 	db	31
  1454  007544  3F                 	db	63
  1455  007545  30                 	db	48
  1456  007546  20                 	db	32
  1457  007547  22                 	db	34
  1458  007548  22                 	db	34
  1459  007549  3E                 	db	62
  1460  00754A  3E                 	db	62
  1461  00754B  3E                 	db	62
  1462  00754C  00                 	db	0
  1463  00754D  00                 	db	0
  1464  00754E  00                 	db	0
  1465  00754F  00                 	db	0
  1466  007550  00                 	db	0
  1467  007551  00                 	db	0
  1468  007552  FC                 	db	252
  1469  007553  FC                 	db	252
  1470  007554  FC                 	db	252
  1471  007555  80                 	db	128
  1472  007556  80                 	db	128
  1473  007557  80                 	db	128
  1474  007558  FC                 	db	252
  1475  007559  FC                 	db	252
  1476  00755A  FC                 	db	252
  1477  00755B  00                 	db	0
  1478  00755C  00                 	db	0
  1479  00755D  00                 	db	0
  1480  00755E  00                 	db	0
  1481  00755F  00                 	db	0
  1482  007560  00                 	db	0
  1483  007561  00                 	db	0
  1484  007562  3F                 	db	63
  1485  007563  3F                 	db	63
  1486  007564  3F                 	db	63
  1487  007565  01                 	db	1
  1488  007566  01                 	db	1
  1489  007567  01                 	db	1
  1490  007568  3F                 	db	63
  1491  007569  3F                 	db	63
  1492  00756A  3F                 	db	63
  1493  00756B  00                 	db	0
  1494  00756C  00                 	db	0
  1495  00756D  00                 	db	0
  1496  00756E  00                 	db	0
  1497  00756F  00                 	db	0
  1498  007570  00                 	db	0
  1499  007571  00                 	db	0
  1500  007572  00                 	db	0
  1501  007573  04                 	db	4
  1502  007574  04                 	db	4
  1503  007575  FC                 	db	252
  1504  007576  FC                 	db	252
  1505  007577  FC                 	db	252
  1506  007578  04                 	db	4
  1507  007579  04                 	db	4
  1508  00757A  00                 	db	0
  1509  00757B  00                 	db	0
  1510  00757C  00                 	db	0
  1511  00757D  00                 	db	0
  1512  00757E  00                 	db	0
  1513  00757F  00                 	db	0
  1514  007580  00                 	db	0
  1515  007581  00                 	db	0
  1516  007582  00                 	db	0
  1517  007583  20                 	db	32
  1518  007584  20                 	db	32
  1519  007585  3F                 	db	63
  1520  007586  3F                 	db	63
  1521  007587  3F                 	db	63
  1522  007588  20                 	db	32
  1523  007589  20                 	db	32
  1524  00758A  00                 	db	0
  1525  00758B  00                 	db	0
  1526  00758C  00                 	db	0
  1527  00758D  00                 	db	0
  1528  00758E  00                 	db	0
  1529  00758F  00                 	db	0
  1530  007590  00                 	db	0
  1531  007591  00                 	db	0
  1532  007592  00                 	db	0
  1533  007593  00                 	db	0
  1534  007594  00                 	db	0
  1535  007595  00                 	db	0
  1536  007596  04                 	db	4
  1537  007597  04                 	db	4
  1538  007598  FC                 	db	252
  1539  007599  FC                 	db	252
  1540  00759A  FC                 	db	252
  1541  00759B  04                 	db	4
  1542  00759C  04                 	db	4
  1543  00759D  00                 	db	0
  1544  00759E  00                 	db	0
  1545  00759F  00                 	db	0
  1546  0075A0  00                 	db	0
  1547  0075A1  1E                 	db	30
  1548  0075A2  1E                 	db	30
  1549  0075A3  3E                 	db	62
  1550  0075A4  20                 	db	32
  1551  0075A5  20                 	db	32
  1552  0075A6  20                 	db	32
  1553  0075A7  20                 	db	32
  1554  0075A8  3F                 	db	63
  1555  0075A9  3F                 	db	63
  1556  0075AA  1F                 	db	31
  1557  0075AB  00                 	db	0
  1558  0075AC  00                 	db	0
  1559  0075AD  00                 	db	0
  1560  0075AE  00                 	db	0
  1561  0075AF  00                 	db	0
  1562  0075B0  00                 	db	0
  1563  0075B1  00                 	db	0
  1564  0075B2  04                 	db	4
  1565  0075B3  FC                 	db	252
  1566  0075B4  FC                 	db	252
  1567  0075B5  FC                 	db	252
  1568  0075B6  C0                 	db	192
  1569  0075B7  E0                 	db	224
  1570  0075B8  70                 	db	112
  1571  0075B9  3C                 	db	60
  1572  0075BA  1C                 	db	28
  1573  0075BB  0C                 	db	12
  1574  0075BC  00                 	db	0
  1575  0075BD  00                 	db	0
  1576  0075BE  00                 	db	0
  1577  0075BF  00                 	db	0
  1578  0075C0  00                 	db	0
  1579  0075C1  00                 	db	0
  1580  0075C2  20                 	db	32
  1581  0075C3  3F                 	db	63
  1582  0075C4  3F                 	db	63
  1583  0075C5  3F                 	db	63
  1584  0075C6  03                 	db	3
  1585  0075C7  07                 	db	7
  1586  0075C8  0E                 	db	14
  1587  0075C9  3C                 	db	60
  1588  0075CA  38                 	db	56
  1589  0075CB  30                 	db	48
  1590  0075CC  00                 	db	0
  1591  0075CD  00                 	db	0
  1592  0075CE  00                 	db	0
  1593  0075CF  00                 	db	0
  1594  0075D0  00                 	db	0
  1595  0075D1  00                 	db	0
  1596  0075D2  04                 	db	4
  1597  0075D3  FC                 	db	252
  1598  0075D4  FC                 	db	252
  1599  0075D5  FC                 	db	252
  1600  0075D6  04                 	db	4
  1601  0075D7  00                 	db	0
  1602  0075D8  00                 	db	0
  1603  0075D9  00                 	db	0
  1604  0075DA  00                 	db	0
  1605  0075DB  00                 	db	0
  1606  0075DC  00                 	db	0
  1607  0075DD  00                 	db	0
  1608  0075DE  00                 	db	0
  1609  0075DF  00                 	db	0
  1610  0075E0  00                 	db	0
  1611  0075E1  00                 	db	0
  1612  0075E2  20                 	db	32
  1613  0075E3  3F                 	db	63
  1614  0075E4  3F                 	db	63
  1615  0075E5  3F                 	db	63
  1616  0075E6  20                 	db	32
  1617  0075E7  20                 	db	32
  1618  0075E8  20                 	db	32
  1619  0075E9  30                 	db	48
  1620  0075EA  38                 	db	56
  1621  0075EB  3C                 	db	60
  1622  0075EC  00                 	db	0
  1623  0075ED  00                 	db	0
  1624  0075EE  00                 	db	0
  1625  0075EF  00                 	db	0
  1626  0075F0  00                 	db	0
  1627  0075F1  00                 	db	0
  1628  0075F2  FC                 	db	252
  1629  0075F3  FC                 	db	252
  1630  0075F4  FC                 	db	252
  1631  0075F5  78                 	db	120
  1632  0075F6  F0                 	db	240
  1633  0075F7  E0                 	db	224
  1634  0075F8  F0                 	db	240
  1635  0075F9  78                 	db	120
  1636  0075FA  FC                 	db	252
  1637  0075FB  FC                 	db	252
  1638  0075FC  FC                 	db	252
  1639  0075FD  00                 	db	0
  1640  0075FE  00                 	db	0
  1641  0075FF  00                 	db	0
  1642  007600  00                 	db	0
  1643  007601  00                 	db	0
  1644  007602  3F                 	db	63
  1645  007603  3F                 	db	63
  1646  007604  3F                 	db	63
  1647  007605  00                 	db	0
  1648  007606  00                 	db	0
  1649  007607  01                 	db	1
  1650  007608  00                 	db	0
  1651  007609  00                 	db	0
  1652  00760A  3F                 	db	63
  1653  00760B  3F                 	db	63
  1654  00760C  3F                 	db	63
  1655  00760D  00                 	db	0
  1656  00760E  00                 	db	0
  1657  00760F  00                 	db	0
  1658  007610  00                 	db	0
  1659  007611  00                 	db	0
  1660  007612  FC                 	db	252
  1661  007613  FC                 	db	252
  1662  007614  FC                 	db	252
  1663  007615  70                 	db	112
  1664  007616  E0                 	db	224
  1665  007617  C0                 	db	192
  1666  007618  80                 	db	128
  1667  007619  00                 	db	0
  1668  00761A  FC                 	db	252
  1669  00761B  FC                 	db	252
  1670  00761C  FC                 	db	252
  1671  00761D  00                 	db	0
  1672  00761E  00                 	db	0
  1673  00761F  00                 	db	0
  1674  007620  00                 	db	0
  1675  007621  00                 	db	0
  1676  007622  3F                 	db	63
  1677  007623  3F                 	db	63
  1678  007624  3F                 	db	63
  1679  007625  00                 	db	0
  1680  007626  00                 	db	0
  1681  007627  01                 	db	1
  1682  007628  03                 	db	3
  1683  007629  07                 	db	7
  1684  00762A  3F                 	db	63
  1685  00762B  3F                 	db	63
  1686  00762C  3F                 	db	63
  1687  00762D  00                 	db	0
  1688  00762E  00                 	db	0
  1689  00762F  00                 	db	0
  1690  007630  00                 	db	0
  1691  007631  00                 	db	0
  1692  007632  E0                 	db	224
  1693  007633  F0                 	db	240
  1694  007634  F8                 	db	248
  1695  007635  1C                 	db	28
  1696  007636  0C                 	db	12
  1697  007637  0C                 	db	12
  1698  007638  0C                 	db	12
  1699  007639  1C                 	db	28
  1700  00763A  F8                 	db	248
  1701  00763B  F0                 	db	240
  1702  00763C  E0                 	db	224
  1703  00763D  00                 	db	0
  1704  00763E  00                 	db	0
  1705  00763F  00                 	db	0
  1706  007640  00                 	db	0
  1707  007641  00                 	db	0
  1708  007642  07                 	db	7
  1709  007643  0F                 	db	15
  1710  007644  1F                 	db	31
  1711  007645  38                 	db	56
  1712  007646  30                 	db	48
  1713  007647  30                 	db	48
  1714  007648  30                 	db	48
  1715  007649  38                 	db	56
  1716  00764A  1F                 	db	31
  1717  00764B  0F                 	db	15
  1718  00764C  07                 	db	7
  1719  00764D  00                 	db	0
  1720  00764E  00                 	db	0
  1721  00764F  00                 	db	0
  1722  007650  00                 	db	0
  1723  007651  00                 	db	0
  1724  007652  04                 	db	4
  1725  007653  FC                 	db	252
  1726  007654  FC                 	db	252
  1727  007655  FC                 	db	252
  1728  007656  84                 	db	132
  1729  007657  84                 	db	132
  1730  007658  84                 	db	132
  1731  007659  FC                 	db	252
  1732  00765A  FC                 	db	252
  1733  00765B  78                 	db	120
  1734  00765C  00                 	db	0
  1735  00765D  00                 	db	0
  1736  00765E  00                 	db	0
  1737  00765F  00                 	db	0
  1738  007660  00                 	db	0
  1739  007661  00                 	db	0
  1740  007662  20                 	db	32
  1741  007663  3F                 	db	63
  1742  007664  3F                 	db	63
  1743  007665  3F                 	db	63
  1744  007666  21                 	db	33
  1745  007667  01                 	db	1
  1746  007668  01                 	db	1
  1747  007669  01                 	db	1
  1748  00766A  01                 	db	1
  1749  00766B  00                 	db	0
  1750  00766C  00                 	db	0
  1751  00766D  00                 	db	0
  1752  00766E  00                 	db	0
  1753  00766F  00                 	db	0
  1754  007670  00                 	db	0
  1755  007671  00                 	db	0
  1756  007672  E0                 	db	224
  1757  007673  F8                 	db	248
  1758  007674  F8                 	db	248
  1759  007675  1C                 	db	28
  1760  007676  0C                 	db	12
  1761  007677  04                 	db	4
  1762  007678  0C                 	db	12
  1763  007679  1C                 	db	28
  1764  00767A  F8                 	db	248
  1765  00767B  F8                 	db	248
  1766  00767C  E0                 	db	224
  1767  00767D  00                 	db	0
  1768  00767E  00                 	db	0
  1769  00767F  00                 	db	0
  1770  007680  00                 	db	0
  1771  007681  00                 	db	0
  1772  007682  07                 	db	7
  1773  007683  1F                 	db	31
  1774  007684  1F                 	db	31
  1775  007685  18                 	db	24
  1776  007686  18                 	db	24
  1777  007687  5C                 	db	92
  1778  007688  5E                 	db	94
  1779  007689  7E                 	db	126
  1780  00768A  7F                 	db	127
  1781  00768B  7F                 	db	127
  1782  00768C  47                 	db	71
  1783  00768D  00                 	db	0
  1784  00768E  00                 	db	0
  1785  00768F  00                 	db	0
  1786  007690  00                 	db	0
  1787  007691  00                 	db	0
  1788  007692  04                 	db	4
  1789  007693  FC                 	db	252
  1790  007694  FC                 	db	252
  1791  007695  FC                 	db	252
  1792  007696  84                 	db	132
  1793  007697  84                 	db	132
  1794  007698  84                 	db	132
  1795  007699  FC                 	db	252
  1796  00769A  FC                 	db	252
  1797  00769B  78                 	db	120
  1798  00769C  00                 	db	0
  1799  00769D  00                 	db	0
  1800  00769E  00                 	db	0
  1801  00769F  00                 	db	0
  1802  0076A0  00                 	db	0
  1803  0076A1  00                 	db	0
  1804  0076A2  20                 	db	32
  1805  0076A3  3F                 	db	63
  1806  0076A4  3F                 	db	63
  1807  0076A5  3F                 	db	63
  1808  0076A6  01                 	db	1
  1809  0076A7  01                 	db	1
  1810  0076A8  03                 	db	3
  1811  0076A9  3F                 	db	63
  1812  0076AA  3F                 	db	63
  1813  0076AB  3C                 	db	60
  1814  0076AC  00                 	db	0
  1815  0076AD  00                 	db	0
  1816  0076AE  00                 	db	0
  1817  0076AF  00                 	db	0
  1818  0076B0  00                 	db	0
  1819  0076B1  00                 	db	0
  1820  0076B2  78                 	db	120
  1821  0076B3  FC                 	db	252
  1822  0076B4  FC                 	db	252
  1823  0076B5  84                 	db	132
  1824  0076B6  84                 	db	132
  1825  0076B7  84                 	db	132
  1826  0076B8  84                 	db	132
  1827  0076B9  BC                 	db	188
  1828  0076BA  3C                 	db	60
  1829  0076BB  38                 	db	56
  1830  0076BC  00                 	db	0
  1831  0076BD  00                 	db	0
  1832  0076BE  00                 	db	0
  1833  0076BF  00                 	db	0
  1834  0076C0  00                 	db	0
  1835  0076C1  00                 	db	0
  1836  0076C2  1C                 	db	28
  1837  0076C3  3C                 	db	60
  1838  0076C4  3D                 	db	61
  1839  0076C5  21                 	db	33
  1840  0076C6  21                 	db	33
  1841  0076C7  21                 	db	33
  1842  0076C8  21                 	db	33
  1843  0076C9  3F                 	db	63
  1844  0076CA  3F                 	db	63
  1845  0076CB  1E                 	db	30
  1846  0076CC  00                 	db	0
  1847  0076CD  00                 	db	0
  1848  0076CE  00                 	db	0
  1849  0076CF  00                 	db	0
  1850  0076D0  00                 	db	0
  1851  0076D1  00                 	db	0
  1852  0076D2  1C                 	db	28
  1853  0076D3  0C                 	db	12
  1854  0076D4  04                 	db	4
  1855  0076D5  04                 	db	4
  1856  0076D6  FC                 	db	252
  1857  0076D7  FC                 	db	252
  1858  0076D8  FC                 	db	252
  1859  0076D9  04                 	db	4
  1860  0076DA  04                 	db	4
  1861  0076DB  0C                 	db	12
  1862  0076DC  1C                 	db	28
  1863  0076DD  00                 	db	0
  1864  0076DE  00                 	db	0
  1865  0076DF  00                 	db	0
  1866  0076E0  00                 	db	0
  1867  0076E1  00                 	db	0
  1868  0076E2  00                 	db	0
  1869  0076E3  00                 	db	0
  1870  0076E4  20                 	db	32
  1871  0076E5  20                 	db	32
  1872  0076E6  3F                 	db	63
  1873  0076E7  3F                 	db	63
  1874  0076E8  3F                 	db	63
  1875  0076E9  20                 	db	32
  1876  0076EA  20                 	db	32
  1877  0076EB  00                 	db	0
  1878  0076EC  00                 	db	0
  1879  0076ED  00                 	db	0
  1880  0076EE  00                 	db	0
  1881  0076EF  00                 	db	0
  1882  0076F0  00                 	db	0
  1883  0076F1  00                 	db	0
  1884  0076F2  FC                 	db	252
  1885  0076F3  FC                 	db	252
  1886  0076F4  FC                 	db	252
  1887  0076F5  00                 	db	0
  1888  0076F6  00                 	db	0
  1889  0076F7  00                 	db	0
  1890  0076F8  FC                 	db	252
  1891  0076F9  FC                 	db	252
  1892  0076FA  FC                 	db	252
  1893  0076FB  00                 	db	0
  1894  0076FC  00                 	db	0
  1895  0076FD  00                 	db	0
  1896  0076FE  00                 	db	0
  1897  0076FF  00                 	db	0
  1898  007700  00                 	db	0
  1899  007701  00                 	db	0
  1900  007702  1F                 	db	31
  1901  007703  3F                 	db	63
  1902  007704  3F                 	db	63
  1903  007705  20                 	db	32
  1904  007706  20                 	db	32
  1905  007707  20                 	db	32
  1906  007708  3F                 	db	63
  1907  007709  3F                 	db	63
  1908  00770A  1F                 	db	31
  1909  00770B  00                 	db	0
  1910  00770C  00                 	db	0
  1911  00770D  00                 	db	0
  1912  00770E  00                 	db	0
  1913  00770F  00                 	db	0
  1914  007710  00                 	db	0
  1915  007711  00                 	db	0
  1916  007712  FC                 	db	252
  1917  007713  FC                 	db	252
  1918  007714  FC                 	db	252
  1919  007715  00                 	db	0
  1920  007716  00                 	db	0
  1921  007717  00                 	db	0
  1922  007718  FC                 	db	252
  1923  007719  FC                 	db	252
  1924  00771A  FC                 	db	252
  1925  00771B  00                 	db	0
  1926  00771C  00                 	db	0
  1927  00771D  00                 	db	0
  1928  00771E  00                 	db	0
  1929  00771F  00                 	db	0
  1930  007720  00                 	db	0
  1931  007721  00                 	db	0
  1932  007722  07                 	db	7
  1933  007723  0F                 	db	15
  1934  007724  1F                 	db	31
  1935  007725  38                 	db	56
  1936  007726  30                 	db	48
  1937  007727  38                 	db	56
  1938  007728  1F                 	db	31
  1939  007729  0F                 	db	15
  1940  00772A  07                 	db	7
  1941  00772B  00                 	db	0
  1942  00772C  00                 	db	0
  1943  00772D  00                 	db	0
  1944  00772E  00                 	db	0
  1945  00772F  00                 	db	0
  1946  007730  00                 	db	0
  1947  007731  00                 	db	0
  1948  007732  FC                 	db	252
  1949  007733  FC                 	db	252
  1950  007734  FC                 	db	252
  1951  007735  00                 	db	0
  1952  007736  00                 	db	0
  1953  007737  80                 	db	128
  1954  007738  00                 	db	0
  1955  007739  00                 	db	0
  1956  00773A  FC                 	db	252
  1957  00773B  FC                 	db	252
  1958  00773C  FC                 	db	252
  1959  00773D  00                 	db	0
  1960  00773E  00                 	db	0
  1961  00773F  00                 	db	0
  1962  007740  00                 	db	0
  1963  007741  00                 	db	0
  1964  007742  03                 	db	3
  1965  007743  0F                 	db	15
  1966  007744  3F                 	db	63
  1967  007745  3C                 	db	60
  1968  007746  3C                 	db	60
  1969  007747  0F                 	db	15
  1970  007748  3C                 	db	60
  1971  007749  3C                 	db	60
  1972  00774A  3F                 	db	63
  1973  00774B  0F                 	db	15
  1974  00774C  03                 	db	3
  1975  00774D  00                 	db	0
  1976  00774E  00                 	db	0
  1977  00774F  00                 	db	0
  1978  007750  00                 	db	0
  1979  007751  00                 	db	0
  1980  007752  1C                 	db	28
  1981  007753  3C                 	db	60
  1982  007754  7C                 	db	124
  1983  007755  E0                 	db	224
  1984  007756  C0                 	db	192
  1985  007757  E0                 	db	224
  1986  007758  7C                 	db	124
  1987  007759  3C                 	db	60
  1988  00775A  1C                 	db	28
  1989  00775B  00                 	db	0
  1990  00775C  00                 	db	0
  1991  00775D  00                 	db	0
  1992  00775E  00                 	db	0
  1993  00775F  00                 	db	0
  1994  007760  00                 	db	0
  1995  007761  00                 	db	0
  1996  007762  38                 	db	56
  1997  007763  3C                 	db	60
  1998  007764  3E                 	db	62
  1999  007765  07                 	db	7
  2000  007766  03                 	db	3
  2001  007767  07                 	db	7
  2002  007768  3E                 	db	62
  2003  007769  3C                 	db	60
  2004  00776A  38                 	db	56
  2005  00776B  00                 	db	0
  2006  00776C  00                 	db	0
  2007  00776D  00                 	db	0
  2008  00776E  00                 	db	0
  2009  00776F  00                 	db	0
  2010  007770  00                 	db	0
  2011  007771  00                 	db	0
  2012  007772  7C                 	db	124
  2013  007773  FC                 	db	252
  2014  007774  FC                 	db	252
  2015  007775  80                 	db	128
  2016  007776  00                 	db	0
  2017  007777  80                 	db	128
  2018  007778  FC                 	db	252
  2019  007779  FC                 	db	252
  2020  00777A  7C                 	db	124
  2021  00777B  00                 	db	0
  2022  00777C  00                 	db	0
  2023  00777D  00                 	db	0
  2024  00777E  00                 	db	0
  2025  00777F  00                 	db	0
  2026  007780  00                 	db	0
  2027  007781  00                 	db	0
  2028  007782  00                 	db	0
  2029  007783  20                 	db	32
  2030  007784  21                 	db	33
  2031  007785  3F                 	db	63
  2032  007786  3F                 	db	63
  2033  007787  3F                 	db	63
  2034  007788  21                 	db	33
  2035  007789  20                 	db	32
  2036  00778A  00                 	db	0
  2037  00778B  00                 	db	0
  2038  00778C  00                 	db	0
  2039  00778D  00                 	db	0
  2040  00778E  00                 	db	0
  2041  00778F  00                 	db	0
  2042  007790  00                 	db	0
  2043  007791  00                 	db	0
  2044  007792  3C                 	db	60
  2045  007793  1C                 	db	28
  2046  007794  0C                 	db	12
  2047  007795  04                 	db	4
  2048  007796  84                 	db	132
  2049  007797  C4                 	db	196
  2050  007798  E4                 	db	228
  2051  007799  7C                 	db	124
  2052  00779A  3C                 	db	60
  2053  00779B  1C                 	db	28
  2054  00779C  00                 	db	0
  2055  00779D  00                 	db	0
  2056  00779E  00                 	db	0
  2057  00779F  00                 	db	0
  2058  0077A0  00                 	db	0
  2059  0077A1  00                 	db	0
  2060  0077A2  38                 	db	56
  2061  0077A3  3C                 	db	60
  2062  0077A4  3E                 	db	62
  2063  0077A5  27                 	db	39
  2064  0077A6  23                 	db	35
  2065  0077A7  21                 	db	33
  2066  0077A8  20                 	db	32
  2067  0077A9  30                 	db	48
  2068  0077AA  38                 	db	56
  2069  0077AB  3C                 	db	60
  2070  0077AC  00                 	db	0
  2071  0077AD  00                 	db	0
  2072  0077AE  00                 	db	0
  2073  0077AF  00                 	db	0
  2074  0077B0  00                 	db	0
  2075  0077B1  00                 	db	0
  2076  0077B2  00                 	db	0
  2077  0077B3  00                 	db	0
  2078  0077B4  FC                 	db	252
  2079  0077B5  FC                 	db	252
  2080  0077B6  FC                 	db	252
  2081  0077B7  04                 	db	4
  2082  0077B8  04                 	db	4
  2083  0077B9  04                 	db	4
  2084  0077BA  04                 	db	4
  2085  0077BB  00                 	db	0
  2086  0077BC  00                 	db	0
  2087  0077BD  00                 	db	0
  2088  0077BE  00                 	db	0
  2089  0077BF  00                 	db	0
  2090  0077C0  00                 	db	0
  2091  0077C1  00                 	db	0
  2092  0077C2  00                 	db	0
  2093  0077C3  00                 	db	0
  2094  0077C4  3F                 	db	63
  2095  0077C5  3F                 	db	63
  2096  0077C6  3F                 	db	63
  2097  0077C7  20                 	db	32
  2098  0077C8  20                 	db	32
  2099  0077C9  20                 	db	32
  2100  0077CA  20                 	db	32
  2101  0077CB  00                 	db	0
  2102  0077CC  00                 	db	0
  2103  0077CD  00                 	db	0
  2104  0077CE  00                 	db	0
  2105  0077CF  00                 	db	0
  2106  0077D0  00                 	db	0
  2107  0077D1  00                 	db	0
  2108  0077D2  1C                 	db	28
  2109  0077D3  38                 	db	56
  2110  0077D4  70                 	db	112
  2111  0077D5  E0                 	db	224
  2112  0077D6  C0                 	db	192
  2113  0077D7  80                 	db	128
  2114  0077D8  00                 	db	0
  2115  0077D9  00                 	db	0
  2116  0077DA  00                 	db	0
  2117  0077DB  00                 	db	0
  2118  0077DC  00                 	db	0
  2119  0077DD  00                 	db	0
  2120  0077DE  00                 	db	0
  2121  0077DF  00                 	db	0
  2122  0077E0  00                 	db	0
  2123  0077E1  00                 	db	0
  2124  0077E2  00                 	db	0
  2125  0077E3  00                 	db	0
  2126  0077E4  00                 	db	0
  2127  0077E5  00                 	db	0
  2128  0077E6  01                 	db	1
  2129  0077E7  03                 	db	3
  2130  0077E8  07                 	db	7
  2131  0077E9  0E                 	db	14
  2132  0077EA  1C                 	db	28
  2133  0077EB  18                 	db	24
  2134  0077EC  30                 	db	48
  2135  0077ED  20                 	db	32
  2136  0077EE  20                 	db	32
  2137  0077EF  00                 	db	0
  2138  0077F0  00                 	db	0
  2139  0077F1  00                 	db	0
  2140  0077F2  00                 	db	0
  2141  0077F3  00                 	db	0
  2142  0077F4  04                 	db	4
  2143  0077F5  04                 	db	4
  2144  0077F6  04                 	db	4
  2145  0077F7  04                 	db	4
  2146  0077F8  FC                 	db	252
  2147  0077F9  FC                 	db	252
  2148  0077FA  FC                 	db	252
  2149  0077FB  00                 	db	0
  2150  0077FC  00                 	db	0
  2151  0077FD  00                 	db	0
  2152  0077FE  00                 	db	0
  2153  0077FF  00                 	db	0
  2154  007800  00                 	db	0
  2155  007801  00                 	db	0
  2156  007802  00                 	db	0
  2157  007803  00                 	db	0
  2158  007804  20                 	db	32
  2159  007805  20                 	db	32
  2160  007806  20                 	db	32
  2161  007807  20                 	db	32
  2162  007808  3F                 	db	63
  2163  007809  3F                 	db	63
  2164  00780A  3F                 	db	63
  2165  00780B  00                 	db	0
  2166  00780C  00                 	db	0
  2167  00780D  00                 	db	0
  2168  00780E  00                 	db	0
  2169  00780F  00                 	db	0
  2170  007810  00                 	db	0
  2171  007811  00                 	db	0
  2172  007812  20                 	db	32
  2173  007813  30                 	db	48
  2174  007814  38                 	db	56
  2175  007815  1C                 	db	28
  2176  007816  0E                 	db	14
  2177  007817  0E                 	db	14
  2178  007818  1C                 	db	28
  2179  007819  38                 	db	56
  2180  00781A  30                 	db	48
  2181  00781B  20                 	db	32
  2182  00781C  00                 	db	0
  2183  00781D  00                 	db	0
  2184  00781E  00                 	db	0
  2185  00781F  00                 	db	0
  2186  007820  00                 	db	0
  2187  007821  00                 	db	0
  2188  007822  00                 	db	0
  2189  007823  00                 	db	0
  2190  007824  00                 	db	0
  2191  007825  00                 	db	0
  2192  007826  00                 	db	0
  2193  007827  00                 	db	0
  2194  007828  00                 	db	0
  2195  007829  00                 	db	0
  2196  00782A  00                 	db	0
  2197  00782B  00                 	db	0
  2198  00782C  00                 	db	0
  2199  00782D  00                 	db	0
  2200  00782E  00                 	db	0
  2201  00782F  00                 	db	0
  2202  007830  00                 	db	0
  2203  007831  00                 	db	0
  2204  007832  00                 	db	0
  2205  007833  00                 	db	0
  2206  007834  00                 	db	0
  2207  007835  00                 	db	0
  2208  007836  00                 	db	0
  2209  007837  00                 	db	0
  2210  007838  00                 	db	0
  2211  007839  00                 	db	0
  2212  00783A  00                 	db	0
  2213  00783B  00                 	db	0
  2214  00783C  00                 	db	0
  2215  00783D  00                 	db	0
  2216  00783E  00                 	db	0
  2217  00783F  00                 	db	0
  2218  007840  C0                 	db	192
  2219  007841  C0                 	db	192
  2220  007842  C0                 	db	192
  2221  007843  C0                 	db	192
  2222  007844  C0                 	db	192
  2223  007845  C0                 	db	192
  2224  007846  C0                 	db	192
  2225  007847  C0                 	db	192
  2226  007848  C0                 	db	192
  2227  007849  C0                 	db	192
  2228  00784A  C0                 	db	192
  2229  00784B  C0                 	db	192
  2230  00784C  C0                 	db	192
  2231  00784D  C0                 	db	192
  2232  00784E  C0                 	db	192
  2233  00784F  00                 	db	0
  2234  007850  00                 	db	0
  2235  007851  00                 	db	0
  2236  007852  0C                 	db	12
  2237  007853  0C                 	db	12
  2238  007854  3C                 	db	60
  2239  007855  30                 	db	48
  2240  007856  30                 	db	48
  2241  007857  00                 	db	0
  2242  007858  00                 	db	0
  2243  007859  00                 	db	0
  2244  00785A  00                 	db	0
  2245  00785B  00                 	db	0
  2246  00785C  00                 	db	0
  2247  00785D  00                 	db	0
  2248  00785E  00                 	db	0
  2249  00785F  00                 	db	0
  2250  007860  00                 	db	0
  2251  007861  00                 	db	0
  2252  007862  00                 	db	0
  2253  007863  00                 	db	0
  2254  007864  00                 	db	0
  2255  007865  00                 	db	0
  2256  007866  00                 	db	0
  2257  007867  00                 	db	0
  2258  007868  00                 	db	0
  2259  007869  00                 	db	0
  2260  00786A  00                 	db	0
  2261  00786B  00                 	db	0
  2262  00786C  00                 	db	0
  2263  00786D  00                 	db	0
  2264  00786E  00                 	db	0
  2265  00786F  00                 	db	0
  2266  007870  00                 	db	0
  2267  007871  00                 	db	0
  2268  007872  00                 	db	0
  2269  007873  40                 	db	64
  2270  007874  40                 	db	64
  2271  007875  40                 	db	64
  2272  007876  40                 	db	64
  2273  007877  40                 	db	64
  2274  007878  C0                 	db	192
  2275  007879  C0                 	db	192
  2276  00787A  80                 	db	128
  2277  00787B  00                 	db	0
  2278  00787C  00                 	db	0
  2279  00787D  00                 	db	0
  2280  00787E  00                 	db	0
  2281  00787F  00                 	db	0
  2282  007880  00                 	db	0
  2283  007881  00                 	db	0
  2284  007882  1C                 	db	28
  2285  007883  3E                 	db	62
  2286  007884  3E                 	db	62
  2287  007885  22                 	db	34
  2288  007886  22                 	db	34
  2289  007887  22                 	db	34
  2290  007888  3F                 	db	63
  2291  007889  1F                 	db	31
  2292  00788A  3F                 	db	63
  2293  00788B  20                 	db	32
  2294  00788C  00                 	db	0
  2295  00788D  00                 	db	0
  2296  00788E  00                 	db	0
  2297  00788F  00                 	db	0
  2298  007890  00                 	db	0
  2299  007891  00                 	db	0
  2300  007892  04                 	db	4
  2301  007893  FC                 	db	252
  2302  007894  FC                 	db	252
  2303  007895  FC                 	db	252
  2304  007896  40                 	db	64
  2305  007897  40                 	db	64
  2306  007898  40                 	db	64
  2307  007899  C0                 	db	192
  2308  00789A  C0                 	db	192
  2309  00789B  80                 	db	128
  2310  00789C  00                 	db	0
  2311  00789D  00                 	db	0
  2312  00789E  00                 	db	0
  2313  00789F  00                 	db	0
  2314  0078A0  00                 	db	0
  2315  0078A1  00                 	db	0
  2316  0078A2  20                 	db	32
  2317  0078A3  3F                 	db	63
  2318  0078A4  1F                 	db	31
  2319  0078A5  3F                 	db	63
  2320  0078A6  20                 	db	32
  2321  0078A7  20                 	db	32
  2322  0078A8  20                 	db	32
  2323  0078A9  3F                 	db	63
  2324  0078AA  3F                 	db	63
  2325  0078AB  1F                 	db	31
  2326  0078AC  00                 	db	0
  2327  0078AD  00                 	db	0
  2328  0078AE  00                 	db	0
  2329  0078AF  00                 	db	0
  2330  0078B0  00                 	db	0
  2331  0078B1  00                 	db	0
  2332  0078B2  80                 	db	128
  2333  0078B3  C0                 	db	192
  2334  0078B4  C0                 	db	192
  2335  0078B5  40                 	db	64
  2336  0078B6  40                 	db	64
  2337  0078B7  40                 	db	64
  2338  0078B8  C0                 	db	192
  2339  0078B9  C0                 	db	192
  2340  0078BA  80                 	db	128
  2341  0078BB  00                 	db	0
  2342  0078BC  00                 	db	0
  2343  0078BD  00                 	db	0
  2344  0078BE  00                 	db	0
  2345  0078BF  00                 	db	0
  2346  0078C0  00                 	db	0
  2347  0078C1  00                 	db	0
  2348  0078C2  1F                 	db	31
  2349  0078C3  3F                 	db	63
  2350  0078C4  3F                 	db	63
  2351  0078C5  20                 	db	32
  2352  0078C6  20                 	db	32
  2353  0078C7  20                 	db	32
  2354  0078C8  39                 	db	57
  2355  0078C9  39                 	db	57
  2356  0078CA  19                 	db	25
  2357  0078CB  00                 	db	0
  2358  0078CC  00                 	db	0
  2359  0078CD  00                 	db	0
  2360  0078CE  00                 	db	0
  2361  0078CF  00                 	db	0
  2362  0078D0  00                 	db	0
  2363  0078D1  00                 	db	0
  2364  0078D2  80                 	db	128
  2365  0078D3  C0                 	db	192
  2366  0078D4  C0                 	db	192
  2367  0078D5  40                 	db	64
  2368  0078D6  40                 	db	64
  2369  0078D7  44                 	db	68
  2370  0078D8  FC                 	db	252
  2371  0078D9  FC                 	db	252
  2372  0078DA  FC                 	db	252
  2373  0078DB  04                 	db	4
  2374  0078DC  00                 	db	0
  2375  0078DD  00                 	db	0
  2376  0078DE  00                 	db	0
  2377  0078DF  00                 	db	0
  2378  0078E0  00                 	db	0
  2379  0078E1  00                 	db	0
  2380  0078E2  1F                 	db	31
  2381  0078E3  3F                 	db	63
  2382  0078E4  3F                 	db	63
  2383  0078E5  20                 	db	32
  2384  0078E6  20                 	db	32
  2385  0078E7  20                 	db	32
  2386  0078E8  3F                 	db	63
  2387  0078E9  1F                 	db	31
  2388  0078EA  3F                 	db	63
  2389  0078EB  20                 	db	32
  2390  0078EC  00                 	db	0
  2391  0078ED  00                 	db	0
  2392  0078EE  00                 	db	0
  2393  0078EF  00                 	db	0
  2394  0078F0  00                 	db	0
  2395  0078F1  00                 	db	0
  2396  0078F2  80                 	db	128
  2397  0078F3  C0                 	db	192
  2398  0078F4  C0                 	db	192
  2399  0078F5  40                 	db	64
  2400  0078F6  40                 	db	64
  2401  0078F7  40                 	db	64
  2402  0078F8  C0                 	db	192
  2403  0078F9  C0                 	db	192
  2404  0078FA  80                 	db	128
  2405  0078FB  00                 	db	0
  2406  0078FC  00                 	db	0
  2407  0078FD  00                 	db	0
  2408  0078FE  00                 	db	0
  2409  0078FF  00                 	db	0
  2410  007900  00                 	db	0
  2411  007901  00                 	db	0
  2412  007902  1F                 	db	31
  2413  007903  3F                 	db	63
  2414  007904  3F                 	db	63
  2415  007905  22                 	db	34
  2416  007906  22                 	db	34
  2417  007907  22                 	db	34
  2418  007908  3B                 	db	59
  2419  007909  3B                 	db	59
  2420  00790A  1B                 	db	27
  2421  00790B  00                 	db	0
  2422  00790C  00                 	db	0
  2423  00790D  00                 	db	0
  2424  00790E  00                 	db	0
  2425  00790F  00                 	db	0
  2426  007910  00                 	db	0
  2427  007911  00                 	db	0
  2428  007912  80                 	db	128
  2429  007913  80                 	db	128
  2430  007914  F8                 	db	248
  2431  007915  FC                 	db	252
  2432  007916  FC                 	db	252
  2433  007917  84                 	db	132
  2434  007918  9C                 	db	156
  2435  007919  9C                 	db	156
  2436  00791A  18                 	db	24
  2437  00791B  00                 	db	0
  2438  00791C  00                 	db	0
  2439  00791D  00                 	db	0
  2440  00791E  00                 	db	0
  2441  00791F  00                 	db	0
  2442  007920  00                 	db	0
  2443  007921  00                 	db	0
  2444  007922  21                 	db	33
  2445  007923  21                 	db	33
  2446  007924  3F                 	db	63
  2447  007925  3F                 	db	63
  2448  007926  3F                 	db	63
  2449  007927  21                 	db	33
  2450  007928  21                 	db	33
  2451  007929  01                 	db	1
  2452  00792A  00                 	db	0
  2453  00792B  00                 	db	0
  2454  00792C  00                 	db	0
  2455  00792D  00                 	db	0
  2456  00792E  00                 	db	0
  2457  00792F  00                 	db	0
  2458  007930  00                 	db	0
  2459  007931  00                 	db	0
  2460  007932  80                 	db	128
  2461  007933  C0                 	db	192
  2462  007934  C0                 	db	192
  2463  007935  40                 	db	64
  2464  007936  40                 	db	64
  2465  007937  40                 	db	64
  2466  007938  C0                 	db	192
  2467  007939  80                 	db	128
  2468  00793A  C0                 	db	192
  2469  00793B  40                 	db	64
  2470  00793C  00                 	db	0
  2471  00793D  00                 	db	0
  2472  00793E  00                 	db	0
  2473  00793F  00                 	db	0
  2474  007940  00                 	db	0
  2475  007941  00                 	db	0
  2476  007942  47                 	db	71
  2477  007943  CF                 	db	207
  2478  007944  DF                 	db	223
  2479  007945  98                 	db	152
  2480  007946  98                 	db	152
  2481  007947  98                 	db	152
  2482  007948  FF                 	db	255
  2483  007949  FF                 	db	255
  2484  00794A  7F                 	db	127
  2485  00794B  00                 	db	0
  2486  00794C  00                 	db	0
  2487  00794D  00                 	db	0
  2488  00794E  00                 	db	0
  2489  00794F  00                 	db	0
  2490  007950  00                 	db	0
  2491  007951  00                 	db	0
  2492  007952  04                 	db	4
  2493  007953  FC                 	db	252
  2494  007954  FC                 	db	252
  2495  007955  FC                 	db	252
  2496  007956  80                 	db	128
  2497  007957  40                 	db	64
  2498  007958  40                 	db	64
  2499  007959  C0                 	db	192
  2500  00795A  C0                 	db	192
  2501  00795B  80                 	db	128
  2502  00795C  00                 	db	0
  2503  00795D  00                 	db	0
  2504  00795E  00                 	db	0
  2505  00795F  00                 	db	0
  2506  007960  00                 	db	0
  2507  007961  00                 	db	0
  2508  007962  20                 	db	32
  2509  007963  3F                 	db	63
  2510  007964  3F                 	db	63
  2511  007965  3F                 	db	63
  2512  007966  01                 	db	1
  2513  007967  00                 	db	0
  2514  007968  00                 	db	0
  2515  007969  3F                 	db	63
  2516  00796A  3F                 	db	63
  2517  00796B  3F                 	db	63
  2518  00796C  00                 	db	0
  2519  00796D  00                 	db	0
  2520  00796E  00                 	db	0
  2521  00796F  00                 	db	0
  2522  007970  00                 	db	0
  2523  007971  00                 	db	0
  2524  007972  00                 	db	0
  2525  007973  40                 	db	64
  2526  007974  40                 	db	64
  2527  007975  40                 	db	64
  2528  007976  DC                 	db	220
  2529  007977  DC                 	db	220
  2530  007978  DC                 	db	220
  2531  007979  00                 	db	0
  2532  00797A  00                 	db	0
  2533  00797B  00                 	db	0
  2534  00797C  00                 	db	0
  2535  00797D  00                 	db	0
  2536  00797E  00                 	db	0
  2537  00797F  00                 	db	0
  2538  007980  00                 	db	0
  2539  007981  00                 	db	0
  2540  007982  00                 	db	0
  2541  007983  20                 	db	32
  2542  007984  20                 	db	32
  2543  007985  20                 	db	32
  2544  007986  3F                 	db	63
  2545  007987  3F                 	db	63
  2546  007988  3F                 	db	63
  2547  007989  20                 	db	32
  2548  00798A  20                 	db	32
  2549  00798B  20                 	db	32
  2550  00798C  00                 	db	0
  2551  00798D  00                 	db	0
  2552  00798E  00                 	db	0
  2553  00798F  00                 	db	0
  2554  007990  00                 	db	0
  2555  007991  00                 	db	0
  2556  007992  00                 	db	0
  2557  007993  00                 	db	0
  2558  007994  00                 	db	0
  2559  007995  40                 	db	64
  2560  007996  40                 	db	64
  2561  007997  40                 	db	64
  2562  007998  DC                 	db	220
  2563  007999  DC                 	db	220
  2564  00799A  DC                 	db	220
  2565  00799B  00                 	db	0
  2566  00799C  00                 	db	0
  2567  00799D  00                 	db	0
  2568  00799E  00                 	db	0
  2569  00799F  00                 	db	0
  2570  0079A0  00                 	db	0
  2571  0079A1  00                 	db	0
  2572  0079A2  20                 	db	32
  2573  0079A3  60                 	db	96
  2574  0079A4  E0                 	db	224
  2575  0079A5  80                 	db	128
  2576  0079A6  80                 	db	128
  2577  0079A7  C0                 	db	192
  2578  0079A8  FF                 	db	255
  2579  0079A9  FF                 	db	255
  2580  0079AA  7F                 	db	127
  2581  0079AB  00                 	db	0
  2582  0079AC  00                 	db	0
  2583  0079AD  00                 	db	0
  2584  0079AE  00                 	db	0
  2585  0079AF  00                 	db	0
  2586  0079B0  00                 	db	0
  2587  0079B1  00                 	db	0
  2588  0079B2  04                 	db	4
  2589  0079B3  FC                 	db	252
  2590  0079B4  FC                 	db	252
  2591  0079B5  FC                 	db	252
  2592  0079B6  00                 	db	0
  2593  0079B7  00                 	db	0
  2594  0079B8  80                 	db	128
  2595  0079B9  C0                 	db	192
  2596  0079BA  C0                 	db	192
  2597  0079BB  40                 	db	64
  2598  0079BC  00                 	db	0
  2599  0079BD  00                 	db	0
  2600  0079BE  00                 	db	0
  2601  0079BF  00                 	db	0
  2602  0079C0  00                 	db	0
  2603  0079C1  00                 	db	0
  2604  0079C2  20                 	db	32
  2605  0079C3  3F                 	db	63
  2606  0079C4  3F                 	db	63
  2607  0079C5  3F                 	db	63
  2608  0079C6  02                 	db	2
  2609  0079C7  07                 	db	7
  2610  0079C8  0F                 	db	15
  2611  0079C9  3D                 	db	61
  2612  0079CA  38                 	db	56
  2613  0079CB  30                 	db	48
  2614  0079CC  00                 	db	0
  2615  0079CD  00                 	db	0
  2616  0079CE  00                 	db	0
  2617  0079CF  00                 	db	0
  2618  0079D0  00                 	db	0
  2619  0079D1  00                 	db	0
  2620  0079D2  00                 	db	0
  2621  0079D3  04                 	db	4
  2622  0079D4  04                 	db	4
  2623  0079D5  04                 	db	4
  2624  0079D6  FC                 	db	252
  2625  0079D7  FC                 	db	252
  2626  0079D8  FC                 	db	252
  2627  0079D9  00                 	db	0
  2628  0079DA  00                 	db	0
  2629  0079DB  00                 	db	0
  2630  0079DC  00                 	db	0
  2631  0079DD  00                 	db	0
  2632  0079DE  00                 	db	0
  2633  0079DF  00                 	db	0
  2634  0079E0  00                 	db	0
  2635  0079E1  00                 	db	0
  2636  0079E2  00                 	db	0
  2637  0079E3  20                 	db	32
  2638  0079E4  20                 	db	32
  2639  0079E5  20                 	db	32
  2640  0079E6  3F                 	db	63
  2641  0079E7  3F                 	db	63
  2642  0079E8  3F                 	db	63
  2643  0079E9  20                 	db	32
  2644  0079EA  20                 	db	32
  2645  0079EB  20                 	db	32
  2646  0079EC  00                 	db	0
  2647  0079ED  00                 	db	0
  2648  0079EE  00                 	db	0
  2649  0079EF  00                 	db	0
  2650  0079F0  00                 	db	0
  2651  0079F1  00                 	db	0
  2652  0079F2  C0                 	db	192
  2653  0079F3  C0                 	db	192
  2654  0079F4  C0                 	db	192
  2655  0079F5  40                 	db	64
  2656  0079F6  40                 	db	64
  2657  0079F7  C0                 	db	192
  2658  0079F8  40                 	db	64
  2659  0079F9  40                 	db	64
  2660  0079FA  C0                 	db	192
  2661  0079FB  C0                 	db	192
  2662  0079FC  80                 	db	128
  2663  0079FD  00                 	db	0
  2664  0079FE  00                 	db	0
  2665  0079FF  00                 	db	0
  2666  007A00  00                 	db	0
  2667  007A01  00                 	db	0
  2668  007A02  3F                 	db	63
  2669  007A03  3F                 	db	63
  2670  007A04  3F                 	db	63
  2671  007A05  00                 	db	0
  2672  007A06  00                 	db	0
  2673  007A07  3F                 	db	63
  2674  007A08  00                 	db	0
  2675  007A09  00                 	db	0
  2676  007A0A  3F                 	db	63
  2677  007A0B  3F                 	db	63
  2678  007A0C  3F                 	db	63
  2679  007A0D  00                 	db	0
  2680  007A0E  00                 	db	0
  2681  007A0F  00                 	db	0
  2682  007A10  00                 	db	0
  2683  007A11  00                 	db	0
  2684  007A12  C0                 	db	192
  2685  007A13  C0                 	db	192
  2686  007A14  C0                 	db	192
  2687  007A15  40                 	db	64
  2688  007A16  40                 	db	64
  2689  007A17  40                 	db	64
  2690  007A18  C0                 	db	192
  2691  007A19  C0                 	db	192
  2692  007A1A  80                 	db	128
  2693  007A1B  00                 	db	0
  2694  007A1C  00                 	db	0
  2695  007A1D  00                 	db	0
  2696  007A1E  00                 	db	0
  2697  007A1F  00                 	db	0
  2698  007A20  00                 	db	0
  2699  007A21  00                 	db	0
  2700  007A22  3F                 	db	63
  2701  007A23  3F                 	db	63
  2702  007A24  3F                 	db	63
  2703  007A25  00                 	db	0
  2704  007A26  00                 	db	0
  2705  007A27  00                 	db	0
  2706  007A28  3F                 	db	63
  2707  007A29  3F                 	db	63
  2708  007A2A  3F                 	db	63
  2709  007A2B  00                 	db	0
  2710  007A2C  00                 	db	0
  2711  007A2D  00                 	db	0
  2712  007A2E  00                 	db	0
  2713  007A2F  00                 	db	0
  2714  007A30  00                 	db	0
  2715  007A31  00                 	db	0
  2716  007A32  80                 	db	128
  2717  007A33  C0                 	db	192
  2718  007A34  C0                 	db	192
  2719  007A35  40                 	db	64
  2720  007A36  40                 	db	64
  2721  007A37  40                 	db	64
  2722  007A38  C0                 	db	192
  2723  007A39  C0                 	db	192
  2724  007A3A  80                 	db	128
  2725  007A3B  00                 	db	0
  2726  007A3C  00                 	db	0
  2727  007A3D  00                 	db	0
  2728  007A3E  00                 	db	0
  2729  007A3F  00                 	db	0
  2730  007A40  00                 	db	0
  2731  007A41  00                 	db	0
  2732  007A42  1F                 	db	31
  2733  007A43  3F                 	db	63
  2734  007A44  3F                 	db	63
  2735  007A45  20                 	db	32
  2736  007A46  20                 	db	32
  2737  007A47  20                 	db	32
  2738  007A48  3F                 	db	63
  2739  007A49  3F                 	db	63
  2740  007A4A  1F                 	db	31
  2741  007A4B  00                 	db	0
  2742  007A4C  00                 	db	0
  2743  007A4D  00                 	db	0
  2744  007A4E  00                 	db	0
  2745  007A4F  00                 	db	0
  2746  007A50  00                 	db	0
  2747  007A51  00                 	db	0
  2748  007A52  40                 	db	64
  2749  007A53  C0                 	db	192
  2750  007A54  80                 	db	128
  2751  007A55  C0                 	db	192
  2752  007A56  40                 	db	64
  2753  007A57  40                 	db	64
  2754  007A58  40                 	db	64
  2755  007A59  C0                 	db	192
  2756  007A5A  C0                 	db	192
  2757  007A5B  80                 	db	128
  2758  007A5C  00                 	db	0
  2759  007A5D  00                 	db	0
  2760  007A5E  00                 	db	0
  2761  007A5F  00                 	db	0
  2762  007A60  00                 	db	0
  2763  007A61  00                 	db	0
  2764  007A62  80                 	db	128
  2765  007A63  FF                 	db	255
  2766  007A64  FF                 	db	255
  2767  007A65  FF                 	db	255
  2768  007A66  90                 	db	144
  2769  007A67  10                 	db	16
  2770  007A68  10                 	db	16
  2771  007A69  1F                 	db	31
  2772  007A6A  1F                 	db	31
  2773  007A6B  0F                 	db	15
  2774  007A6C  00                 	db	0
  2775  007A6D  00                 	db	0
  2776  007A6E  00                 	db	0
  2777  007A6F  00                 	db	0
  2778  007A70  00                 	db	0
  2779  007A71  80                 	db	128
  2780  007A72  C0                 	db	192
  2781  007A73  C0                 	db	192
  2782  007A74  40                 	db	64
  2783  007A75  40                 	db	64
  2784  007A76  40                 	db	64
  2785  007A77  C0                 	db	192
  2786  007A78  80                 	db	128
  2787  007A79  C0                 	db	192
  2788  007A7A  40                 	db	64
  2789  007A7B  00                 	db	0
  2790  007A7C  00                 	db	0
  2791  007A7D  00                 	db	0
  2792  007A7E  00                 	db	0
  2793  007A7F  00                 	db	0
  2794  007A80  00                 	db	0
  2795  007A81  0F                 	db	15
  2796  007A82  1F                 	db	31
  2797  007A83  1F                 	db	31
  2798  007A84  10                 	db	16
  2799  007A85  10                 	db	16
  2800  007A86  90                 	db	144
  2801  007A87  FF                 	db	255
  2802  007A88  FF                 	db	255
  2803  007A89  FF                 	db	255
  2804  007A8A  80                 	db	128
  2805  007A8B  00                 	db	0
  2806  007A8C  00                 	db	0
  2807  007A8D  00                 	db	0
  2808  007A8E  00                 	db	0
  2809  007A8F  00                 	db	0
  2810  007A90  00                 	db	0
  2811  007A91  00                 	db	0
  2812  007A92  40                 	db	64
  2813  007A93  C0                 	db	192
  2814  007A94  C0                 	db	192
  2815  007A95  C0                 	db	192
  2816  007A96  80                 	db	128
  2817  007A97  C0                 	db	192
  2818  007A98  C0                 	db	192
  2819  007A99  C0                 	db	192
  2820  007A9A  C0                 	db	192
  2821  007A9B  80                 	db	128
  2822  007A9C  00                 	db	0
  2823  007A9D  00                 	db	0
  2824  007A9E  00                 	db	0
  2825  007A9F  00                 	db	0
  2826  007AA0  00                 	db	0
  2827  007AA1  00                 	db	0
  2828  007AA2  20                 	db	32
  2829  007AA3  3F                 	db	63
  2830  007AA4  3F                 	db	63
  2831  007AA5  3F                 	db	63
  2832  007AA6  21                 	db	33
  2833  007AA7  00                 	db	0
  2834  007AA8  00                 	db	0
  2835  007AA9  01                 	db	1
  2836  007AAA  01                 	db	1
  2837  007AAB  01                 	db	1
  2838  007AAC  00                 	db	0
  2839  007AAD  00                 	db	0
  2840  007AAE  00                 	db	0
  2841  007AAF  00                 	db	0
  2842  007AB0  00                 	db	0
  2843  007AB1  00                 	db	0
  2844  007AB2  80                 	db	128
  2845  007AB3  C0                 	db	192
  2846  007AB4  C0                 	db	192
  2847  007AB5  40                 	db	64
  2848  007AB6  40                 	db	64
  2849  007AB7  40                 	db	64
  2850  007AB8  40                 	db	64
  2851  007AB9  C0                 	db	192
  2852  007ABA  80                 	db	128
  2853  007ABB  00                 	db	0
  2854  007ABC  00                 	db	0
  2855  007ABD  00                 	db	0
  2856  007ABE  00                 	db	0
  2857  007ABF  00                 	db	0
  2858  007AC0  00                 	db	0
  2859  007AC1  00                 	db	0
  2860  007AC2  19                 	db	25
  2861  007AC3  3B                 	db	59
  2862  007AC4  23                 	db	35
  2863  007AC5  26                 	db	38
  2864  007AC6  26                 	db	38
  2865  007AC7  26                 	db	38
  2866  007AC8  3C                 	db	60
  2867  007AC9  3D                 	db	61
  2868  007ACA  19                 	db	25
  2869  007ACB  00                 	db	0
  2870  007ACC  00                 	db	0
  2871  007ACD  00                 	db	0
  2872  007ACE  00                 	db	0
  2873  007ACF  00                 	db	0
  2874  007AD0  00                 	db	0
  2875  007AD1  00                 	db	0
  2876  007AD2  40                 	db	64
  2877  007AD3  40                 	db	64
  2878  007AD4  E0                 	db	224
  2879  007AD5  F0                 	db	240
  2880  007AD6  F8                 	db	248
  2881  007AD7  40                 	db	64
  2882  007AD8  40                 	db	64
  2883  007AD9  40                 	db	64
  2884  007ADA  40                 	db	64
  2885  007ADB  00                 	db	0
  2886  007ADC  00                 	db	0
  2887  007ADD  00                 	db	0
  2888  007ADE  00                 	db	0
  2889  007ADF  00                 	db	0
  2890  007AE0  00                 	db	0
  2891  007AE1  00                 	db	0
  2892  007AE2  00                 	db	0
  2893  007AE3  00                 	db	0
  2894  007AE4  1F                 	db	31
  2895  007AE5  3F                 	db	63
  2896  007AE6  3F                 	db	63
  2897  007AE7  20                 	db	32
  2898  007AE8  38                 	db	56
  2899  007AE9  38                 	db	56
  2900  007AEA  18                 	db	24
  2901  007AEB  00                 	db	0
  2902  007AEC  00                 	db	0
  2903  007AED  00                 	db	0
  2904  007AEE  00                 	db	0
  2905  007AEF  00                 	db	0
  2906  007AF0  00                 	db	0
  2907  007AF1  00                 	db	0
  2908  007AF2  C0                 	db	192
  2909  007AF3  C0                 	db	192
  2910  007AF4  C0                 	db	192
  2911  007AF5  00                 	db	0
  2912  007AF6  00                 	db	0
  2913  007AF7  00                 	db	0
  2914  007AF8  C0                 	db	192
  2915  007AF9  C0                 	db	192
  2916  007AFA  C0                 	db	192
  2917  007AFB  00                 	db	0
  2918  007AFC  00                 	db	0
  2919  007AFD  00                 	db	0
  2920  007AFE  00                 	db	0
  2921  007AFF  00                 	db	0
  2922  007B00  00                 	db	0
  2923  007B01  00                 	db	0
  2924  007B02  1F                 	db	31
  2925  007B03  3F                 	db	63
  2926  007B04  3F                 	db	63
  2927  007B05  20                 	db	32
  2928  007B06  20                 	db	32
  2929  007B07  20                 	db	32
  2930  007B08  3F                 	db	63
  2931  007B09  1F                 	db	31
  2932  007B0A  3F                 	db	63
  2933  007B0B  20                 	db	32
  2934  007B0C  00                 	db	0
  2935  007B0D  00                 	db	0
  2936  007B0E  00                 	db	0
  2937  007B0F  00                 	db	0
  2938  007B10  00                 	db	0
  2939  007B11  00                 	db	0
  2940  007B12  C0                 	db	192
  2941  007B13  C0                 	db	192
  2942  007B14  C0                 	db	192
  2943  007B15  00                 	db	0
  2944  007B16  00                 	db	0
  2945  007B17  00                 	db	0
  2946  007B18  C0                 	db	192
  2947  007B19  C0                 	db	192
  2948  007B1A  C0                 	db	192
  2949  007B1B  00                 	db	0
  2950  007B1C  00                 	db	0
  2951  007B1D  00                 	db	0
  2952  007B1E  00                 	db	0
  2953  007B1F  00                 	db	0
  2954  007B20  00                 	db	0
  2955  007B21  00                 	db	0
  2956  007B22  07                 	db	7
  2957  007B23  0F                 	db	15
  2958  007B24  1F                 	db	31
  2959  007B25  38                 	db	56
  2960  007B26  30                 	db	48
  2961  007B27  38                 	db	56
  2962  007B28  1F                 	db	31
  2963  007B29  0F                 	db	15
  2964  007B2A  07                 	db	7
  2965  007B2B  00                 	db	0
  2966  007B2C  00                 	db	0
  2967  007B2D  00                 	db	0
  2968  007B2E  00                 	db	0
  2969  007B2F  00                 	db	0
  2970  007B30  00                 	db	0
  2971  007B31  00                 	db	0
  2972  007B32  C0                 	db	192
  2973  007B33  C0                 	db	192
  2974  007B34  C0                 	db	192
  2975  007B35  00                 	db	0
  2976  007B36  00                 	db	0
  2977  007B37  00                 	db	0
  2978  007B38  00                 	db	0
  2979  007B39  00                 	db	0
  2980  007B3A  C0                 	db	192
  2981  007B3B  C0                 	db	192
  2982  007B3C  C0                 	db	192
  2983  007B3D  00                 	db	0
  2984  007B3E  00                 	db	0
  2985  007B3F  00                 	db	0
  2986  007B40  00                 	db	0
  2987  007B41  00                 	db	0
  2988  007B42  07                 	db	7
  2989  007B43  0F                 	db	15
  2990  007B44  3F                 	db	63
  2991  007B45  38                 	db	56
  2992  007B46  38                 	db	56
  2993  007B47  0E                 	db	14
  2994  007B48  38                 	db	56
  2995  007B49  38                 	db	56
  2996  007B4A  3F                 	db	63
  2997  007B4B  0F                 	db	15
  2998  007B4C  07                 	db	7
  2999  007B4D  00                 	db	0
  3000  007B4E  00                 	db	0
  3001  007B4F  00                 	db	0
  3002  007B50  00                 	db	0
  3003  007B51  00                 	db	0
  3004  007B52  C0                 	db	192
  3005  007B53  C0                 	db	192
  3006  007B54  C0                 	db	192
  3007  007B55  00                 	db	0
  3008  007B56  00                 	db	0
  3009  007B57  C0                 	db	192
  3010  007B58  C0                 	db	192
  3011  007B59  C0                 	db	192
  3012  007B5A  00                 	db	0
  3013  007B5B  00                 	db	0
  3014  007B5C  00                 	db	0
  3015  007B5D  00                 	db	0
  3016  007B5E  00                 	db	0
  3017  007B5F  00                 	db	0
  3018  007B60  00                 	db	0
  3019  007B61  00                 	db	0
  3020  007B62  30                 	db	48
  3021  007B63  39                 	db	57
  3022  007B64  3F                 	db	63
  3023  007B65  0F                 	db	15
  3024  007B66  0F                 	db	15
  3025  007B67  3F                 	db	63
  3026  007B68  39                 	db	57
  3027  007B69  30                 	db	48
  3028  007B6A  00                 	db	0
  3029  007B6B  00                 	db	0
  3030  007B6C  00                 	db	0
  3031  007B6D  00                 	db	0
  3032  007B6E  00                 	db	0
  3033  007B6F  00                 	db	0
  3034  007B70  00                 	db	0
  3035  007B71  00                 	db	0
  3036  007B72  00                 	db	0
  3037  007B73  C0                 	db	192
  3038  007B74  C0                 	db	192
  3039  007B75  C0                 	db	192
  3040  007B76  00                 	db	0
  3041  007B77  00                 	db	0
  3042  007B78  00                 	db	0
  3043  007B79  C0                 	db	192
  3044  007B7A  C0                 	db	192
  3045  007B7B  C0                 	db	192
  3046  007B7C  00                 	db	0
  3047  007B7D  00                 	db	0
  3048  007B7E  00                 	db	0
  3049  007B7F  00                 	db	0
  3050  007B80  00                 	db	0
  3051  007B81  00                 	db	0
  3052  007B82  80                 	db	128
  3053  007B83  87                 	db	135
  3054  007B84  8F                 	db	143
  3055  007B85  9F                 	db	159
  3056  007B86  D8                 	db	216
  3057  007B87  F8                 	db	248
  3058  007B88  78                 	db	120
  3059  007B89  3F                 	db	63
  3060  007B8A  0F                 	db	15
  3061  007B8B  07                 	db	7
  3062  007B8C  00                 	db	0
  3063  007B8D  00                 	db	0
  3064  007B8E  00                 	db	0
  3065  007B8F  00                 	db	0
  3066  007B90  00                 	db	0
  3067  007B91  00                 	db	0
  3068  007B92  C0                 	db	192
  3069  007B93  C0                 	db	192
  3070  007B94  40                 	db	64
  3071  007B95  40                 	db	64
  3072  007B96  40                 	db	64
  3073  007B97  C0                 	db	192
  3074  007B98  C0                 	db	192
  3075  007B99  C0                 	db	192
  3076  007B9A  00                 	db	0
  3077  007B9B  00                 	db	0
  3078  007B9C  00                 	db	0
  3079  007B9D  00                 	db	0
  3080  007B9E  00                 	db	0
  3081  007B9F  00                 	db	0
  3082  007BA0  00                 	db	0
  3083  007BA1  00                 	db	0
  3084  007BA2  31                 	db	49
  3085  007BA3  38                 	db	56
  3086  007BA4  3C                 	db	60
  3087  007BA5  2E                 	db	46
  3088  007BA6  27                 	db	39
  3089  007BA7  23                 	db	35
  3090  007BA8  31                 	db	49
  3091  007BA9  38                 	db	56
  3092  007BAA  00                 	db	0
  3093  007BAB  00                 	db	0
  3094  007BAC  00                 	db	0
  3095  007BAD  00                 	db	0
  3096  007BAE  00                 	db	0
  3097  007BAF  00                 	db	0
  3098  007BB0  00                 	db	0
  3099  007BB1  00                 	db	0
  3100  007BB2  80                 	db	128
  3101  007BB3  80                 	db	128
  3102  007BB4  C0                 	db	192
  3103  007BB5  78                 	db	120
  3104  007BB6  7C                 	db	124
  3105  007BB7  3C                 	db	60
  3106  007BB8  04                 	db	4
  3107  007BB9  04                 	db	4
  3108  007BBA  04                 	db	4
  3109  007BBB  04                 	db	4
  3110  007BBC  00                 	db	0
  3111  007BBD  00                 	db	0
  3112  007BBE  00                 	db	0
  3113  007BBF  00                 	db	0
  3114  007BC0  00                 	db	0
  3115  007BC1  00                 	db	0
  3116  007BC2  01                 	db	1
  3117  007BC3  01                 	db	1
  3118  007BC4  03                 	db	3
  3119  007BC5  1E                 	db	30
  3120  007BC6  3E                 	db	62
  3121  007BC7  3C                 	db	60
  3122  007BC8  20                 	db	32
  3123  007BC9  20                 	db	32
  3124  007BCA  20                 	db	32
  3125  007BCB  20                 	db	32
  3126  007BCC  00                 	db	0
  3127  007BCD  00                 	db	0
  3128  007BCE  00                 	db	0
  3129  007BCF  00                 	db	0
  3130  007BD0  00                 	db	0
  3131  007BD1  00                 	db	0
  3132  007BD2  00                 	db	0
  3133  007BD3  00                 	db	0
  3134  007BD4  00                 	db	0
  3135  007BD5  00                 	db	0
  3136  007BD6  FE                 	db	254
  3137  007BD7  FE                 	db	254
  3138  007BD8  FE                 	db	254
  3139  007BD9  00                 	db	0
  3140  007BDA  00                 	db	0
  3141  007BDB  00                 	db	0
  3142  007BDC  00                 	db	0
  3143  007BDD  00                 	db	0
  3144  007BDE  00                 	db	0
  3145  007BDF  00                 	db	0
  3146  007BE0  00                 	db	0
  3147  007BE1  00                 	db	0
  3148  007BE2  00                 	db	0
  3149  007BE3  00                 	db	0
  3150  007BE4  00                 	db	0
  3151  007BE5  00                 	db	0
  3152  007BE6  7F                 	db	127
  3153  007BE7  7F                 	db	127
  3154  007BE8  7F                 	db	127
  3155  007BE9  00                 	db	0
  3156  007BEA  00                 	db	0
  3157  007BEB  00                 	db	0
  3158  007BEC  00                 	db	0
  3159  007BED  00                 	db	0
  3160  007BEE  00                 	db	0
  3161  007BEF  00                 	db	0
  3162  007BF0  00                 	db	0
  3163  007BF1  00                 	db	0
  3164  007BF2  04                 	db	4
  3165  007BF3  04                 	db	4
  3166  007BF4  04                 	db	4
  3167  007BF5  04                 	db	4
  3168  007BF6  3C                 	db	60
  3169  007BF7  7C                 	db	124
  3170  007BF8  78                 	db	120
  3171  007BF9  C0                 	db	192
  3172  007BFA  80                 	db	128
  3173  007BFB  80                 	db	128
  3174  007BFC  00                 	db	0
  3175  007BFD  00                 	db	0
  3176  007BFE  00                 	db	0
  3177  007BFF  00                 	db	0
  3178  007C00  00                 	db	0
  3179  007C01  00                 	db	0
  3180  007C02  20                 	db	32
  3181  007C03  20                 	db	32
  3182  007C04  20                 	db	32
  3183  007C05  20                 	db	32
  3184  007C06  3C                 	db	60
  3185  007C07  3E                 	db	62
  3186  007C08  1E                 	db	30
  3187  007C09  03                 	db	3
  3188  007C0A  01                 	db	1
  3189  007C0B  01                 	db	1
  3190  007C0C  00                 	db	0
  3191  007C0D  00                 	db	0
  3192  007C0E  00                 	db	0
  3193  007C0F  00                 	db	0
  3194  007C10  00                 	db	0
  3195  007C11  38                 	db	56
  3196  007C12  3C                 	db	60
  3197  007C13  3C                 	db	60
  3198  007C14  04                 	db	4
  3199  007C15  0C                 	db	12
  3200  007C16  1C                 	db	28
  3201  007C17  38                 	db	56
  3202  007C18  30                 	db	48
  3203  007C19  20                 	db	32
  3204  007C1A  3C                 	db	60
  3205  007C1B  3C                 	db	60
  3206  007C1C  1C                 	db	28
  3207  007C1D  00                 	db	0
  3208  007C1E  00                 	db	0
  3209  007C1F  00                 	db	0
  3210  007C20  00                 	db	0
  3211  007C21  00                 	db	0
  3212  007C22  00                 	db	0
  3213  007C23  00                 	db	0
  3214  007C24  00                 	db	0
  3215  007C25  00                 	db	0
  3216  007C26  00                 	db	0
  3217  007C27  00                 	db	0
  3218  007C28  00                 	db	0
  3219  007C29  00                 	db	0
  3220  007C2A  00                 	db	0
  3221  007C2B  00                 	db	0
  3222  007C2C  00                 	db	0
  3223  007C2D  00                 	db	0
  3224  007C2E  00                 	db	0
  3225  007C2F                     __end_of_BIG_FONTS:
  3226                           	callstack 0
  3227  007C2F                     _SMALL_FONTS:
  3228                           	callstack 0
  3229  007C2F  00                 	db	0
  3230  007C30  00                 	db	0
  3231  007C31  00                 	db	0
  3232  007C32  00                 	db	0
  3233  007C33  00                 	db	0
  3234  007C34  00                 	db	0
  3235  007C35  00                 	db	0
  3236  007C36  00                 	db	0
  3237  007C37  00                 	db	0
  3238  007C38  2F                 	db	47
  3239  007C39  00                 	db	0
  3240  007C3A  00                 	db	0
  3241  007C3B  00                 	db	0
  3242  007C3C  00                 	db	0
  3243  007C3D  07                 	db	7
  3244  007C3E  00                 	db	0
  3245  007C3F  07                 	db	7
  3246  007C40  00                 	db	0
  3247  007C41  00                 	db	0
  3248  007C42  14                 	db	20
  3249  007C43  7F                 	db	127
  3250  007C44  14                 	db	20
  3251  007C45  7F                 	db	127
  3252  007C46  14                 	db	20
  3253  007C47  00                 	db	0
  3254  007C48  24                 	db	36
  3255  007C49  2A                 	db	42
  3256  007C4A  7F                 	db	127
  3257  007C4B  2A                 	db	42
  3258  007C4C  12                 	db	18
  3259  007C4D  00                 	db	0
  3260  007C4E  23                 	db	35
  3261  007C4F  13                 	db	19
  3262  007C50  08                 	db	8
  3263  007C51  64                 	db	100
  3264  007C52  62                 	db	98
  3265  007C53  00                 	db	0
  3266  007C54  36                 	db	54
  3267  007C55  49                 	db	73
  3268  007C56  55                 	db	85
  3269  007C57  22                 	db	34
  3270  007C58  50                 	db	80
  3271  007C59  00                 	db	0
  3272  007C5A  00                 	db	0
  3273  007C5B  05                 	db	5
  3274  007C5C  03                 	db	3
  3275  007C5D  00                 	db	0
  3276  007C5E  00                 	db	0
  3277  007C5F  00                 	db	0
  3278  007C60  00                 	db	0
  3279  007C61  1C                 	db	28
  3280  007C62  22                 	db	34
  3281  007C63  41                 	db	65
  3282  007C64  00                 	db	0
  3283  007C65  00                 	db	0
  3284  007C66  00                 	db	0
  3285  007C67  41                 	db	65
  3286  007C68  22                 	db	34
  3287  007C69  1C                 	db	28
  3288  007C6A  00                 	db	0
  3289  007C6B  00                 	db	0
  3290  007C6C  14                 	db	20
  3291  007C6D  08                 	db	8
  3292  007C6E  3E                 	db	62
  3293  007C6F  08                 	db	8
  3294  007C70  14                 	db	20
  3295  007C71  00                 	db	0
  3296  007C72  08                 	db	8
  3297  007C73  08                 	db	8
  3298  007C74  3E                 	db	62
  3299  007C75  08                 	db	8
  3300  007C76  08                 	db	8
  3301  007C77  00                 	db	0
  3302  007C78  00                 	db	0
  3303  007C79  00                 	db	0
  3304  007C7A  A0                 	db	160
  3305  007C7B  60                 	db	96
  3306  007C7C  00                 	db	0
  3307  007C7D  00                 	db	0
  3308  007C7E  08                 	db	8
  3309  007C7F  08                 	db	8
  3310  007C80  08                 	db	8
  3311  007C81  08                 	db	8
  3312  007C82  08                 	db	8
  3313  007C83  00                 	db	0
  3314  007C84  00                 	db	0
  3315  007C85  60                 	db	96
  3316  007C86  60                 	db	96
  3317  007C87  00                 	db	0
  3318  007C88  00                 	db	0
  3319  007C89  00                 	db	0
  3320  007C8A  20                 	db	32
  3321  007C8B  10                 	db	16
  3322  007C8C  08                 	db	8
  3323  007C8D  04                 	db	4
  3324  007C8E  02                 	db	2
  3325  007C8F  00                 	db	0
  3326  007C90  3E                 	db	62
  3327  007C91  51                 	db	81
  3328  007C92  49                 	db	73
  3329  007C93  45                 	db	69
  3330  007C94  3E                 	db	62
  3331  007C95  00                 	db	0
  3332  007C96  00                 	db	0
  3333  007C97  42                 	db	66
  3334  007C98  7F                 	db	127
  3335  007C99  40                 	db	64
  3336  007C9A  00                 	db	0
  3337  007C9B  00                 	db	0
  3338  007C9C  42                 	db	66
  3339  007C9D  61                 	db	97
  3340  007C9E  51                 	db	81
  3341  007C9F  49                 	db	73
  3342  007CA0  46                 	db	70
  3343  007CA1  00                 	db	0
  3344  007CA2  21                 	db	33
  3345  007CA3  41                 	db	65
  3346  007CA4  45                 	db	69
  3347  007CA5  4B                 	db	75
  3348  007CA6  31                 	db	49
  3349  007CA7  00                 	db	0
  3350  007CA8  18                 	db	24
  3351  007CA9  14                 	db	20
  3352  007CAA  12                 	db	18
  3353  007CAB  7F                 	db	127
  3354  007CAC  10                 	db	16
  3355  007CAD  00                 	db	0
  3356  007CAE  27                 	db	39
  3357  007CAF  45                 	db	69
  3358  007CB0  45                 	db	69
  3359  007CB1  45                 	db	69
  3360  007CB2  39                 	db	57
  3361  007CB3  00                 	db	0
  3362  007CB4  3C                 	db	60
  3363  007CB5  4A                 	db	74
  3364  007CB6  49                 	db	73
  3365  007CB7  49                 	db	73
  3366  007CB8  30                 	db	48
  3367  007CB9  00                 	db	0
  3368  007CBA  01                 	db	1
  3369  007CBB  71                 	db	113
  3370  007CBC  09                 	db	9
  3371  007CBD  05                 	db	5
  3372  007CBE  03                 	db	3
  3373  007CBF  00                 	db	0
  3374  007CC0  36                 	db	54
  3375  007CC1  49                 	db	73
  3376  007CC2  49                 	db	73
  3377  007CC3  49                 	db	73
  3378  007CC4  36                 	db	54
  3379  007CC5  00                 	db	0
  3380  007CC6  06                 	db	6
  3381  007CC7  49                 	db	73
  3382  007CC8  49                 	db	73
  3383  007CC9  29                 	db	41
  3384  007CCA  1E                 	db	30
  3385  007CCB  00                 	db	0
  3386  007CCC  00                 	db	0
  3387  007CCD  36                 	db	54
  3388  007CCE  36                 	db	54
  3389  007CCF  00                 	db	0
  3390  007CD0  00                 	db	0
  3391  007CD1  00                 	db	0
  3392  007CD2  00                 	db	0
  3393  007CD3  56                 	db	86
  3394  007CD4  36                 	db	54
  3395  007CD5  00                 	db	0
  3396  007CD6  00                 	db	0
  3397  007CD7  00                 	db	0
  3398  007CD8  08                 	db	8
  3399  007CD9  14                 	db	20
  3400  007CDA  22                 	db	34
  3401  007CDB  41                 	db	65
  3402  007CDC  00                 	db	0
  3403  007CDD  00                 	db	0
  3404  007CDE  14                 	db	20
  3405  007CDF  14                 	db	20
  3406  007CE0  14                 	db	20
  3407  007CE1  14                 	db	20
  3408  007CE2  14                 	db	20
  3409  007CE3  00                 	db	0
  3410  007CE4  00                 	db	0
  3411  007CE5  41                 	db	65
  3412  007CE6  22                 	db	34
  3413  007CE7  14                 	db	20
  3414  007CE8  08                 	db	8
  3415  007CE9  00                 	db	0
  3416  007CEA  02                 	db	2
  3417  007CEB  01                 	db	1
  3418  007CEC  51                 	db	81
  3419  007CED  09                 	db	9
  3420  007CEE  06                 	db	6
  3421  007CEF  00                 	db	0
  3422  007CF0  32                 	db	50
  3423  007CF1  49                 	db	73
  3424  007CF2  59                 	db	89
  3425  007CF3  51                 	db	81
  3426  007CF4  3E                 	db	62
  3427  007CF5  00                 	db	0
  3428  007CF6  7C                 	db	124
  3429  007CF7  12                 	db	18
  3430  007CF8  11                 	db	17
  3431  007CF9  12                 	db	18
  3432  007CFA  7C                 	db	124
  3433  007CFB  00                 	db	0
  3434  007CFC  7F                 	db	127
  3435  007CFD  49                 	db	73
  3436  007CFE  49                 	db	73
  3437  007CFF  49                 	db	73
  3438  007D00  36                 	db	54
  3439  007D01  00                 	db	0
  3440  007D02  3E                 	db	62
  3441  007D03  41                 	db	65
  3442  007D04  41                 	db	65
  3443  007D05  41                 	db	65
  3444  007D06  22                 	db	34
  3445  007D07  00                 	db	0
  3446  007D08  7F                 	db	127
  3447  007D09  41                 	db	65
  3448  007D0A  41                 	db	65
  3449  007D0B  22                 	db	34
  3450  007D0C  1C                 	db	28
  3451  007D0D  00                 	db	0
  3452  007D0E  7F                 	db	127
  3453  007D0F  49                 	db	73
  3454  007D10  49                 	db	73
  3455  007D11  49                 	db	73
  3456  007D12  41                 	db	65
  3457  007D13  00                 	db	0
  3458  007D14  7F                 	db	127
  3459  007D15  09                 	db	9
  3460  007D16  09                 	db	9
  3461  007D17  09                 	db	9
  3462  007D18  01                 	db	1
  3463  007D19  00                 	db	0
  3464  007D1A  3E                 	db	62
  3465  007D1B  41                 	db	65
  3466  007D1C  49                 	db	73
  3467  007D1D  49                 	db	73
  3468  007D1E  7A                 	db	122
  3469  007D1F  00                 	db	0
  3470  007D20  7F                 	db	127
  3471  007D21  08                 	db	8
  3472  007D22  08                 	db	8
  3473  007D23  08                 	db	8
  3474  007D24  7F                 	db	127
  3475  007D25  00                 	db	0
  3476  007D26  00                 	db	0
  3477  007D27  41                 	db	65
  3478  007D28  7F                 	db	127
  3479  007D29  41                 	db	65
  3480  007D2A  00                 	db	0
  3481  007D2B  00                 	db	0
  3482  007D2C  20                 	db	32
  3483  007D2D  40                 	db	64
  3484  007D2E  41                 	db	65
  3485  007D2F  3F                 	db	63
  3486  007D30  01                 	db	1
  3487  007D31  00                 	db	0
  3488  007D32  7F                 	db	127
  3489  007D33  08                 	db	8
  3490  007D34  14                 	db	20
  3491  007D35  22                 	db	34
  3492  007D36  41                 	db	65
  3493  007D37  00                 	db	0
  3494  007D38  7F                 	db	127
  3495  007D39  40                 	db	64
  3496  007D3A  40                 	db	64
  3497  007D3B  40                 	db	64
  3498  007D3C  40                 	db	64
  3499  007D3D  00                 	db	0
  3500  007D3E  7F                 	db	127
  3501  007D3F  02                 	db	2
  3502  007D40  0C                 	db	12
  3503  007D41  02                 	db	2
  3504  007D42  7F                 	db	127
  3505  007D43  00                 	db	0
  3506  007D44  7F                 	db	127
  3507  007D45  04                 	db	4
  3508  007D46  08                 	db	8
  3509  007D47  10                 	db	16
  3510  007D48  7F                 	db	127
  3511  007D49  00                 	db	0
  3512  007D4A  3E                 	db	62
  3513  007D4B  41                 	db	65
  3514  007D4C  41                 	db	65
  3515  007D4D  41                 	db	65
  3516  007D4E  3E                 	db	62
  3517  007D4F  00                 	db	0
  3518  007D50  7F                 	db	127
  3519  007D51  09                 	db	9
  3520  007D52  09                 	db	9
  3521  007D53  09                 	db	9
  3522  007D54  06                 	db	6
  3523  007D55  00                 	db	0
  3524  007D56  3E                 	db	62
  3525  007D57  41                 	db	65
  3526  007D58  51                 	db	81
  3527  007D59  21                 	db	33
  3528  007D5A  5E                 	db	94
  3529  007D5B  00                 	db	0
  3530  007D5C  7F                 	db	127
  3531  007D5D  09                 	db	9
  3532  007D5E  19                 	db	25
  3533  007D5F  29                 	db	41
  3534  007D60  46                 	db	70
  3535  007D61  00                 	db	0
  3536  007D62  46                 	db	70
  3537  007D63  49                 	db	73
  3538  007D64  49                 	db	73
  3539  007D65  49                 	db	73
  3540  007D66  31                 	db	49
  3541  007D67  00                 	db	0
  3542  007D68  01                 	db	1
  3543  007D69  01                 	db	1
  3544  007D6A  7F                 	db	127
  3545  007D6B  01                 	db	1
  3546  007D6C  01                 	db	1
  3547  007D6D  00                 	db	0
  3548  007D6E  3F                 	db	63
  3549  007D6F  40                 	db	64
  3550  007D70  40                 	db	64
  3551  007D71  40                 	db	64
  3552  007D72  3F                 	db	63
  3553  007D73  00                 	db	0
  3554  007D74  1F                 	db	31
  3555  007D75  20                 	db	32
  3556  007D76  40                 	db	64
  3557  007D77  20                 	db	32
  3558  007D78  1F                 	db	31
  3559  007D79  00                 	db	0
  3560  007D7A  3F                 	db	63
  3561  007D7B  40                 	db	64
  3562  007D7C  38                 	db	56
  3563  007D7D  40                 	db	64
  3564  007D7E  3F                 	db	63
  3565  007D7F  00                 	db	0
  3566  007D80  63                 	db	99
  3567  007D81  14                 	db	20
  3568  007D82  08                 	db	8
  3569  007D83  14                 	db	20
  3570  007D84  63                 	db	99
  3571  007D85  00                 	db	0
  3572  007D86  07                 	db	7
  3573  007D87  08                 	db	8
  3574  007D88  70                 	db	112
  3575  007D89  08                 	db	8
  3576  007D8A  07                 	db	7
  3577  007D8B  00                 	db	0
  3578  007D8C  61                 	db	97
  3579  007D8D  51                 	db	81
  3580  007D8E  49                 	db	73
  3581  007D8F  45                 	db	69
  3582  007D90  43                 	db	67
  3583  007D91  00                 	db	0
  3584  007D92  00                 	db	0
  3585  007D93  7F                 	db	127
  3586  007D94  41                 	db	65
  3587  007D95  41                 	db	65
  3588  007D96  00                 	db	0
  3589  007D97  AA                 	db	170
  3590  007D98  55                 	db	85
  3591  007D99  AA                 	db	170
  3592  007D9A  55                 	db	85
  3593  007D9B  AA                 	db	170
  3594  007D9C  55                 	db	85
  3595  007D9D  00                 	db	0
  3596  007D9E  00                 	db	0
  3597  007D9F  41                 	db	65
  3598  007DA0  41                 	db	65
  3599  007DA1  7F                 	db	127
  3600  007DA2  00                 	db	0
  3601  007DA3  00                 	db	0
  3602  007DA4  04                 	db	4
  3603  007DA5  02                 	db	2
  3604  007DA6  01                 	db	1
  3605  007DA7  02                 	db	2
  3606  007DA8  04                 	db	4
  3607  007DA9  00                 	db	0
  3608  007DAA  40                 	db	64
  3609  007DAB  40                 	db	64
  3610  007DAC  40                 	db	64
  3611  007DAD  40                 	db	64
  3612  007DAE  40                 	db	64
  3613  007DAF  00                 	db	0
  3614  007DB0  00                 	db	0
  3615  007DB1  03                 	db	3
  3616  007DB2  05                 	db	5
  3617  007DB3  00                 	db	0
  3618  007DB4  00                 	db	0
  3619  007DB5  00                 	db	0
  3620  007DB6  20                 	db	32
  3621  007DB7  54                 	db	84
  3622  007DB8  54                 	db	84
  3623  007DB9  54                 	db	84
  3624  007DBA  78                 	db	120
  3625  007DBB  00                 	db	0
  3626  007DBC  7F                 	db	127
  3627  007DBD  48                 	db	72
  3628  007DBE  44                 	db	68
  3629  007DBF  44                 	db	68
  3630  007DC0  38                 	db	56
  3631  007DC1  00                 	db	0
  3632  007DC2  38                 	db	56
  3633  007DC3  44                 	db	68
  3634  007DC4  44                 	db	68
  3635  007DC5  44                 	db	68
  3636  007DC6  20                 	db	32
  3637  007DC7  00                 	db	0
  3638  007DC8  38                 	db	56
  3639  007DC9  44                 	db	68
  3640  007DCA  44                 	db	68
  3641  007DCB  48                 	db	72
  3642  007DCC  7F                 	db	127
  3643  007DCD  00                 	db	0
  3644  007DCE  38                 	db	56
  3645  007DCF  54                 	db	84
  3646  007DD0  54                 	db	84
  3647  007DD1  54                 	db	84
  3648  007DD2  18                 	db	24
  3649  007DD3  00                 	db	0
  3650  007DD4  08                 	db	8
  3651  007DD5  7E                 	db	126
  3652  007DD6  09                 	db	9
  3653  007DD7  01                 	db	1
  3654  007DD8  02                 	db	2
  3655  007DD9  00                 	db	0
  3656  007DDA  18                 	db	24
  3657  007DDB  A4                 	db	164
  3658  007DDC  A4                 	db	164
  3659  007DDD  A4                 	db	164
  3660  007DDE  7C                 	db	124
  3661  007DDF  00                 	db	0
  3662  007DE0  7F                 	db	127
  3663  007DE1  08                 	db	8
  3664  007DE2  04                 	db	4
  3665  007DE3  04                 	db	4
  3666  007DE4  78                 	db	120
  3667  007DE5  00                 	db	0
  3668  007DE6  00                 	db	0
  3669  007DE7  44                 	db	68
  3670  007DE8  7D                 	db	125
  3671  007DE9  40                 	db	64
  3672  007DEA  00                 	db	0
  3673  007DEB  00                 	db	0
  3674  007DEC  40                 	db	64
  3675  007DED  80                 	db	128
  3676  007DEE  84                 	db	132
  3677  007DEF  7D                 	db	125
  3678  007DF0  00                 	db	0
  3679  007DF1  00                 	db	0
  3680  007DF2  7F                 	db	127
  3681  007DF3  10                 	db	16
  3682  007DF4  28                 	db	40
  3683  007DF5  44                 	db	68
  3684  007DF6  00                 	db	0
  3685  007DF7  00                 	db	0
  3686  007DF8  00                 	db	0
  3687  007DF9  41                 	db	65
  3688  007DFA  7F                 	db	127
  3689  007DFB  40                 	db	64
  3690  007DFC  00                 	db	0
  3691  007DFD  00                 	db	0
  3692  007DFE  7C                 	db	124
  3693  007DFF  04                 	db	4
  3694  007E00  18                 	db	24
  3695  007E01  04                 	db	4
  3696  007E02  78                 	db	120
  3697  007E03  00                 	db	0
  3698  007E04  7C                 	db	124
  3699  007E05  08                 	db	8
  3700  007E06  04                 	db	4
  3701  007E07  04                 	db	4
  3702  007E08  78                 	db	120
  3703  007E09  00                 	db	0
  3704  007E0A  38                 	db	56
  3705  007E0B  44                 	db	68
  3706  007E0C  44                 	db	68
  3707  007E0D  44                 	db	68
  3708  007E0E  38                 	db	56
  3709  007E0F  00                 	db	0
  3710  007E10  FC                 	db	252
  3711  007E11  24                 	db	36
  3712  007E12  24                 	db	36
  3713  007E13  24                 	db	36
  3714  007E14  18                 	db	24
  3715  007E15  00                 	db	0
  3716  007E16  18                 	db	24
  3717  007E17  24                 	db	36
  3718  007E18  24                 	db	36
  3719  007E19  18                 	db	24
  3720  007E1A  FC                 	db	252
  3721  007E1B  00                 	db	0
  3722  007E1C  7C                 	db	124
  3723  007E1D  08                 	db	8
  3724  007E1E  04                 	db	4
  3725  007E1F  04                 	db	4
  3726  007E20  08                 	db	8
  3727  007E21  00                 	db	0
  3728  007E22  48                 	db	72
  3729  007E23  54                 	db	84
  3730  007E24  54                 	db	84
  3731  007E25  54                 	db	84
  3732  007E26  20                 	db	32
  3733  007E27  00                 	db	0
  3734  007E28  04                 	db	4
  3735  007E29  3F                 	db	63
  3736  007E2A  44                 	db	68
  3737  007E2B  40                 	db	64
  3738  007E2C  20                 	db	32
  3739  007E2D  00                 	db	0
  3740  007E2E  3C                 	db	60
  3741  007E2F  40                 	db	64
  3742  007E30  40                 	db	64
  3743  007E31  20                 	db	32
  3744  007E32  7C                 	db	124
  3745  007E33  00                 	db	0
  3746  007E34  1C                 	db	28
  3747  007E35  20                 	db	32
  3748  007E36  40                 	db	64
  3749  007E37  20                 	db	32
  3750  007E38  1C                 	db	28
  3751  007E39  00                 	db	0
  3752  007E3A  3C                 	db	60
  3753  007E3B  40                 	db	64
  3754  007E3C  30                 	db	48
  3755  007E3D  40                 	db	64
  3756  007E3E  3C                 	db	60
  3757  007E3F  00                 	db	0
  3758  007E40  44                 	db	68
  3759  007E41  28                 	db	40
  3760  007E42  10                 	db	16
  3761  007E43  28                 	db	40
  3762  007E44  44                 	db	68
  3763  007E45  00                 	db	0
  3764  007E46  1C                 	db	28
  3765  007E47  A0                 	db	160
  3766  007E48  A0                 	db	160
  3767  007E49  A0                 	db	160
  3768  007E4A  7C                 	db	124
  3769  007E4B  00                 	db	0
  3770  007E4C  44                 	db	68
  3771  007E4D  64                 	db	100
  3772  007E4E  54                 	db	84
  3773  007E4F  4C                 	db	76
  3774  007E50  44                 	db	68
  3775  007E51  00                 	db	0
  3776  007E52  00                 	db	0
  3777  007E53  10                 	db	16
  3778  007E54  7C                 	db	124
  3779  007E55  82                 	db	130
  3780  007E56  00                 	db	0
  3781  007E57  00                 	db	0
  3782  007E58  00                 	db	0
  3783  007E59  00                 	db	0
  3784  007E5A  FF                 	db	255
  3785  007E5B  00                 	db	0
  3786  007E5C  00                 	db	0
  3787  007E5D  00                 	db	0
  3788  007E5E  00                 	db	0
  3789  007E5F  82                 	db	130
  3790  007E60  7C                 	db	124
  3791  007E61  10                 	db	16
  3792  007E62  00                 	db	0
  3793  007E63  00                 	db	0
  3794  007E64  00                 	db	0
  3795  007E65  06                 	db	6
  3796  007E66  09                 	db	9
  3797  007E67  09                 	db	9
  3798  007E68  06                 	db	6
  3799  007E69                     __end_of_SMALL_FONTS:
  3800                           	callstack 0
  3801  007E69                     _TINY_FONTS:
  3802                           	callstack 0
  3803  007E69  00                 	db	0
  3804  007E6A  00                 	db	0
  3805  007E6B  00                 	db	0
  3806  007E6C  03                 	db	3
  3807  007E6D  A0                 	db	160
  3808  007E6E  00                 	db	0
  3809  007E6F  C0                 	db	192
  3810  007E70  0C                 	db	12
  3811  007E71  00                 	db	0
  3812  007E72  F9                 	db	249
  3813  007E73  4F                 	db	79
  3814  007E74  80                 	db	128
  3815  007E75  6B                 	db	107
  3816  007E76  EB                 	db	235
  3817  007E77  00                 	db	0
  3818  007E78  98                 	db	152
  3819  007E79  8C                 	db	140
  3820  007E7A  80                 	db	128
  3821  007E7B  52                 	db	82
  3822  007E7C  A5                 	db	165
  3823  007E7D  80                 	db	128
  3824  007E7E  03                 	db	3
  3825  007E7F  00                 	db	0
  3826  007E80  00                 	db	0
  3827  007E81  01                 	db	1
  3828  007E82  C8                 	db	200
  3829  007E83  80                 	db	128
  3830  007E84  89                 	db	137
  3831  007E85  C0                 	db	192
  3832  007E86  00                 	db	0
  3833  007E87  50                 	db	80
  3834  007E88  85                 	db	133
  3835  007E89  00                 	db	0
  3836  007E8A  21                 	db	33
  3837  007E8B  C2                 	db	194
  3838  007E8C  00                 	db	0
  3839  007E8D  08                 	db	8
  3840  007E8E  40                 	db	64
  3841  007E8F  00                 	db	0
  3842  007E90  20                 	db	32
  3843  007E91  82                 	db	130
  3844  007E92  00                 	db	0
  3845  007E93  00                 	db	0
  3846  007E94  20                 	db	32
  3847  007E95  00                 	db	0
  3848  007E96  18                 	db	24
  3849  007E97  8C                 	db	140
  3850  007E98  00                 	db	0
  3851  007E99  FA                 	db	250
  3852  007E9A  2F                 	db	47
  3853  007E9B  80                 	db	128
  3854  007E9C  4B                 	db	75
  3855  007E9D  E0                 	db	224
  3856  007E9E  80                 	db	128
  3857  007E9F  5A                 	db	90
  3858  007EA0  66                 	db	102
  3859  007EA1  80                 	db	128
  3860  007EA2  8A                 	db	138
  3861  007EA3  A5                 	db	165
  3862  007EA4  00                 	db	0
  3863  007EA5  E0                 	db	224
  3864  007EA6  8F                 	db	143
  3865  007EA7  80                 	db	128
  3866  007EA8  EA                 	db	234
  3867  007EA9  AB                 	db	171
  3868  007EAA  00                 	db	0
  3869  007EAB  72                 	db	114
  3870  007EAC  A9                 	db	169
  3871  007EAD  00                 	db	0
  3872  007EAE  9A                 	db	154
  3873  007EAF  8C                 	db	140
  3874  007EB0  00                 	db	0
  3875  007EB1  FA                 	db	250
  3876  007EB2  AF                 	db	175
  3877  007EB3  80                 	db	128
  3878  007EB4  4A                 	db	74
  3879  007EB5  A7                 	db	167
  3880  007EB6  00                 	db	0
  3881  007EB7  01                 	db	1
  3882  007EB8  40                 	db	64
  3883  007EB9  00                 	db	0
  3884  007EBA  09                 	db	9
  3885  007EBB  40                 	db	64
  3886  007EBC  00                 	db	0
  3887  007EBD  21                 	db	33
  3888  007EBE  48                 	db	72
  3889  007EBF  80                 	db	128
  3890  007EC0  51                 	db	81
  3891  007EC1  45                 	db	69
  3892  007EC2  00                 	db	0
  3893  007EC3  89                 	db	137
  3894  007EC4  42                 	db	66
  3895  007EC5  00                 	db	0
  3896  007EC6  42                 	db	66
  3897  007EC7  66                 	db	102
  3898  007EC8  00                 	db	0
  3899  007EC9  72                 	db	114
  3900  007ECA  A6                 	db	166
  3901  007ECB  80                 	db	128
  3902  007ECC  7A                 	db	122
  3903  007ECD  87                 	db	135
  3904  007ECE  80                 	db	128
  3905  007ECF  FA                 	db	250
  3906  007ED0  A5                 	db	165
  3907  007ED1  00                 	db	0
  3908  007ED2  72                 	db	114
  3909  007ED3  25                 	db	37
  3910  007ED4  00                 	db	0
  3911  007ED5  FA                 	db	250
  3912  007ED6  27                 	db	39
  3913  007ED7  00                 	db	0
  3914  007ED8  FA                 	db	250
  3915  007ED9  A8                 	db	168
  3916  007EDA  80                 	db	128
  3917  007EDB  FA                 	db	250
  3918  007EDC  88                 	db	136
  3919  007EDD  00                 	db	0
  3920  007EDE  72                 	db	114
  3921  007EDF  2B                 	db	43
  3922  007EE0  00                 	db	0
  3923  007EE1  F8                 	db	248
  3924  007EE2  8F                 	db	143
  3925  007EE3  80                 	db	128
  3926  007EE4  8B                 	db	139
  3927  007EE5  E8                 	db	232
  3928  007EE6  80                 	db	128
  3929  007EE7  8B                 	db	139
  3930  007EE8  E8                 	db	232
  3931  007EE9  00                 	db	0
  3932  007EEA  F8                 	db	248
  3933  007EEB  8D                 	db	141
  3934  007EEC  80                 	db	128
  3935  007EED  F8                 	db	248
  3936  007EEE  20                 	db	32
  3937  007EEF  80                 	db	128
  3938  007EF0  F9                 	db	249
  3939  007EF1  0F                 	db	15
  3940  007EF2  80                 	db	128
  3941  007EF3  F9                 	db	249
  3942  007EF4  CF                 	db	207
  3943  007EF5  80                 	db	128
  3944  007EF6  72                 	db	114
  3945  007EF7  27                 	db	39
  3946  007EF8  00                 	db	0
  3947  007EF9  FA                 	db	250
  3948  007EFA  84                 	db	132
  3949  007EFB  00                 	db	0
  3950  007EFC  72                 	db	114
  3951  007EFD  27                 	db	39
  3952  007EFE  40                 	db	64
  3953  007EFF  FA                 	db	250
  3954  007F00  85                 	db	133
  3955  007F01  80                 	db	128
  3956  007F02  4A                 	db	74
  3957  007F03  A9                 	db	169
  3958  007F04  00                 	db	0
  3959  007F05  83                 	db	131
  3960  007F06  E8                 	db	232
  3961  007F07  00                 	db	0
  3962  007F08  F0                 	db	240
  3963  007F09  2F                 	db	47
  3964  007F0A  00                 	db	0
  3965  007F0B  E0                 	db	224
  3966  007F0C  6E                 	db	110
  3967  007F0D  00                 	db	0
  3968  007F0E  F0                 	db	240
  3969  007F0F  EF                 	db	239
  3970  007F10  00                 	db	0
  3971  007F11  D8                 	db	216
  3972  007F12  8D                 	db	141
  3973  007F13  80                 	db	128
  3974  007F14  C0                 	db	192
  3975  007F15  EC                 	db	236
  3976  007F16  00                 	db	0
  3977  007F17  9A                 	db	154
  3978  007F18  AC                 	db	172
  3979  007F19  80                 	db	128
  3980  007F1A  03                 	db	3
  3981  007F1B  E8                 	db	232
  3982  007F1C  80                 	db	128
  3983  007F1D  C0                 	db	192
  3984  007F1E  81                 	db	129
  3985  007F1F  80                 	db	128
  3986  007F20  8B                 	db	139
  3987  007F21  E0                 	db	224
  3988  007F22  00                 	db	0
  3989  007F23  42                 	db	66
  3990  007F24  04                 	db	4
  3991  007F25  00                 	db	0
  3992  007F26  08                 	db	8
  3993  007F27  20                 	db	32
  3994  007F28  80                 	db	128
  3995  007F29  02                 	db	2
  3996  007F2A  04                 	db	4
  3997  007F2B  00                 	db	0
  3998  007F2C  31                 	db	49
  3999  007F2D  23                 	db	35
  4000  007F2E  80                 	db	128
  4001  007F2F  F9                 	db	249
  4002  007F30  23                 	db	35
  4003  007F31  00                 	db	0
  4004  007F32  31                 	db	49
  4005  007F33  24                 	db	36
  4006  007F34  80                 	db	128
  4007  007F35  31                 	db	49
  4008  007F36  2F                 	db	47
  4009  007F37  80                 	db	128
  4010  007F38  31                 	db	49
  4011  007F39  62                 	db	98
  4012  007F3A  80                 	db	128
  4013  007F3B  23                 	db	35
  4014  007F3C  EA                 	db	234
  4015  007F3D  00                 	db	0
  4016  007F3E  25                 	db	37
  4017  007F3F  53                 	db	83
  4018  007F40  80                 	db	128
  4019  007F41  F9                 	db	249
  4020  007F42  03                 	db	3
  4021  007F43  80                 	db	128
  4022  007F44  02                 	db	2
  4023  007F45  E0                 	db	224
  4024  007F46  00                 	db	0
  4025  007F47  06                 	db	6
  4026  007F48  E0                 	db	224
  4027  007F49  00                 	db	0
  4028  007F4A  F8                 	db	248
  4029  007F4B  42                 	db	66
  4030  007F4C  80                 	db	128
  4031  007F4D  03                 	db	3
  4032  007F4E  E0                 	db	224
  4033  007F4F  00                 	db	0
  4034  007F50  79                 	db	121
  4035  007F51  87                 	db	135
  4036  007F52  80                 	db	128
  4037  007F53  39                 	db	57
  4038  007F54  03                 	db	3
  4039  007F55  80                 	db	128
  4040  007F56  31                 	db	49
  4041  007F57  23                 	db	35
  4042  007F58  00                 	db	0
  4043  007F59  7D                 	db	125
  4044  007F5A  23                 	db	35
  4045  007F5B  00                 	db	0
  4046  007F5C  31                 	db	49
  4047  007F5D  27                 	db	39
  4048  007F5E  C0                 	db	192
  4049  007F5F  78                 	db	120
  4050  007F60  84                 	db	132
  4051  007F61  00                 	db	0
  4052  007F62  29                 	db	41
  4053  007F63  40                 	db	64
  4054  007F64  00                 	db	0
  4055  007F65  43                 	db	67
  4056  007F66  E4                 	db	228
  4057  007F67  00                 	db	0
  4058  007F68  70                 	db	112
  4059  007F69  27                 	db	39
  4060  007F6A  00                 	db	0
  4061  007F6B  60                 	db	96
  4062  007F6C  66                 	db	102
  4063  007F6D  00                 	db	0
  4064  007F6E  70                 	db	112
  4065  007F6F  67                 	db	103
  4066  007F70  00                 	db	0
  4067  007F71  48                 	db	72
  4068  007F72  C4                 	db	196
  4069  007F73  80                 	db	128
  4070  007F74  74                 	db	116
  4071  007F75  57                 	db	87
  4072  007F76  80                 	db	128
  4073  007F77  59                 	db	89
  4074  007F78  E6                 	db	230
  4075  007F79  80                 	db	128
  4076  007F7A  23                 	db	35
  4077  007F7B  E8                 	db	232
  4078  007F7C  80                 	db	128
  4079  007F7D  03                 	db	3
  4080  007F7E  60                 	db	96
  4081  007F7F  00                 	db	0
  4082  007F80  8B                 	db	139
  4083  007F81  E2                 	db	226
  4084  007F82  00                 	db	0
  4085  007F83  61                 	db	97
  4086  007F84  0C                 	db	12
  4087  007F85  00                 	db	0
  4088  007F86                     __end_of_TINY_FONTS:
  4089                           	callstack 0
  4090  007F86                     _barras:
  4091                           	callstack 0
  4092  007F86  C0                 	db	192
  4093  007F87  00                 	db	0
  4094  007F88  F0                 	db	240
  4095  007F89  00                 	db	0
  4096  007F8A  FC                 	db	252
  4097  007F8B  00                 	db	0
  4098  007F8C  FF                 	db	255
  4099  007F8D  00                 	db	0
  4100  007F8E                     __end_of_barras:
  4101                           	callstack 0
  4102  0000                     _TMR1	set	4046
  4103  0000                     _T1CONbits	set	4045
  4104  0000                     _TRISCbits	set	3988
  4105  0000                     _PORTDbits	set	3971
  4106  0000                     _LATCbits	set	3979
  4107  0000                     _TXREG	set	4013
  4108  0000                     _SPBRG	set	4015
  4109  0000                     _PIE1bits	set	3997
  4110  0000                     _BAUDCONbits	set	4024
  4111  0000                     _RCSTAbits	set	4011
  4112  0000                     _TXSTAbits	set	4012
  4113  0000                     _SSPCON2	set	4037
  4114  0000                     _SSPBUF	set	4041
  4115  0000                     _SSPSTATbits	set	4039
  4116  0000                     _SSPCON2bits	set	4037
  4117  0000                     _SSPADD	set	4040
  4118  0000                     _SSPCON1	set	4038
  4119  0000                     _SSPSTAT	set	4039
  4120  0000                     _TRISBbits	set	3987
  4121  0000                     _PORTEbits	set	3972
  4122  0000                     _INTCONbits	set	4082
  4123  0000                     _LATDbits	set	3980
  4124  0000                     _TRISDbits	set	3989
  4125  0000                     _TRISE	set	3990
  4126  0000                     _ADCON1	set	4033
  4127  0000                     _PIR1bits	set	3998
  4128  0000                     _ACKEN	set	32300
  4129  0000                     _ACKDT	set	32301
  4130  0000                     _RCEN	set	32299
  4131  0000                     _PEN	set	32298
  4132  0000                     _RSEN	set	32297
  4133  0000                     _SEN	set	32296
  4134  007F8E                     STR_21:
  4135  007F8E  52                 	db	82	;'R'
  4136  007F8F  65                 	db	101	;'e'
  4137  007F90  63                 	db	99	;'c'
  4138  007F91  75                 	db	117	;'u'
  4139  007F92  65                 	db	101	;'e'
  4140  007F93  72                 	db	114	;'r'
  4141  007F94  64                 	db	100	;'d'
  4142  007F95  65                 	db	101	;'e'
  4143  007F96  20                 	db	32
  4144  007F97  63                 	db	99	;'c'
  4145  007F98  6F                 	db	111	;'o'
  4146  007F99  6E                 	db	110	;'n'
  4147  007F9A  73                 	db	115	;'s'
  4148  007F9B  65                 	db	101	;'e'
  4149  007F9C  72                 	db	114	;'r'
  4150  007F9D  76                 	db	118	;'v'
  4151  007F9E  61                 	db	97	;'a'
  4152  007F9F  72                 	db	114	;'r'
  4153  007FA0  20                 	db	32
  4154  007FA1  73                 	db	115	;'s'
  4155  007FA2  75                 	db	117	;'u'
  4156  007FA3  20                 	db	32
  4157  007FA4  74                 	db	116	;'t'
  4158  007FA5  69                 	db	105	;'i'
  4159  007FA6  63                 	db	99	;'c'
  4160  007FA7  6B                 	db	107	;'k'
  4161  007FA8  65                 	db	101	;'e'
  4162  007FA9  74                 	db	116	;'t'
  4163  007FAA  00                 	db	0
  4164  007FAB                     STR_3:
  4165  007FAB  52                 	db	82	;'R'
  4166  007FAC  45                 	db	69	;'E'
  4167  007FAD  47                 	db	71	;'G'
  4168  007FAE  49                 	db	73	;'I'
  4169  007FAF  53                 	db	83	;'S'
  4170  007FB0  54                 	db	84	;'T'
  4171  007FB1  52                 	db	82	;'R'
  4172  007FB2  4F                 	db	79	;'O'
  4173  007FB3  20                 	db	32
  4174  007FB4  50                 	db	80	;'P'
  4175  007FB5  45                 	db	69	;'E'
  4176  007FB6  52                 	db	82	;'R'
  4177  007FB7  53                 	db	83	;'S'
  4178  007FB8  4F                 	db	79	;'O'
  4179  007FB9  4E                 	db	78	;'N'
  4180  007FBA  41                 	db	65	;'A'
  4181  007FBB  4C                 	db	76	;'L'
  4182  007FBC  00                 	db	0
  4183  007FBD                     STR_2:
  4184  007FBD  4C                 	db	76	;'L'
  4185  007FBE  45                 	db	69	;'E'
  4186  007FBF  43                 	db	67	;'C'
  4187  007FC0  4F                 	db	79	;'O'
  4188  007FC1  4D                 	db	77	;'M'
  4189  007FC2  50                 	db	80	;'P'
  4190  007FC3  45                 	db	69	;'E'
  4191  007FC4  52                 	db	82	;'R'
  4192  007FC5  55                 	db	85	;'U'
  4193  007FC6  00                 	db	0
  4194  007FC7                     STR_1:
  4195  007FC7  49                 	db	73	;'I'
  4196  007FC8  6E                 	db	110	;'n'
  4197  007FC9  69                 	db	105	;'i'
  4198  007FCA  63                 	db	99	;'c'
  4199  007FCB  69                 	db	105	;'i'
  4200  007FCC  6F                 	db	111	;'o'
  4201  007FCD  00                 	db	0
  4202  007FCE                     STR_8:
  4203  007FCE  25                 	db	37
  4204  007FCF  64                 	db	100	;'d'
  4205  007FD0  25                 	db	37
  4206  007FD1  64                 	db	100	;'d'
  4207  007FD2  2D                 	db	45
  4208  007FD3  00                 	db	0
  4209  007FD4                     STR_4:
  4210  007FD4  25                 	db	37
  4211  007FD5  64                 	db	100	;'d'
  4212  007FD6  25                 	db	37
  4213  007FD7  64                 	db	100	;'d'
  4214  007FD8  3A                 	db	58	;':'
  4215  007FD9  00                 	db	0
  4216  007FDA                     STR_10:
  4217  007FDA  20                 	db	32
  4218  007FDB  20                 	db	32
  4219  007FDC  20                 	db	32
  4220  007FDD  20                 	db	32
  4221  007FDE  00                 	db	0
  4222  007FDF                     STR_19:
  4223  007FDF  49                 	db	73	;'I'
  4224  007FE0  44                 	db	68	;'D'
  4225  007FE1  3A                 	db	58	;':'
  4226  007FE2  20                 	db	32
  4227  007FE3  00                 	db	0
  4228  007FE4                     STR_12:
  4229  007FE4  48                 	db	72	;'H'
  4230  007FE5  4F                 	db	79	;'O'
  4231  007FE6  52                 	db	82	;'R'
  4232  007FE7  41                 	db	65	;'A'
  4233  007FE8  00                 	db	0
  4234  007FE9                     STR_15:
  4235  007FE9  59                 	db	89	;'Y'
  4236  007FEA  45                 	db	69	;'E'
  4237  007FEB  41                 	db	65	;'A'
  4238  007FEC  52                 	db	82	;'R'
  4239  007FED  00                 	db	0
  4240  007FEE                     STR_6:
  4241  007FEE  25                 	db	37
  4242  007FEF  64                 	db	100	;'d'
  4243  007FF0  25                 	db	37
  4244  007FF1  64                 	db	100	;'d'
  4245  007FF2  00                 	db	0
  4246  007FF3                     STR_13:
  4247  007FF3  44                 	db	68	;'D'
  4248  007FF4  49                 	db	73	;'I'
  4249  007FF5  41                 	db	65	;'A'
  4250  007FF6  00                 	db	0
  4251  007FF7                     STR_11:
  4252  007FF7  4D                 	db	77	;'M'
  4253  007FF8  49                 	db	73	;'I'
  4254  007FF9  4E                 	db	78	;'N'
  4255  007FFA  00                 	db	0
  4256  007FFB                     STR_14:
  4257  007FFB  4D                 	db	77	;'M'
  4258  007FFC  45                 	db	69	;'E'
  4259  007FFD  53                 	db	83	;'S'
  4260  007FFE  00                 	db	0
  4261  007FFF  00                 	db	0	; dummy byte at the end
  4262  0000                     
  4263                           ; #config settings
  4264                           
  4265                           	psect	cinit
  4266  003694                     __pcinit:
  4267                           	callstack 0
  4268  003694                     start_initialization:
  4269                           	callstack 0
  4270  003694                     __initialization:
  4271                           	callstack 0
  4272                           
  4273                           ; Initialize objects allocated to BANK0 (11 bytes)
  4274                           ; load TBLPTR registers with __pidataBANK0
  4275  003694  0E40               	movlw	low __pidataBANK0
  4276  003696  6EF6               	movwf	tblptrl,c
  4277  003698  0E3B               	movlw	high __pidataBANK0
  4278  00369A  6EF7               	movwf	tblptrh,c
  4279  00369C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4280  00369E  6EF8               	movwf	tblptru,c
  4281  0036A0  EE00  F0EB         	lfsr	0,__pdataBANK0
  4282  0036A4  EE10 F00B          	lfsr	1,11
  4283  0036A8                     copy_data0:
  4284  0036A8  0009               	tblrd		*+
  4285  0036AA  CFF5 FFEE          	movff	tablat,postinc0
  4286  0036AE  50E5               	movf	postdec1,w,c
  4287  0036B0  50E1               	movf	fsr1l,w,c
  4288  0036B2  E1FA               	bnz	copy_data0
  4289                           
  4290                           ; Clear objects allocated to BANK0 (121 bytes)
  4291  0036B4  EE00  F060         	lfsr	0,__pbssBANK0
  4292  0036B8  0E79               	movlw	121
  4293  0036BA                     clear_0:
  4294  0036BA  6AEE               	clrf	postinc0,c
  4295  0036BC  06E8               	decf	wreg,f,c
  4296  0036BE  E1FD               	bnz	clear_0
  4297                           
  4298                           ; Clear objects allocated to COMRAM (1 bytes)
  4299  0036C0  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  4300  0036C2                     end_of_initialization:
  4301                           	callstack 0
  4302  0036C2                     __end_of__initialization:
  4303                           	callstack 0
  4304  0036C2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4305  0036C4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4306  0036C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  4307  0036C8  6EF8               	movwf	tblptru,c
  4308  0036CA  0100               	movlb	0
  4309  0036CC  EFAB  F012         	goto	_main	;jump to C main() function
  4310                           
  4311                           	psect	bssCOMRAM
  4312  00005E                     __pbssCOMRAM:
  4313                           	callstack 0
  4314  00005E                     _configuracion:
  4315                           	callstack 0
  4316  00005E                     	ds	1
  4317                           
  4318                           	psect	bssBANK0
  4319  000060                     __pbssBANK0:
  4320                           	callstack 0
  4321  000060                     _valores:
  4322                           	callstack 0
  4323  000060                     	ds	40
  4324  000088                     _Aux:
  4325                           	callstack 0
  4326  000088                     	ds	5
  4327  00008D                     _Valores:
  4328                           	callstack 0
  4329  00008D                     	ds	5
  4330  000092                     _nout:
  4331                           	callstack 0
  4332  000092                     	ds	2
  4333  000094                     _width:
  4334                           	callstack 0
  4335  000094                     	ds	2
  4336  000096                     _prec:
  4337                           	callstack 0
  4338  000096                     	ds	2
  4339  000098                     _flags:
  4340                           	callstack 0
  4341  000098                     	ds	2
  4342  00009A                     _registro:
  4343                           	callstack 0
  4344  00009A                     	ds	2
  4345  00009C                     _contador_t1:
  4346                           	callstack 0
  4347  00009C                     	ds	2
  4348  00009E                     _TagType:
  4349                           	callstack 0
  4350  00009E                     	ds	2
  4351  0000A0                     _flag_t1:
  4352                           	callstack 0
  4353  0000A0                     	ds	1
  4354  0000A1                     _Segundox:
  4355                           	callstack 0
  4356  0000A1                     	ds	1
  4357  0000A2                     _Minutox:
  4358                           	callstack 0
  4359  0000A2                     	ds	1
  4360  0000A3                     _Horax:
  4361                           	callstack 0
  4362  0000A3                     	ds	1
  4363  0000A4                     _FOUNT:
  4364                           	callstack 0
  4365  0000A4                     	ds	1
  4366  0000A5                     _dbuf:
  4367                           	callstack 0
  4368  0000A5                     	ds	32
  4369  0000C5                     _sms:
  4370                           	callstack 0
  4371  0000C5                     	ds	10
  4372  0000CF                     _UID:
  4373                           	callstack 0
  4374  0000CF                     	ds	10
  4375                           
  4376                           	psect	dataBANK0
  4377  0000EB                     __pdataBANK0:
  4378                           	callstack 0
  4379  0000EB                     _add:
  4380                           	callstack 0
  4381  0000EB                     	ds	2
  4382  0000ED                     _diax:
  4383                           	callstack 0
  4384  0000ED                     	ds	1
  4385  0000EE                     _mesx:
  4386                           	callstack 0
  4387  0000EE                     	ds	1
  4388  0000EF                     _aniox:
  4389                           	callstack 0
  4390  0000EF                     	ds	1
  4391  0000F0                     _dia:
  4392                           	callstack 0
  4393  0000F0                     	ds	1
  4394  0000F1                     _mes:
  4395                           	callstack 0
  4396  0000F1                     	ds	1
  4397  0000F2                     _anio:
  4398                           	callstack 0
  4399  0000F2                     	ds	1
  4400  0000F3                     _Segundo:
  4401                           	callstack 0
  4402  0000F3                     	ds	1
  4403  0000F4                     _Minuto:
  4404                           	callstack 0
  4405  0000F4                     	ds	1
  4406  0000F5                     _Hora:
  4407                           	callstack 0
  4408  0000F5                     	ds	1
  4409                           
  4410                           	psect	cstackBANK0
  4411  0000D9                     __pcstackBANK0:
  4412                           	callstack 0
  4413  0000D9                     ?_sprintf:
  4414                           	callstack 0
  4415  0000D9                     sprintf@s:
  4416                           	callstack 0
  4417                           
  4418                           ; 2 bytes @ 0x0
  4419  0000D9                     	ds	2
  4420  0000DB                     sprintf@fmt:
  4421                           	callstack 0
  4422                           
  4423                           ; 2 bytes @ 0x2
  4424  0000DB                     	ds	6
  4425  0000E1                     sprintf@ap:
  4426                           	callstack 0
  4427                           
  4428                           ; 2 bytes @ 0x8
  4429  0000E1                     	ds	2
  4430  0000E3                     sprintf@f:
  4431                           	callstack 0
  4432                           
  4433                           ; 6 bytes @ 0xA
  4434  0000E3                     	ds	6
  4435  0000E9                     Print_Ticket@valor:
  4436                           	callstack 0
  4437                           
  4438                           ; 2 bytes @ 0x10
  4439  0000E9                     	ds	2
  4440                           
  4441                           	psect	cstackCOMRAM
  4442  000001                     __pcstackCOMRAM:
  4443                           	callstack 0
  4444  000001                     ??_I2C_Start_DS:
  4445  000001                     ??_I2C_Write_DS:
  4446  000001                     ??_I2C_Repeated_Start_DS:
  4447  000001                     ??_I2C_Read_DS:
  4448  000001                     ??_I2C_Stop_DS:
  4449  000001                     ??_bcd_to_decimal:
  4450  000001                     ??_MFRC522_Rd:
  4451  000001                     ?_strlen:
  4452                           	callstack 0
  4453  000001                     ?___wmul:
  4454                           	callstack 0
  4455  000001                     ?___awdiv:
  4456                           	callstack 0
  4457  000001                     ?___awmod:
  4458                           	callstack 0
  4459  000001                     ?___lwdiv:
  4460                           	callstack 0
  4461  000001                     ?___lwmod:
  4462                           	callstack 0
  4463  000001                     ?___fladd:
  4464                           	callstack 0
  4465  000001                     ?___fldiv:
  4466                           	callstack 0
  4467  000001                     ?___fltol:
  4468                           	callstack 0
  4469  000001                     ?___xxtofl:
  4470                           	callstack 0
  4471  000001                     ?___aodiv:
  4472                           	callstack 0
  4473  000001                     ?___aomod:
  4474                           	callstack 0
  4475  000001                     I2C_Init@speed:
  4476                           	callstack 0
  4477  000001                     I2C_Send@data:
  4478                           	callstack 0
  4479  000001                     I2C_Read@temp:
  4480                           	callstack 0
  4481  000001                     UART_Write@data:
  4482                           	callstack 0
  4483  000001                     MFRC522_Wr@value:
  4484                           	callstack 0
  4485  000001                     MFRC522_Clear_UID@u_i:
  4486                           	callstack 0
  4487  000001                     ___wmul@multiplier:
  4488                           	callstack 0
  4489  000001                     ___awdiv@dividend:
  4490                           	callstack 0
  4491  000001                     ___awmod@dividend:
  4492                           	callstack 0
  4493  000001                     ___lwdiv@dividend:
  4494                           	callstack 0
  4495  000001                     ___lwmod@dividend:
  4496                           	callstack 0
  4497  000001                     fputc@c:
  4498                           	callstack 0
  4499  000001                     strlen@s:
  4500                           	callstack 0
  4501  000001                     ___fltol@f1:
  4502                           	callstack 0
  4503  000001                     ___fladd@b:
  4504                           	callstack 0
  4505  000001                     ___fldiv@b:
  4506                           	callstack 0
  4507  000001                     ___xxtofl@val:
  4508                           	callstack 0
  4509  000001                     ___aodiv@dividend:
  4510                           	callstack 0
  4511  000001                     ___aomod@dividend:
  4512                           	callstack 0
  4513                           
  4514                           ; 8 bytes @ 0x0
  4515  000001                     	ds	1
  4516  000002                     bcd_to_decimal@number:
  4517                           	callstack 0
  4518  000002                     ssd1306_command@command:
  4519                           	callstack 0
  4520  000002                     I2C_Write_DS@i2c_data:
  4521                           	callstack 0
  4522  000002                     I2C_Read_DS@ack:
  4523                           	callstack 0
  4524  000002                     MFRC522_Wr@Address:
  4525                           	callstack 0
  4526  000002                     UART_Println@buffer:
  4527                           	callstack 0
  4528  000002                     UART_Print@buffer:
  4529                           	callstack 0
  4530                           
  4531                           ; 2 bytes @ 0x1
  4532  000002                     	ds	1
  4533  000003                     I2C_Read_DS@data:
  4534                           	callstack 0
  4535  000003                     MFRC522_Rd@Address:
  4536                           	callstack 0
  4537  000003                     MFRC522_Wr@ucAddr:
  4538                           	callstack 0
  4539  000003                     OLEDsetCursor@x:
  4540                           	callstack 0
  4541  000003                     MFRC522_Clear_UID@j:
  4542                           	callstack 0
  4543  000003                     ___wmul@multiplicand:
  4544                           	callstack 0
  4545  000003                     ___awdiv@divisor:
  4546                           	callstack 0
  4547  000003                     ___awmod@divisor:
  4548                           	callstack 0
  4549  000003                     ___lwdiv@divisor:
  4550                           	callstack 0
  4551  000003                     ___lwmod@divisor:
  4552                           	callstack 0
  4553  000003                     fputc@fp:
  4554                           	callstack 0
  4555  000003                     strlen@a:
  4556                           	callstack 0
  4557                           
  4558                           ; 2 bytes @ 0x2
  4559  000003                     	ds	1
  4560  000004                     MFRC522_Wr@i:
  4561                           	callstack 0
  4562  000004                     MFRC522_Rd@ucAddr:
  4563                           	callstack 0
  4564                           
  4565                           ; 2 bytes @ 0x3
  4566  000004                     	ds	1
  4567  000005                     ??_fputc:
  4568  000005                     ??___fltol:
  4569  000005                     ??___xxtofl:
  4570  000005                     ___awdiv@counter:
  4571                           	callstack 0
  4572  000005                     ___awmod@counter:
  4573                           	callstack 0
  4574  000005                     ___lwmod@counter:
  4575                           	callstack 0
  4576  000005                     OLEDsetCursor@y:
  4577                           	callstack 0
  4578  000005                     ___wmul@product:
  4579                           	callstack 0
  4580  000005                     ___lwdiv@quotient:
  4581                           	callstack 0
  4582  000005                     ___fladd@a:
  4583                           	callstack 0
  4584  000005                     ___fldiv@a:
  4585                           	callstack 0
  4586                           
  4587                           ; 4 bytes @ 0x4
  4588  000005                     	ds	1
  4589  000006                     ___awdiv@sign:
  4590                           	callstack 0
  4591  000006                     ___awmod@sign:
  4592                           	callstack 0
  4593  000006                     MFRC522_Rd@ucResult:
  4594                           	callstack 0
  4595                           
  4596                           ; 2 bytes @ 0x5
  4597  000006                     	ds	1
  4598  000007                     ___lwdiv@counter:
  4599                           	callstack 0
  4600  000007                     OLED_NPuts@buffer:
  4601                           	callstack 0
  4602  000007                     OLED_SPuts@x:
  4603                           	callstack 0
  4604  000007                     OLEDClear@i:
  4605                           	callstack 0
  4606  000007                     EEPROM_Read@add:
  4607                           	callstack 0
  4608  000007                     ___awdiv@quotient:
  4609                           	callstack 0
  4610                           
  4611                           ; 2 bytes @ 0x6
  4612  000007                     	ds	1
  4613  000008                     MFRC522_Rd@i:
  4614                           	callstack 0
  4615  000008                     EEPROM_Write@add:
  4616                           	callstack 0
  4617                           
  4618                           ; 2 bytes @ 0x7
  4619  000008                     	ds	1
  4620  000009                     ??_OLED_NPuts:
  4621  000009                     ??___fladd:
  4622  000009                     ??___fldiv:
  4623  000009                     ??_decimal_to_bcd:
  4624  000009                     EEPROM_Read@temp:
  4625                           	callstack 0
  4626  000009                     ___fltol@sign1:
  4627                           	callstack 0
  4628  000009                     ___xxtofl@sign:
  4629                           	callstack 0
  4630  000009                     OLED_SPuts@y:
  4631                           	callstack 0
  4632  000009                     ___aodiv@divisor:
  4633                           	callstack 0
  4634  000009                     ___aomod@divisor:
  4635                           	callstack 0
  4636                           
  4637                           ; 8 bytes @ 0x8
  4638  000009                     	ds	1
  4639  00000A                     ?_EEPROM_getRegistro:
  4640                           	callstack 0
  4641  00000A                     MFRC522_Clear_Bit@mask:
  4642                           	callstack 0
  4643  00000A                     MFRC522_Set_Bit@mask:
  4644                           	callstack 0
  4645  00000A                     EEPROM_Write@data:
  4646                           	callstack 0
  4647  00000A                     ___fltol@exp1:
  4648                           	callstack 0
  4649  00000A                     ___xxtofl@exp:
  4650                           	callstack 0
  4651  00000A                     Muestra_ID@valor:
  4652                           	callstack 0
  4653  00000A                     fputs@s:
  4654                           	callstack 0
  4655                           
  4656                           ; 2 bytes @ 0x9
  4657  00000A                     	ds	1
  4658  00000B                     ??_EEPROM_Write:
  4659  00000B                     decimal_to_bcd@number:
  4660                           	callstack 0
  4661  00000B                     OLED_NPuts@c:
  4662                           	callstack 0
  4663  00000B                     MFRC522_Clear_Bit@tmp:
  4664                           	callstack 0
  4665  00000B                     MFRC522_Set_Bit@tmp:
  4666                           	callstack 0
  4667  00000B                     OLED_SPuts@buffer:
  4668                           	callstack 0
  4669  00000B                     ___xxtofl@arg:
  4670                           	callstack 0
  4671                           
  4672                           ; 4 bytes @ 0xA
  4673  00000B                     	ds	1
  4674  00000C                     ??_EEPROM_getRegistro:
  4675  00000C                     ??_set_RTC:
  4676  00000C                     MFRC522_Clear_Bit@addr:
  4677                           	callstack 0
  4678  00000C                     MFRC522_Set_Bit@addr:
  4679                           	callstack 0
  4680  00000C                     OLED_NPuts@x:
  4681                           	callstack 0
  4682  00000C                     EEPROM_setRegistro@registro:
  4683                           	callstack 0
  4684  00000C                     fputs@fp:
  4685                           	callstack 0
  4686                           
  4687                           ; 2 bytes @ 0xB
  4688  00000C                     	ds	1
  4689  00000D                     ??_OLED_SPuts:
  4690  00000D                     ___fladd@signs:
  4691                           	callstack 0
  4692  00000D                     MFRC522_ToCard@sendData:
  4693                           	callstack 0
  4694  00000D                     MFRC522_CRC@dataIn:
  4695                           	callstack 0
  4696  00000D                     ___fldiv@rem:
  4697                           	callstack 0
  4698                           
  4699                           ; 4 bytes @ 0xC
  4700  00000D                     	ds	1
  4701  00000E                     ___fladd@aexp:
  4702                           	callstack 0
  4703  00000E                     fputs@c:
  4704                           	callstack 0
  4705  00000E                     OLED_NPuts@i:
  4706                           	callstack 0
  4707                           
  4708                           ; 2 bytes @ 0xD
  4709  00000E                     	ds	1
  4710  00000F                     MFRC522_ToCard@sendLen:
  4711                           	callstack 0
  4712  00000F                     MFRC522_CRC@length:
  4713                           	callstack 0
  4714  00000F                     ___fladd@bexp:
  4715                           	callstack 0
  4716  00000F                     EEPROM_getRegistro@registro:
  4717                           	callstack 0
  4718  00000F                     fputs@i:
  4719                           	callstack 0
  4720                           
  4721                           ; 2 bytes @ 0xE
  4722  00000F                     	ds	1
  4723  000010                     ___fladd@grs:
  4724                           	callstack 0
  4725  000010                     MFRC522_ToCard@backData:
  4726                           	callstack 0
  4727  000010                     MFRC522_CRC@dataOut:
  4728                           	callstack 0
  4729                           
  4730                           ; 2 bytes @ 0xF
  4731  000010                     	ds	1
  4732  000011                     ?_Registro_busqueda:
  4733                           	callstack 0
  4734  000011                     ?_pad:
  4735                           	callstack 0
  4736  000011                     ?___flsub:
  4737                           	callstack 0
  4738  000011                     ___aodiv@counter:
  4739                           	callstack 0
  4740  000011                     ___aomod@counter:
  4741                           	callstack 0
  4742  000011                     ___fldiv@sign:
  4743                           	callstack 0
  4744  000011                     OLED_SPuts@valve:
  4745                           	callstack 0
  4746  000011                     Guarda_ID@registro:
  4747                           	callstack 0
  4748  000011                     pad@fp:
  4749                           	callstack 0
  4750  000011                     ___flsub@b:
  4751                           	callstack 0
  4752                           
  4753                           ; 4 bytes @ 0x10
  4754  000011                     	ds	1
  4755  000012                     MFRC522_CRC@n:
  4756                           	callstack 0
  4757  000012                     ___aodiv@sign:
  4758                           	callstack 0
  4759  000012                     ___aomod@sign:
  4760                           	callstack 0
  4761  000012                     MFRC522_ToCard@backLen:
  4762                           	callstack 0
  4763  000012                     ___fldiv@new_exp:
  4764                           	callstack 0
  4765                           
  4766                           ; 2 bytes @ 0x11
  4767  000012                     	ds	1
  4768  000013                     ?_abs:
  4769                           	callstack 0
  4770  000013                     OLED_SPuts@c:
  4771                           	callstack 0
  4772  000013                     MFRC522_CRC@i:
  4773                           	callstack 0
  4774  000013                     Registro_busqueda@registro:
  4775                           	callstack 0
  4776  000013                     pad@buf:
  4777                           	callstack 0
  4778  000013                     abs@a:
  4779                           	callstack 0
  4780  000013                     ___aodiv@quotient:
  4781                           	callstack 0
  4782                           
  4783                           ; 8 bytes @ 0x12
  4784  000013                     	ds	1
  4785  000014                     ??_MFRC522_ToCard:
  4786  000014                     OLED_SPuts@xi:
  4787                           	callstack 0
  4788  000014                     ___fldiv@grs:
  4789                           	callstack 0
  4790                           
  4791                           ; 4 bytes @ 0x13
  4792  000014                     	ds	1
  4793  000015                     ??_abs:
  4794  000015                     Registro_busqueda@datox:
  4795                           	callstack 0
  4796  000015                     pad@p:
  4797                           	callstack 0
  4798  000015                     ___flsub@a:
  4799                           	callstack 0
  4800                           
  4801                           ; 4 bytes @ 0x14
  4802  000015                     	ds	1
  4803  000016                     OLED_SPuts@i:
  4804                           	callstack 0
  4805  000016                     Registro_busqueda@i:
  4806                           	callstack 0
  4807                           
  4808                           ; 2 bytes @ 0x15
  4809  000016                     	ds	1
  4810  000017                     ??_pad:
  4811                           
  4812                           ; 1 bytes @ 0x16
  4813  000017                     	ds	1
  4814  000018                     MFRC522_ToCard@waitIRq:
  4815                           	callstack 0
  4816  000018                     ___fldiv@bexp:
  4817                           	callstack 0
  4818  000018                     OLED_SPuts@j:
  4819                           	callstack 0
  4820  000018                     pad@i:
  4821                           	callstack 0
  4822                           
  4823                           ; 2 bytes @ 0x17
  4824  000018                     	ds	1
  4825  000019                     MFRC522_ToCard@_status:
  4826                           	callstack 0
  4827  000019                     ___fldiv@aexp:
  4828                           	callstack 0
  4829  000019                     ___flge@ff1:
  4830                           	callstack 0
  4831                           
  4832                           ; 4 bytes @ 0x18
  4833  000019                     	ds	1
  4834  00001A                     MFRC522_ToCard@lastBits:
  4835                           	callstack 0
  4836  00001A                     pad@w:
  4837                           	callstack 0
  4838                           
  4839                           ; 2 bytes @ 0x19
  4840  00001A                     	ds	1
  4841  00001B                     MFRC522_ToCard@irqEn:
  4842                           	callstack 0
  4843                           
  4844                           ; 1 bytes @ 0x1A
  4845  00001B                     	ds	1
  4846  00001C                     ?_dtoa:
  4847                           	callstack 0
  4848  00001C                     MFRC522_ToCard@command:
  4849                           	callstack 0
  4850  00001C                     dtoa@fp:
  4851                           	callstack 0
  4852                           
  4853                           ; 2 bytes @ 0x1B
  4854  00001C                     	ds	1
  4855  00001D                     MFRC522_ToCard@i:
  4856                           	callstack 0
  4857  00001D                     ___flge@ff2:
  4858                           	callstack 0
  4859                           
  4860                           ; 4 bytes @ 0x1C
  4861  00001D                     	ds	1
  4862  00001E                     dtoa@d:
  4863                           	callstack 0
  4864                           
  4865                           ; 8 bytes @ 0x1D
  4866  00001E                     	ds	1
  4867  00001F                     MFRC522_ToCard@n:
  4868                           	callstack 0
  4869                           
  4870                           ; 1 bytes @ 0x1E
  4871  00001F                     	ds	1
  4872  000020                     MFRC522_Request@TagType:
  4873                           	callstack 0
  4874  000020                     MFRC522_AntiColl@serNum:
  4875                           	callstack 0
  4876  000020                     MFRC522_Halt@buff:
  4877                           	callstack 0
  4878                           
  4879                           ; 4 bytes @ 0x1F
  4880  000020                     	ds	1
  4881  000021                     ??___flge:
  4882                           
  4883                           ; 1 bytes @ 0x20
  4884  000021                     	ds	1
  4885  000022                     MFRC522_Request@reqMode:
  4886                           	callstack 0
  4887                           
  4888                           ; 1 bytes @ 0x21
  4889  000022                     	ds	1
  4890  000023                     MFRC522_Request@_status:
  4891                           	callstack 0
  4892  000023                     MFRC522_AntiColl@serNumCheck:
  4893                           	callstack 0
  4894                           
  4895                           ; 1 bytes @ 0x22
  4896  000023                     	ds	1
  4897  000024                     MFRC522_Request@backBits:
  4898                           	callstack 0
  4899  000024                     MFRC522_Halt@unLen:
  4900                           	callstack 0
  4901  000024                     MFRC522_AntiColl@unLen:
  4902                           	callstack 0
  4903                           
  4904                           ; 2 bytes @ 0x23
  4905  000024                     	ds	1
  4906  000025                     UART_Begin@baud:
  4907                           	callstack 0
  4908                           
  4909                           ; 4 bytes @ 0x24
  4910  000025                     	ds	1
  4911  000026                     ??_dtoa:
  4912  000026                     MFRC522_AntiColl@_status:
  4913                           	callstack 0
  4914  000026                     MFRC522_isCard@TagType:
  4915                           	callstack 0
  4916                           
  4917                           ; 2 bytes @ 0x25
  4918  000026                     	ds	1
  4919  000027                     MFRC522_AntiColl@i:
  4920                           	callstack 0
  4921                           
  4922                           ; 1 bytes @ 0x26
  4923  000027                     	ds	1
  4924  000028                     MFRC522_ReadCardSerial@str:
  4925                           	callstack 0
  4926                           
  4927                           ; 2 bytes @ 0x27
  4928  000028                     	ds	1
  4929  000029                     UART_Begin@aux2:
  4930                           	callstack 0
  4931                           
  4932                           ; 4 bytes @ 0x28
  4933  000029                     	ds	1
  4934  00002A                     MFRC522_ReadCardSerial@_status:
  4935                           	callstack 0
  4936                           
  4937                           ; 1 bytes @ 0x29
  4938  00002A                     	ds	3
  4939  00002D                     UART_Begin@aux:
  4940                           	callstack 0
  4941                           
  4942                           ; 4 bytes @ 0x2C
  4943  00002D                     	ds	1
  4944  00002E                     _dtoa$2017:
  4945                           	callstack 0
  4946                           
  4947                           ; 2 bytes @ 0x2D
  4948  00002E                     	ds	2
  4949  000030                     dtoa@p:
  4950                           	callstack 0
  4951                           
  4952                           ; 2 bytes @ 0x2F
  4953  000030                     	ds	2
  4954  000032                     dtoa@w:
  4955                           	callstack 0
  4956                           
  4957                           ; 2 bytes @ 0x31
  4958  000032                     	ds	2
  4959  000034                     dtoa@s:
  4960                           	callstack 0
  4961                           
  4962                           ; 2 bytes @ 0x33
  4963  000034                     	ds	2
  4964  000036                     dtoa@n:
  4965                           	callstack 0
  4966                           
  4967                           ; 8 bytes @ 0x35
  4968  000036                     	ds	8
  4969  00003E                     dtoa@i:
  4970                           	callstack 0
  4971                           
  4972                           ; 2 bytes @ 0x3D
  4973  00003E                     	ds	2
  4974  000040                     ?_vfpfcnvrt:
  4975                           	callstack 0
  4976  000040                     vfpfcnvrt@fp:
  4977                           	callstack 0
  4978                           
  4979                           ; 2 bytes @ 0x3F
  4980  000040                     	ds	2
  4981  000042                     vfpfcnvrt@fmt:
  4982                           	callstack 0
  4983                           
  4984                           ; 2 bytes @ 0x41
  4985  000042                     	ds	2
  4986  000044                     vfpfcnvrt@ap:
  4987                           	callstack 0
  4988                           
  4989                           ; 2 bytes @ 0x43
  4990  000044                     	ds	2
  4991  000046                     ??_vfpfcnvrt:
  4992                           
  4993                           ; 1 bytes @ 0x45
  4994  000046                     	ds	2
  4995  000048                     vfpfcnvrt@ll:
  4996                           	callstack 0
  4997                           
  4998                           ; 8 bytes @ 0x47
  4999  000048                     	ds	8
  5000  000050                     ?_vfprintf:
  5001                           	callstack 0
  5002  000050                     vfprintf@fp:
  5003                           	callstack 0
  5004                           
  5005                           ; 2 bytes @ 0x4F
  5006  000050                     	ds	2
  5007  000052                     vfprintf@fmt:
  5008                           	callstack 0
  5009                           
  5010                           ; 2 bytes @ 0x51
  5011  000052                     	ds	2
  5012  000054                     vfprintf@ap:
  5013                           	callstack 0
  5014                           
  5015                           ; 2 bytes @ 0x53
  5016  000054                     	ds	2
  5017  000056                     vfprintf@cfmt:
  5018                           	callstack 0
  5019                           
  5020                           ; 2 bytes @ 0x55
  5021  000056                     	ds	2
  5022  000058                     ??_get_key:
  5023  000058                     CHECK_TAG@valor:
  5024                           	callstack 0
  5025                           
  5026                           ; 2 bytes @ 0x57
  5027  000058                     	ds	2
  5028  00005A                     CHECK_TAG@i:
  5029                           	callstack 0
  5030                           
  5031                           ; 2 bytes @ 0x59
  5032  00005A                     	ds	2
  5033  00005C                     ??_main:
  5034                           
  5035                           ; 1 bytes @ 0x5B
  5036  00005C                     	ds	2
  5037                           
  5038 ;;
  5039 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5040 ;;
  5041 ;; *************** function _main *****************
  5042 ;; Defined at:
  5043 ;;		line 83 in file "main.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5059 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5060 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5061 ;;Total ram usage:        2 bytes
  5062 ;; Hardware stack levels required when called: 11
  5063 ;; This function calls:
  5064 ;;		_CHECK_TAG
  5065 ;;		_EEPROM_Read
  5066 ;;		_EEPROM_Write
  5067 ;;		_EEPROM_getRegistro
  5068 ;;		_EEPROM_setRegistro
  5069 ;;		_MFRC522_Init
  5070 ;;		_OLED_Init
  5071 ;;		_Print_Menu
  5072 ;;		_Timer1_Init
  5073 ;;		_UART_Begin
  5074 ;;		_UART_Init
  5075 ;;		_UART_Println
  5076 ;;		_get_RTC
  5077 ;;		_get_key
  5078 ;; This function is called by:
  5079 ;;		Startup code after reset
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text0
  5084  002556                     __ptext0:
  5085                           	callstack 0
  5086  002556                     _main:
  5087                           	callstack 20
  5088  002556                     
  5089                           ;main.c: 86:     ADCON1 = 0x0F;
  5090  002556  0E0F               	movlw	15
  5091  002558  6EC1               	movwf	193,c	;volatile
  5092                           
  5093                           ;main.c: 87:     TRISE = 0xF;
  5094  00255A  0E0F               	movlw	15
  5095  00255C  6E96               	movwf	150,c	;volatile
  5096  00255E                     
  5097                           ;main.c: 88:     TRISDbits.RD6 = 0;
  5098  00255E  9C95               	bcf	149,6,c	;volatile
  5099  002560                     
  5100                           ;main.c: 89:     LATDbits.LATD6 = 0;
  5101  002560  9C8C               	bcf	140,6,c	;volatile
  5102  002562                     
  5103                           ;main.c: 90:     INTCONbits.GIE = 1;
  5104  002562  8EF2               	bsf	242,7,c	;volatile
  5105  002564                     
  5106                           ;main.c: 91:     INTCONbits.PEIE = 1;
  5107  002564  8CF2               	bsf	242,6,c	;volatile
  5108  002566                     
  5109                           ;main.c: 94:     Timer1_Init();
  5110  002566  EC0D  F01D         	call	_Timer1_Init	;wreg free
  5111                           
  5112                           ;main.c: 97:     UART_Init();
  5113  00256A  EC4E  F01D         	call	_UART_Init	;wreg free
  5114  00256E                     
  5115                           ;main.c: 98:     UART_Begin(9600);
  5116  00256E  0E80               	movlw	128
  5117  002570  6E25               	movwf	UART_Begin@baud^0,c
  5118  002572  0E25               	movlw	37
  5119  002574  6E26               	movwf	(UART_Begin@baud+1)^0,c
  5120  002576  0E00               	movlw	0
  5121  002578  6E27               	movwf	(UART_Begin@baud+2)^0,c
  5122  00257A  0E00               	movlw	0
  5123  00257C  6E28               	movwf	(UART_Begin@baud+3)^0,c
  5124  00257E  EC43  F008         	call	_UART_Begin	;wreg free
  5125  002582                     
  5126                           ;main.c: 99:     UART_Println("Inicio");
  5127  002582  0EC7               	movlw	low STR_1
  5128  002584  6E02               	movwf	UART_Println@buffer^0,c
  5129  002586  0E7F               	movlw	high STR_1
  5130  002588  6E03               	movwf	(UART_Println@buffer+1)^0,c
  5131  00258A  ECE4  F016         	call	_UART_Println	;wreg free
  5132  00258E                     
  5133                           ;main.c: 101:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  5134  00258E  0E10               	movlw	16
  5135  002590  6E5D               	movwf	(??_main+1)^0,c
  5136  002592  0E39               	movlw	57
  5137  002594  6E5C               	movwf	??_main^0,c
  5138  002596  0E0E               	movlw	14
  5139  002598                     u5577:
  5140  002598  2EE8               	decfsz	wreg,f,c
  5141  00259A  D7FE               	bra	u5577
  5142  00259C  2E5C               	decfsz	??_main^0,f,c
  5143  00259E  D7FC               	bra	u5577
  5144  0025A0  2E5D               	decfsz	(??_main+1)^0,f,c
  5145  0025A2  D7FA               	bra	u5577
  5146  0025A4                     
  5147                           ;main.c: 102:     OLED_Init();
  5148  0025A4  ECAC  F015         	call	_OLED_Init	;wreg free
  5149  0025A8                     
  5150                           ;main.c: 103:     Print_Menu();
  5151  0025A8  EC4B  F01A         	call	_Print_Menu	;wreg free
  5152  0025AC                     
  5153                           ;main.c: 106:     MFRC522_Init();
  5154  0025AC  ECC9  F019         	call	_MFRC522_Init	;wreg free
  5155  0025B0                     
  5156                           ;main.c: 109:     if(EEPROM_Read(1) != 22){
  5157  0025B0  0E00               	movlw	0
  5158  0025B2  6E08               	movwf	(EEPROM_Read@add+1)^0,c
  5159  0025B4  0E01               	movlw	1
  5160  0025B6  6E07               	movwf	EEPROM_Read@add^0,c
  5161  0025B8  EC3B  F01C         	call	_EEPROM_Read	;wreg free
  5162  0025BC  0A16               	xorlw	22
  5163  0025BE  B4D8               	btfsc	status,2,c
  5164  0025C0  EFE4  F012         	goto	u5541
  5165  0025C4  EFE6  F012         	goto	u5540
  5166  0025C8                     u5541:
  5167  0025C8  EFF6  F012         	goto	l5355
  5168  0025CC                     u5540:
  5169  0025CC                     
  5170                           ;main.c: 110:         EEPROM_setRegistro(0);
  5171  0025CC  0E00               	movlw	0
  5172  0025CE  6E0D               	movwf	(EEPROM_setRegistro@registro+1)^0,c
  5173  0025D0  0E00               	movlw	0
  5174  0025D2  6E0C               	movwf	EEPROM_setRegistro@registro^0,c
  5175  0025D4  EC9D  F01A         	call	_EEPROM_setRegistro	;wreg free
  5176  0025D8                     
  5177                           ;main.c: 111:         EEPROM_Write(1,22);
  5178  0025D8  0E00               	movlw	0
  5179  0025DA  6E09               	movwf	(EEPROM_Write@add+1)^0,c
  5180  0025DC  0E01               	movlw	1
  5181  0025DE  6E08               	movwf	EEPROM_Write@add^0,c
  5182  0025E0  0E16               	movlw	22
  5183  0025E2  6E0A               	movwf	EEPROM_Write@data^0,c
  5184  0025E4  EC0D  F01C         	call	_EEPROM_Write	;wreg free
  5185                           
  5186                           ;main.c: 112:     }else{
  5187  0025E8  EFFC  F012         	goto	l5357
  5188  0025EC                     l5355:
  5189                           
  5190                           ;main.c: 113:         registro = EEPROM_getRegistro();
  5191  0025EC  ECBD  F01B         	call	_EEPROM_getRegistro	;wreg free
  5192  0025F0  C00A  F09A         	movff	?_EEPROM_getRegistro,_registro
  5193  0025F4  C00B  F09B         	movff	?_EEPROM_getRegistro+1,_registro+1
  5194  0025F8                     l5357:
  5195                           
  5196                           ;main.c: 117:         get_key();
  5197  0025F8  ECA7  F005         	call	_get_key	;wreg free
  5198  0025FC                     
  5199                           ;main.c: 118:         if(configuracion == 0){
  5200  0025FC  505E               	movf	_configuracion^0,w,c
  5201  0025FE  A4D8               	btfss	status,2,c
  5202  002600  EF04  F013         	goto	u5551
  5203  002604  EF06  F013         	goto	u5550
  5204  002608                     u5551:
  5205  002608  EFFC  F012         	goto	l5357
  5206  00260C                     u5550:
  5207  00260C                     
  5208                           ;main.c: 120:             if(flag_t1){
  5209  00260C  0100               	movlb	0	; () banked
  5210  00260E  51A0               	movf	_flag_t1& (0+255),w,b
  5211  002610  B4D8               	btfsc	status,2,c
  5212  002612  EF0D  F013         	goto	u5561
  5213  002616  EF0F  F013         	goto	u5560
  5214  00261A                     u5561:
  5215  00261A  EF14  F013         	goto	l5367
  5216  00261E                     u5560:
  5217  00261E                     
  5218                           ; BSR set to: 0
  5219                           ;main.c: 121:                 get_RTC();
  5220  00261E  ECA9  F010         	call	_get_RTC	;wreg free
  5221  002622                     
  5222                           ;main.c: 122:                 flag_t1 = 0;
  5223  002622  0E00               	movlw	0
  5224  002624  0100               	movlb	0	; () banked
  5225  002626  6FA0               	movwf	_flag_t1& (0+255),b
  5226  002628                     l5367:
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;main.c: 125:             CHECK_TAG();
  5230  002628  EC31  F012         	call	_CHECK_TAG	;wreg free
  5231  00262C  EFFC  F012         	goto	l5357
  5232  002630  EF07  F000         	goto	start
  5233  002634                     __end_of_main:
  5234                           	callstack 0
  5235                           
  5236 ;; *************** function _get_key *****************
  5237 ;; Defined at:
  5238 ;;		line 242 in file "main.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;		None
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5252 ;;      Params:         0       0       0       0       0       0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5254 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5255 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5256 ;;Total ram usage:        2 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 10
  5259 ;; This function calls:
  5260 ;;		_Print_Anio
  5261 ;;		_Print_Dia
  5262 ;;		_Print_Hora
  5263 ;;		_Print_Mes
  5264 ;;		_Print_Minuto
  5265 ;;		_Print_config
  5266 ;;		_set_RTC
  5267 ;; This function is called by:
  5268 ;;		_main
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text1
  5273  000B4E                     __ptext1:
  5274                           	callstack 0
  5275  000B4E                     _get_key:
  5276                           	callstack 20
  5277  000B4E                     
  5278                           ;main.c: 243:     if(!PORTEbits.RE0){
  5279  000B4E  B084               	btfsc	132,0,c	;volatile
  5280  000B50  EFAC  F005         	goto	u5141
  5281  000B54  EFAE  F005         	goto	u5140
  5282  000B58                     u5141:
  5283  000B58  EFE3  F005         	goto	l222
  5284  000B5C                     u5140:
  5285  000B5C                     
  5286                           ;main.c: 244:         if(!PORTEbits.RE0){
  5287  000B5C  B084               	btfsc	132,0,c	;volatile
  5288  000B5E  EFB3  F005         	goto	u5151
  5289  000B62  EFB5  F005         	goto	u5150
  5290  000B66                     u5151:
  5291  000B66  EFE3  F005         	goto	l222
  5292  000B6A                     u5150:
  5293  000B6A                     
  5294                           ;main.c: 245:             configuracion++;
  5295  000B6A  2A5E               	incf	_configuracion^0,f,c
  5296  000B6C                     
  5297                           ;main.c: 246:             if(configuracion >= 6){
  5298  000B6C  0E05               	movlw	5
  5299  000B6E  645E               	cpfsgt	_configuracion^0,c
  5300  000B70  EFBC  F005         	goto	u5161
  5301  000B74  EFBE  F005         	goto	u5160
  5302  000B78                     u5161:
  5303  000B78  EFC2  F005         	goto	l5119
  5304  000B7C                     u5160:
  5305  000B7C                     
  5306                           ;main.c: 247:                 set_RTC();
  5307  000B7C  EC50  F016         	call	_set_RTC	;wreg free
  5308  000B80                     
  5309                           ;main.c: 248:                 configuracion = 0;
  5310  000B80  0E00               	movlw	0
  5311  000B82  6E5E               	movwf	_configuracion^0,c
  5312  000B84                     l5119:
  5313                           
  5314                           ;main.c: 250:             Print_config();
  5315  000B84  EC20  F010         	call	_Print_config	;wreg free
  5316  000B88                     
  5317                           ;main.c: 251:             LATDbits.LATD6 = 1;
  5318  000B88  8C8C               	bsf	140,6,c	;volatile
  5319  000B8A                     
  5320                           ;main.c: 252:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5321  000B8A  0E04               	movlw	4
  5322  000B8C  6E59               	movwf	(??_get_key+1)^0,c
  5323  000B8E  0E0C               	movlw	12
  5324  000B90  6E58               	movwf	??_get_key^0,c
  5325  000B92  0E34               	movlw	52
  5326  000B94                     u5587:
  5327  000B94  2EE8               	decfsz	wreg,f,c
  5328  000B96  D7FE               	bra	u5587
  5329  000B98  2E58               	decfsz	??_get_key^0,f,c
  5330  000B9A  D7FC               	bra	u5587
  5331  000B9C  2E59               	decfsz	(??_get_key+1)^0,f,c
  5332  000B9E  D7FA               	bra	u5587
  5333  000BA0                     
  5334                           ;main.c: 253:             LATDbits.LATD6 = 0;
  5335  000BA0  9C8C               	bcf	140,6,c	;volatile
  5336  000BA2                     
  5337                           ;main.c: 254:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5338  000BA2  0E04               	movlw	4
  5339  000BA4  6E59               	movwf	(??_get_key+1)^0,c
  5340  000BA6  0E0C               	movlw	12
  5341  000BA8  6E58               	movwf	??_get_key^0,c
  5342  000BAA  0E34               	movlw	52
  5343  000BAC                     u5597:
  5344  000BAC  2EE8               	decfsz	wreg,f,c
  5345  000BAE  D7FE               	bra	u5597
  5346  000BB0  2E58               	decfsz	??_get_key^0,f,c
  5347  000BB2  D7FC               	bra	u5597
  5348  000BB4  2E59               	decfsz	(??_get_key+1)^0,f,c
  5349  000BB6  D7FA               	bra	u5597
  5350  000BB8                     l225:
  5351  000BB8  A084               	btfss	132,0,c	;volatile
  5352  000BBA  EFE1  F005         	goto	u5171
  5353  000BBE  EFE3  F005         	goto	u5170
  5354  000BC2                     u5171:
  5355  000BC2  EFDC  F005         	goto	l225
  5356  000BC6                     u5170:
  5357  000BC6                     l222:
  5358                           
  5359                           ;main.c: 258:     if(!PORTEbits.RE1){
  5360  000BC6  B284               	btfsc	132,1,c	;volatile
  5361  000BC8  EFE8  F005         	goto	u5181
  5362  000BCC  EFEA  F005         	goto	u5180
  5363  000BD0                     u5181:
  5364  000BD0  EF6F  F006         	goto	l228
  5365  000BD4                     u5180:
  5366  000BD4                     
  5367                           ;main.c: 259:         if(configuracion == 1){
  5368  000BD4  045E               	decf	_configuracion^0,w,c
  5369  000BD6  A4D8               	btfss	status,2,c
  5370  000BD8  EFF0  F005         	goto	u5191
  5371  000BDC  EFF2  F005         	goto	u5190
  5372  000BE0                     u5191:
  5373  000BE0  EF00  F006         	goto	l5139
  5374  000BE4                     u5190:
  5375  000BE4                     
  5376                           ;main.c: 260:             Minuto++;
  5377  000BE4  0100               	movlb	0	; () banked
  5378  000BE6  2BF4               	incf	_Minuto& (0+255),f,b
  5379  000BE8                     
  5380                           ; BSR set to: 0
  5381                           ;main.c: 261:             if(Minuto>=60) Minuto = 0;
  5382  000BE8  0E3B               	movlw	59
  5383  000BEA  65F4               	cpfsgt	_Minuto& (0+255),b
  5384  000BEC  EFFA  F005         	goto	u5201
  5385  000BF0  EFFC  F005         	goto	u5200
  5386  000BF4                     u5201:
  5387  000BF4  EFFE  F005         	goto	l5137
  5388  000BF8                     u5200:
  5389  000BF8                     
  5390                           ; BSR set to: 0
  5391  000BF8  0E00               	movlw	0
  5392  000BFA  6FF4               	movwf	_Minuto& (0+255),b
  5393  000BFC                     l5137:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;main.c: 262:             Print_Minuto();
  5397  000BFC  EC6D  F018         	call	_Print_Minuto	;wreg free
  5398  000C00                     l5139:
  5399                           
  5400                           ;main.c: 264:         if(configuracion == 2){
  5401  000C00  0E02               	movlw	2
  5402  000C02  185E               	xorwf	_configuracion^0,w,c
  5403  000C04  A4D8               	btfss	status,2,c
  5404  000C06  EF07  F006         	goto	u5211
  5405  000C0A  EF09  F006         	goto	u5210
  5406  000C0E                     u5211:
  5407  000C0E  EF17  F006         	goto	l5149
  5408  000C12                     u5210:
  5409  000C12                     
  5410                           ;main.c: 265:             Hora++;
  5411  000C12  0100               	movlb	0	; () banked
  5412  000C14  2BF5               	incf	_Hora& (0+255),f,b
  5413  000C16                     
  5414                           ; BSR set to: 0
  5415                           ;main.c: 266:             if(Hora>=24) Hora = 0;
  5416  000C16  0E17               	movlw	23
  5417  000C18  65F5               	cpfsgt	_Hora& (0+255),b
  5418  000C1A  EF11  F006         	goto	u5221
  5419  000C1E  EF13  F006         	goto	u5220
  5420  000C22                     u5221:
  5421  000C22  EF15  F006         	goto	l5147
  5422  000C26                     u5220:
  5423  000C26                     
  5424                           ; BSR set to: 0
  5425  000C26  0E00               	movlw	0
  5426  000C28  6FF5               	movwf	_Hora& (0+255),b
  5427  000C2A                     l5147:
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;main.c: 267:             Print_Hora();
  5431  000C2A  ECA1  F018         	call	_Print_Hora	;wreg free
  5432  000C2E                     l5149:
  5433                           
  5434                           ;main.c: 269:         if(configuracion == 3){
  5435  000C2E  0E03               	movlw	3
  5436  000C30  185E               	xorwf	_configuracion^0,w,c
  5437  000C32  A4D8               	btfss	status,2,c
  5438  000C34  EF1E  F006         	goto	u5231
  5439  000C38  EF20  F006         	goto	u5230
  5440  000C3C                     u5231:
  5441  000C3C  EF2E  F006         	goto	l5159
  5442  000C40                     u5230:
  5443  000C40                     
  5444                           ;main.c: 270:             dia++;
  5445  000C40  0100               	movlb	0	; () banked
  5446  000C42  2BF0               	incf	_dia& (0+255),f,b
  5447  000C44                     
  5448                           ; BSR set to: 0
  5449                           ;main.c: 271:             if(dia>=31) dia = 1;
  5450  000C44  0E1E               	movlw	30
  5451  000C46  65F0               	cpfsgt	_dia& (0+255),b
  5452  000C48  EF28  F006         	goto	u5241
  5453  000C4C  EF2A  F006         	goto	u5240
  5454  000C50                     u5241:
  5455  000C50  EF2C  F006         	goto	l5157
  5456  000C54                     u5240:
  5457  000C54                     
  5458                           ; BSR set to: 0
  5459  000C54  0E01               	movlw	1
  5460  000C56  6FF0               	movwf	_dia& (0+255),b
  5461  000C58                     l5157:
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;main.c: 272:             Print_Dia();
  5465  000C58  ECD1  F017         	call	_Print_Dia	;wreg free
  5466  000C5C                     l5159:
  5467                           
  5468                           ;main.c: 274:         if(configuracion == 4){
  5469  000C5C  0E04               	movlw	4
  5470  000C5E  185E               	xorwf	_configuracion^0,w,c
  5471  000C60  A4D8               	btfss	status,2,c
  5472  000C62  EF35  F006         	goto	u5251
  5473  000C66  EF37  F006         	goto	u5250
  5474  000C6A                     u5251:
  5475  000C6A  EF45  F006         	goto	l5169
  5476  000C6E                     u5250:
  5477  000C6E                     
  5478                           ;main.c: 275:             mes++;
  5479  000C6E  0100               	movlb	0	; () banked
  5480  000C70  2BF1               	incf	_mes& (0+255),f,b
  5481  000C72                     
  5482                           ; BSR set to: 0
  5483                           ;main.c: 276:             if(mes>=13) mes = 1;
  5484  000C72  0E0C               	movlw	12
  5485  000C74  65F1               	cpfsgt	_mes& (0+255),b
  5486  000C76  EF3F  F006         	goto	u5261
  5487  000C7A  EF41  F006         	goto	u5260
  5488  000C7E                     u5261:
  5489  000C7E  EF43  F006         	goto	l5167
  5490  000C82                     u5260:
  5491  000C82                     
  5492                           ; BSR set to: 0
  5493  000C82  0E01               	movlw	1
  5494  000C84  6FF1               	movwf	_mes& (0+255),b
  5495  000C86                     l5167:
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;main.c: 277:             Print_Mes();
  5499  000C86  EC9D  F017         	call	_Print_Mes	;wreg free
  5500  000C8A                     l5169:
  5501                           
  5502                           ;main.c: 279:         if(configuracion == 5){
  5503  000C8A  0E05               	movlw	5
  5504  000C8C  185E               	xorwf	_configuracion^0,w,c
  5505  000C8E  A4D8               	btfss	status,2,c
  5506  000C90  EF4C  F006         	goto	u5271
  5507  000C94  EF4E  F006         	goto	u5270
  5508  000C98                     u5271:
  5509  000C98  EF5C  F006         	goto	l5179
  5510  000C9C                     u5270:
  5511  000C9C                     
  5512                           ;main.c: 280:             anio++;
  5513  000C9C  0100               	movlb	0	; () banked
  5514  000C9E  2BF2               	incf	_anio& (0+255),f,b
  5515  000CA0                     
  5516                           ; BSR set to: 0
  5517                           ;main.c: 281:             if(anio>=99) anio = 0;
  5518  000CA0  0E62               	movlw	98
  5519  000CA2  65F2               	cpfsgt	_anio& (0+255),b
  5520  000CA4  EF56  F006         	goto	u5281
  5521  000CA8  EF58  F006         	goto	u5280
  5522  000CAC                     u5281:
  5523  000CAC  EF5A  F006         	goto	l5177
  5524  000CB0                     u5280:
  5525  000CB0                     
  5526                           ; BSR set to: 0
  5527  000CB0  0E00               	movlw	0
  5528  000CB2  6FF2               	movwf	_anio& (0+255),b
  5529  000CB4                     l5177:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;main.c: 282:             Print_Anio();
  5533  000CB4  EC05  F018         	call	_Print_Anio	;wreg free
  5534  000CB8                     l5179:
  5535                           
  5536                           ;main.c: 284:         _delay((unsigned long)((200)*(8000000/4000.0)));
  5537  000CB8  0E03               	movlw	3
  5538  000CBA  6E59               	movwf	(??_get_key+1)^0,c
  5539  000CBC  0E08               	movlw	8
  5540  000CBE  6E58               	movwf	??_get_key^0,c
  5541  000CC0  0E77               	movlw	119
  5542  000CC2                     u5607:
  5543  000CC2  2EE8               	decfsz	wreg,f,c
  5544  000CC4  D7FE               	bra	u5607
  5545  000CC6  2E58               	decfsz	??_get_key^0,f,c
  5546  000CC8  D7FC               	bra	u5607
  5547  000CCA  2E59               	decfsz	(??_get_key+1)^0,f,c
  5548  000CCC  D7FA               	bra	u5607
  5549  000CCE  F000               	nop	
  5550  000CD0                     l239:
  5551  000CD0  A284               	btfss	132,1,c	;volatile
  5552  000CD2  EF6D  F006         	goto	u5291
  5553  000CD6  EF6F  F006         	goto	u5290
  5554  000CDA                     u5291:
  5555  000CDA  EF68  F006         	goto	l239
  5556  000CDE                     u5290:
  5557  000CDE                     l228:
  5558                           
  5559                           ;main.c: 287:     if(!PORTEbits.RE2){
  5560  000CDE  B484               	btfsc	132,2,c	;volatile
  5561  000CE0  EF74  F006         	goto	u5301
  5562  000CE4  EF76  F006         	goto	u5300
  5563  000CE8                     u5301:
  5564  000CE8  EFFB  F006         	goto	l256
  5565  000CEC                     u5300:
  5566  000CEC                     
  5567                           ;main.c: 288:         if(configuracion == 1){
  5568  000CEC  045E               	decf	_configuracion^0,w,c
  5569  000CEE  A4D8               	btfss	status,2,c
  5570  000CF0  EF7C  F006         	goto	u5311
  5571  000CF4  EF7E  F006         	goto	u5310
  5572  000CF8                     u5311:
  5573  000CF8  EF8C  F006         	goto	l5191
  5574  000CFC                     u5310:
  5575  000CFC                     
  5576                           ;main.c: 289:             if(Minuto == 0) Minuto = 60;
  5577  000CFC  0100               	movlb	0	; () banked
  5578  000CFE  51F4               	movf	_Minuto& (0+255),w,b
  5579  000D00  A4D8               	btfss	status,2,c
  5580  000D02  EF85  F006         	goto	u5321
  5581  000D06  EF87  F006         	goto	u5320
  5582  000D0A                     u5321:
  5583  000D0A  EF89  F006         	goto	l5187
  5584  000D0E                     u5320:
  5585  000D0E                     
  5586                           ; BSR set to: 0
  5587  000D0E  0E3C               	movlw	60
  5588  000D10  6FF4               	movwf	_Minuto& (0+255),b
  5589  000D12                     l5187:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;main.c: 290:             Minuto--;
  5593  000D12  07F4               	decf	_Minuto& (0+255),f,b
  5594  000D14                     
  5595                           ; BSR set to: 0
  5596                           ;main.c: 291:             Print_Minuto();
  5597  000D14  EC6D  F018         	call	_Print_Minuto	;wreg free
  5598  000D18                     l5191:
  5599                           
  5600                           ;main.c: 293:         if(configuracion == 2){
  5601  000D18  0E02               	movlw	2
  5602  000D1A  185E               	xorwf	_configuracion^0,w,c
  5603  000D1C  A4D8               	btfss	status,2,c
  5604  000D1E  EF93  F006         	goto	u5331
  5605  000D22  EF95  F006         	goto	u5330
  5606  000D26                     u5331:
  5607  000D26  EFA3  F006         	goto	l5201
  5608  000D2A                     u5330:
  5609  000D2A                     
  5610                           ;main.c: 294:             if(Hora == 0) Hora = 24;
  5611  000D2A  0100               	movlb	0	; () banked
  5612  000D2C  51F5               	movf	_Hora& (0+255),w,b
  5613  000D2E  A4D8               	btfss	status,2,c
  5614  000D30  EF9C  F006         	goto	u5341
  5615  000D34  EF9E  F006         	goto	u5340
  5616  000D38                     u5341:
  5617  000D38  EFA0  F006         	goto	l5197
  5618  000D3C                     u5340:
  5619  000D3C                     
  5620                           ; BSR set to: 0
  5621  000D3C  0E18               	movlw	24
  5622  000D3E  6FF5               	movwf	_Hora& (0+255),b
  5623  000D40                     l5197:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;main.c: 295:             Hora--;
  5627  000D40  07F5               	decf	_Hora& (0+255),f,b
  5628  000D42                     
  5629                           ; BSR set to: 0
  5630                           ;main.c: 296:             Print_Hora();
  5631  000D42  ECA1  F018         	call	_Print_Hora	;wreg free
  5632  000D46                     l5201:
  5633                           
  5634                           ;main.c: 298:         if(configuracion == 3){
  5635  000D46  0E03               	movlw	3
  5636  000D48  185E               	xorwf	_configuracion^0,w,c
  5637  000D4A  A4D8               	btfss	status,2,c
  5638  000D4C  EFAA  F006         	goto	u5351
  5639  000D50  EFAC  F006         	goto	u5350
  5640  000D54                     u5351:
  5641  000D54  EFBA  F006         	goto	l5211
  5642  000D58                     u5350:
  5643  000D58                     
  5644                           ;main.c: 299:             if(dia == 1) dia = 32;
  5645  000D58  0100               	movlb	0	; () banked
  5646  000D5A  05F0               	decf	_dia& (0+255),w,b
  5647  000D5C  A4D8               	btfss	status,2,c
  5648  000D5E  EFB3  F006         	goto	u5361
  5649  000D62  EFB5  F006         	goto	u5360
  5650  000D66                     u5361:
  5651  000D66  EFB7  F006         	goto	l5207
  5652  000D6A                     u5360:
  5653  000D6A                     
  5654                           ; BSR set to: 0
  5655  000D6A  0E20               	movlw	32
  5656  000D6C  6FF0               	movwf	_dia& (0+255),b
  5657  000D6E                     l5207:
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;main.c: 300:             dia--;
  5661  000D6E  07F0               	decf	_dia& (0+255),f,b
  5662  000D70                     
  5663                           ; BSR set to: 0
  5664                           ;main.c: 301:             Print_Dia();
  5665  000D70  ECD1  F017         	call	_Print_Dia	;wreg free
  5666  000D74                     l5211:
  5667                           
  5668                           ;main.c: 303:         if(configuracion == 4){
  5669  000D74  0E04               	movlw	4
  5670  000D76  185E               	xorwf	_configuracion^0,w,c
  5671  000D78  A4D8               	btfss	status,2,c
  5672  000D7A  EFC1  F006         	goto	u5371
  5673  000D7E  EFC3  F006         	goto	u5370
  5674  000D82                     u5371:
  5675  000D82  EFD1  F006         	goto	l5221
  5676  000D86                     u5370:
  5677  000D86                     
  5678                           ;main.c: 304:             if(mes == 1) mes = 13;
  5679  000D86  0100               	movlb	0	; () banked
  5680  000D88  05F1               	decf	_mes& (0+255),w,b
  5681  000D8A  A4D8               	btfss	status,2,c
  5682  000D8C  EFCA  F006         	goto	u5381
  5683  000D90  EFCC  F006         	goto	u5380
  5684  000D94                     u5381:
  5685  000D94  EFCE  F006         	goto	l5217
  5686  000D98                     u5380:
  5687  000D98                     
  5688                           ; BSR set to: 0
  5689  000D98  0E0D               	movlw	13
  5690  000D9A  6FF1               	movwf	_mes& (0+255),b
  5691  000D9C                     l5217:
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;main.c: 305:             mes--;
  5695  000D9C  07F1               	decf	_mes& (0+255),f,b
  5696  000D9E                     
  5697                           ; BSR set to: 0
  5698                           ;main.c: 306:             Print_Mes();
  5699  000D9E  EC9D  F017         	call	_Print_Mes	;wreg free
  5700  000DA2                     l5221:
  5701                           
  5702                           ;main.c: 308:         if(configuracion == 5){
  5703  000DA2  0E05               	movlw	5
  5704  000DA4  185E               	xorwf	_configuracion^0,w,c
  5705  000DA6  A4D8               	btfss	status,2,c
  5706  000DA8  EFD8  F006         	goto	u5391
  5707  000DAC  EFDA  F006         	goto	u5390
  5708  000DB0                     u5391:
  5709  000DB0  EFE8  F006         	goto	l5231
  5710  000DB4                     u5390:
  5711  000DB4                     
  5712                           ;main.c: 309:             if(anio == 0) anio = 100;
  5713  000DB4  0100               	movlb	0	; () banked
  5714  000DB6  51F2               	movf	_anio& (0+255),w,b
  5715  000DB8  A4D8               	btfss	status,2,c
  5716  000DBA  EFE1  F006         	goto	u5401
  5717  000DBE  EFE3  F006         	goto	u5400
  5718  000DC2                     u5401:
  5719  000DC2  EFE5  F006         	goto	l5227
  5720  000DC6                     u5400:
  5721  000DC6                     
  5722                           ; BSR set to: 0
  5723  000DC6  0E64               	movlw	100
  5724  000DC8  6FF2               	movwf	_anio& (0+255),b
  5725  000DCA                     l5227:
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;main.c: 310:             anio--;
  5729  000DCA  07F2               	decf	_anio& (0+255),f,b
  5730  000DCC                     
  5731                           ; BSR set to: 0
  5732                           ;main.c: 311:             Print_Anio();
  5733  000DCC  EC05  F018         	call	_Print_Anio	;wreg free
  5734  000DD0                     l5231:
  5735                           
  5736                           ;main.c: 313:         _delay((unsigned long)((200)*(8000000/4000.0)));
  5737  000DD0  0E03               	movlw	3
  5738  000DD2  6E59               	movwf	(??_get_key+1)^0,c
  5739  000DD4  0E08               	movlw	8
  5740  000DD6  6E58               	movwf	??_get_key^0,c
  5741  000DD8  0E77               	movlw	119
  5742  000DDA                     u5617:
  5743  000DDA  2EE8               	decfsz	wreg,f,c
  5744  000DDC  D7FE               	bra	u5617
  5745  000DDE  2E58               	decfsz	??_get_key^0,f,c
  5746  000DE0  D7FC               	bra	u5617
  5747  000DE2  2E59               	decfsz	(??_get_key+1)^0,f,c
  5748  000DE4  D7FA               	bra	u5617
  5749  000DE6  F000               	nop	
  5750  000DE8                     l253:
  5751  000DE8  A484               	btfss	132,2,c	;volatile
  5752  000DEA  EFF9  F006         	goto	u5411
  5753  000DEE  EFFB  F006         	goto	u5410
  5754  000DF2                     u5411:
  5755  000DF2  EFF4  F006         	goto	l253
  5756  000DF6                     u5410:
  5757  000DF6                     l256:
  5758  000DF6  0012               	return		;funcret
  5759  000DF8                     __end_of_get_key:
  5760                           	callstack 0
  5761                           
  5762 ;; *************** function _set_RTC *****************
  5763 ;; Defined at:
  5764 ;;		line 220 in file "main.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5778 ;;      Params:         0       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5781 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        1 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; Hardware stack levels required when called: 3
  5785 ;; This function calls:
  5786 ;;		_I2C_Start_DS
  5787 ;;		_I2C_Stop_DS
  5788 ;;		_I2C_Write_DS
  5789 ;;		_decimal_to_bcd
  5790 ;; This function is called by:
  5791 ;;		_get_key
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text2
  5796  002CA0                     __ptext2:
  5797                           	callstack 0
  5798  002CA0                     _set_RTC:
  5799                           	callstack 26
  5800  002CA0                     
  5801                           ;main.c: 221:       Hora = decimal_to_bcd(Hora);
  5802  002CA0  0100               	movlb	0	; () banked
  5803  002CA2  51F5               	movf	_Hora& (0+255),w,b
  5804  002CA4  EC85  F01B         	call	_decimal_to_bcd
  5805  002CA8  0100               	movlb	0	; () banked
  5806  002CAA  6FF5               	movwf	_Hora& (0+255),b
  5807                           
  5808                           ;main.c: 222:       Minuto = decimal_to_bcd(Minuto);
  5809  002CAC  51F4               	movf	_Minuto& (0+255),w,b
  5810  002CAE  EC85  F01B         	call	_decimal_to_bcd
  5811  002CB2  0100               	movlb	0	; () banked
  5812  002CB4  6FF4               	movwf	_Minuto& (0+255),b
  5813                           
  5814                           ;main.c: 223:       Segundo = decimal_to_bcd(Segundo);
  5815  002CB6  51F3               	movf	_Segundo& (0+255),w,b
  5816  002CB8  EC85  F01B         	call	_decimal_to_bcd
  5817  002CBC  0100               	movlb	0	; () banked
  5818  002CBE  6FF3               	movwf	_Segundo& (0+255),b
  5819                           
  5820                           ;main.c: 224:       anio = decimal_to_bcd(anio);
  5821  002CC0  51F2               	movf	_anio& (0+255),w,b
  5822  002CC2  EC85  F01B         	call	_decimal_to_bcd
  5823  002CC6  0100               	movlb	0	; () banked
  5824  002CC8  6FF2               	movwf	_anio& (0+255),b
  5825                           
  5826                           ;main.c: 225:       mes = decimal_to_bcd(mes);
  5827  002CCA  51F1               	movf	_mes& (0+255),w,b
  5828  002CCC  EC85  F01B         	call	_decimal_to_bcd
  5829  002CD0  0100               	movlb	0	; () banked
  5830  002CD2  6FF1               	movwf	_mes& (0+255),b
  5831                           
  5832                           ;main.c: 226:       dia = decimal_to_bcd(dia);
  5833  002CD4  51F0               	movf	_dia& (0+255),w,b
  5834  002CD6  EC85  F01B         	call	_decimal_to_bcd
  5835  002CDA  0100               	movlb	0	; () banked
  5836  002CDC  6FF0               	movwf	_dia& (0+255),b
  5837  002CDE                     
  5838                           ; BSR set to: 0
  5839                           ;main.c: 229:       I2C_Start_DS();
  5840  002CDE  EC64  F01C         	call	_I2C_Start_DS	;wreg free
  5841  002CE2                     
  5842                           ;main.c: 230:       I2C_Write_DS(0xD0);
  5843  002CE2  0ED0               	movlw	208
  5844  002CE4  EC25  F01C         	call	_I2C_Write_DS
  5845  002CE8                     
  5846                           ;main.c: 231:       I2C_Write_DS(0);
  5847  002CE8  0E00               	movlw	0
  5848  002CEA  EC25  F01C         	call	_I2C_Write_DS
  5849  002CEE                     
  5850                           ;main.c: 232:       I2C_Write_DS(Segundo);
  5851  002CEE  0100               	movlb	0	; () banked
  5852  002CF0  51F3               	movf	_Segundo& (0+255),w,b
  5853  002CF2  EC25  F01C         	call	_I2C_Write_DS
  5854  002CF6                     
  5855                           ;main.c: 233:       I2C_Write_DS(Minuto);
  5856  002CF6  0100               	movlb	0	; () banked
  5857  002CF8  51F4               	movf	_Minuto& (0+255),w,b
  5858  002CFA  EC25  F01C         	call	_I2C_Write_DS
  5859  002CFE                     
  5860                           ;main.c: 234:       I2C_Write_DS(Hora);
  5861  002CFE  0100               	movlb	0	; () banked
  5862  002D00  51F5               	movf	_Hora& (0+255),w,b
  5863  002D02  EC25  F01C         	call	_I2C_Write_DS
  5864  002D06                     
  5865                           ;main.c: 235:       I2C_Write_DS(1);
  5866  002D06  0E01               	movlw	1
  5867  002D08  EC25  F01C         	call	_I2C_Write_DS
  5868  002D0C                     
  5869                           ;main.c: 236:       I2C_Write_DS(dia);
  5870  002D0C  0100               	movlb	0	; () banked
  5871  002D0E  51F0               	movf	_dia& (0+255),w,b
  5872  002D10  EC25  F01C         	call	_I2C_Write_DS
  5873  002D14                     
  5874                           ;main.c: 237:       I2C_Write_DS(mes);
  5875  002D14  0100               	movlb	0	; () banked
  5876  002D16  51F1               	movf	_mes& (0+255),w,b
  5877  002D18  EC25  F01C         	call	_I2C_Write_DS
  5878  002D1C                     
  5879                           ;main.c: 238:       I2C_Write_DS(anio);
  5880  002D1C  0100               	movlb	0	; () banked
  5881  002D1E  51F2               	movf	_anio& (0+255),w,b
  5882  002D20  EC25  F01C         	call	_I2C_Write_DS
  5883  002D24                     
  5884                           ;main.c: 239:       I2C_Stop_DS();
  5885  002D24  EC50  F01C         	call	_I2C_Stop_DS	;wreg free
  5886  002D28                     
  5887                           ;main.c: 240:       _delay((unsigned long)((6)*(8000000/4000.0)));
  5888  002D28  0E10               	movlw	16
  5889  002D2A  6E0C               	movwf	??_set_RTC^0,c
  5890  002D2C  0E94               	movlw	148
  5891  002D2E                     u5627:
  5892  002D2E  2EE8               	decfsz	wreg,f,c
  5893  002D30  D7FE               	bra	u5627
  5894  002D32  2E0C               	decfsz	??_set_RTC^0,f,c
  5895  002D34  D7FC               	bra	u5627
  5896  002D36  D000               	nop2	
  5897  002D38  0012               	return		;funcret
  5898  002D3A                     __end_of_set_RTC:
  5899                           	callstack 0
  5900                           
  5901 ;; *************** function _decimal_to_bcd *****************
  5902 ;; Defined at:
  5903 ;;		line 178 in file "main.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  number          1    wreg     unsigned char 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  number          1   10[COMRAM] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      unsigned char 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5917 ;;      Params:         0       0       0       0       0       0       0       0       0
  5918 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5919 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5920 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5921 ;;Total ram usage:        3 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 2
  5924 ;; This function calls:
  5925 ;;		___awdiv
  5926 ;;		___awmod
  5927 ;; This function is called by:
  5928 ;;		_set_RTC
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	text3
  5933  00370A                     __ptext3:
  5934                           	callstack 0
  5935  00370A                     _decimal_to_bcd:
  5936                           	callstack 26
  5937                           
  5938                           ;incstack = 0
  5939                           ;decimal_to_bcd@number stored from wreg
  5940  00370A  6E0B               	movwf	decimal_to_bcd@number^0,c
  5941  00370C                     
  5942                           ;main.c: 179:   return((unsigned char)(((number / 10) << 4) + (number % 10)));
  5943  00370C  C00B  F001         	movff	decimal_to_bcd@number,___awmod@dividend
  5944  003710  6A02               	clrf	(___awmod@dividend+1)^0,c
  5945  003712  0E00               	movlw	0
  5946  003714  6E04               	movwf	(___awmod@divisor+1)^0,c
  5947  003716  0E0A               	movlw	10
  5948  003718  6E03               	movwf	___awmod@divisor^0,c
  5949  00371A  ECFE  F014         	call	___awmod	;wreg free
  5950  00371E  C001  F009         	movff	?___awmod,??_decimal_to_bcd
  5951  003722  C002  F00A         	movff	?___awmod+1,??_decimal_to_bcd+1
  5952  003726  C00B  F001         	movff	decimal_to_bcd@number,___awdiv@dividend
  5953  00372A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5954  00372C  0E00               	movlw	0
  5955  00372E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5956  003730  0E0A               	movlw	10
  5957  003732  6E03               	movwf	___awdiv@divisor^0,c
  5958  003734  ECE2  F013         	call	___awdiv	;wreg free
  5959  003738  5001               	movf	?___awdiv^0,w,c
  5960  00373A  0D10               	mullw	16
  5961  00373C  50F3               	movf	243,w,c
  5962  00373E  2409               	addwf	??_decimal_to_bcd^0,w,c
  5963  003740  0012               	return		;funcret
  5964  003742                     __end_of_decimal_to_bcd:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _get_RTC *****************
  5968 ;; Defined at:
  5969 ;;		line 181 in file "main.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;		None
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5983 ;;      Params:         0       0       0       0       0       0       0       0       0
  5984 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5986 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5987 ;;Total ram usage:        0 bytes
  5988 ;; Hardware stack levels used: 1
  5989 ;; Hardware stack levels required when called: 10
  5990 ;; This function calls:
  5991 ;;		_I2C_Read_DS
  5992 ;;		_I2C_Repeated_Start_DS
  5993 ;;		_I2C_Start_DS
  5994 ;;		_I2C_Stop_DS
  5995 ;;		_I2C_Write_DS
  5996 ;;		_Print_Anio
  5997 ;;		_Print_Dia
  5998 ;;		_Print_Hora
  5999 ;;		_Print_Mes
  6000 ;;		_Print_Minuto
  6001 ;;		_Print_Segundo
  6002 ;; This function is called by:
  6003 ;;		_main
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text4
  6008  002152                     __ptext4:
  6009                           	callstack 0
  6010  002152                     _get_RTC:
  6011                           	callstack 20
  6012  002152                     
  6013                           ;main.c: 182:     I2C_Start_DS();
  6014  002152  EC64  F01C         	call	_I2C_Start_DS	;wreg free
  6015                           
  6016                           ;main.c: 183:     I2C_Write_DS(0xD0);
  6017  002156  0ED0               	movlw	208
  6018  002158  EC25  F01C         	call	_I2C_Write_DS
  6019                           
  6020                           ;main.c: 184:     I2C_Write_DS(0);
  6021  00215C  0E00               	movlw	0
  6022  00215E  EC25  F01C         	call	_I2C_Write_DS
  6023                           
  6024                           ;main.c: 185:     I2C_Repeated_Start_DS();
  6025  002162  EC78  F01C         	call	_I2C_Repeated_Start_DS	;wreg free
  6026                           
  6027                           ;main.c: 186:     I2C_Write_DS(0xD1);
  6028  002166  0ED1               	movlw	209
  6029  002168  EC25  F01C         	call	_I2C_Write_DS
  6030                           
  6031                           ;main.c: 187:     Segundo = I2C_Read_DS(1);
  6032  00216C  0E01               	movlw	1
  6033  00216E  EC9D  F016         	call	_I2C_Read_DS
  6034  002172  0100               	movlb	0	; () banked
  6035  002174  6FF3               	movwf	_Segundo& (0+255),b
  6036                           
  6037                           ;main.c: 188:     Minuto = I2C_Read_DS(1);
  6038  002176  0E01               	movlw	1
  6039  002178  EC9D  F016         	call	_I2C_Read_DS
  6040  00217C  0100               	movlb	0	; () banked
  6041  00217E  6FF4               	movwf	_Minuto& (0+255),b
  6042                           
  6043                           ;main.c: 189:     Hora = I2C_Read_DS(1);
  6044  002180  0E01               	movlw	1
  6045  002182  EC9D  F016         	call	_I2C_Read_DS
  6046  002186  0100               	movlb	0	; () banked
  6047  002188  6FF5               	movwf	_Hora& (0+255),b
  6048  00218A                     
  6049                           ; BSR set to: 0
  6050                           ;main.c: 190:     if(Hora != Horax){
  6051  00218A  51A3               	movf	_Horax& (0+255),w,b
  6052  00218C  19F5               	xorwf	_Hora& (0+255),w,b
  6053  00218E  B4D8               	btfsc	status,2,c
  6054  002190  EFCC  F010         	goto	u5421
  6055  002194  EFCE  F010         	goto	u5420
  6056  002198                     u5421:
  6057  002198  EFD2  F010         	goto	l5241
  6058  00219C                     u5420:
  6059  00219C                     
  6060                           ; BSR set to: 0
  6061                           ;main.c: 191:         Horax = Hora;
  6062  00219C  C0F5  F0A3         	movff	_Hora,_Horax
  6063  0021A0                     
  6064                           ; BSR set to: 0
  6065                           ;main.c: 192:         Print_Hora();
  6066  0021A0  ECA1  F018         	call	_Print_Hora	;wreg free
  6067  0021A4                     l5241:
  6068                           
  6069                           ;main.c: 194:     if(Minuto != Minutox){
  6070  0021A4  0100               	movlb	0	; () banked
  6071  0021A6  51A2               	movf	_Minutox& (0+255),w,b
  6072  0021A8  19F4               	xorwf	_Minuto& (0+255),w,b
  6073  0021AA  B4D8               	btfsc	status,2,c
  6074  0021AC  EFDA  F010         	goto	u5431
  6075  0021B0  EFDC  F010         	goto	u5430
  6076  0021B4                     u5431:
  6077  0021B4  EFE0  F010         	goto	l5247
  6078  0021B8                     u5430:
  6079  0021B8                     
  6080                           ; BSR set to: 0
  6081                           ;main.c: 195:         Minutox = Minuto;
  6082  0021B8  C0F4  F0A2         	movff	_Minuto,_Minutox
  6083  0021BC                     
  6084                           ; BSR set to: 0
  6085                           ;main.c: 196:         Print_Minuto();
  6086  0021BC  EC6D  F018         	call	_Print_Minuto	;wreg free
  6087  0021C0                     l5247:
  6088                           
  6089                           ;main.c: 198:     if(Segundo != Segundox){
  6090  0021C0  0100               	movlb	0	; () banked
  6091  0021C2  51A1               	movf	_Segundox& (0+255),w,b
  6092  0021C4  19F3               	xorwf	_Segundo& (0+255),w,b
  6093  0021C6  B4D8               	btfsc	status,2,c
  6094  0021C8  EFE8  F010         	goto	u5441
  6095  0021CC  EFEA  F010         	goto	u5440
  6096  0021D0                     u5441:
  6097  0021D0  EFEE  F010         	goto	l5253
  6098  0021D4                     u5440:
  6099  0021D4                     
  6100                           ; BSR set to: 0
  6101                           ;main.c: 199:         Segundox = Segundo;
  6102  0021D4  C0F3  F0A1         	movff	_Segundo,_Segundox
  6103  0021D8                     
  6104                           ; BSR set to: 0
  6105                           ;main.c: 200:         Print_Segundo();
  6106  0021D8  EC39  F018         	call	_Print_Segundo	;wreg free
  6107  0021DC                     l5253:
  6108                           
  6109                           ;main.c: 202:     I2C_Read_DS(1);
  6110  0021DC  0E01               	movlw	1
  6111  0021DE  EC9D  F016         	call	_I2C_Read_DS
  6112  0021E2                     
  6113                           ;main.c: 203:     dia = I2C_Read_DS(1);
  6114  0021E2  0E01               	movlw	1
  6115  0021E4  EC9D  F016         	call	_I2C_Read_DS
  6116  0021E8  0100               	movlb	0	; () banked
  6117  0021EA  6FF0               	movwf	_dia& (0+255),b
  6118  0021EC                     
  6119                           ; BSR set to: 0
  6120                           ;main.c: 204:     mes = I2C_Read_DS(1);
  6121  0021EC  0E01               	movlw	1
  6122  0021EE  EC9D  F016         	call	_I2C_Read_DS
  6123  0021F2  0100               	movlb	0	; () banked
  6124  0021F4  6FF1               	movwf	_mes& (0+255),b
  6125  0021F6                     
  6126                           ; BSR set to: 0
  6127                           ;main.c: 205:     anio = I2C_Read_DS(0);
  6128  0021F6  0E00               	movlw	0
  6129  0021F8  EC9D  F016         	call	_I2C_Read_DS
  6130  0021FC  0100               	movlb	0	; () banked
  6131  0021FE  6FF2               	movwf	_anio& (0+255),b
  6132  002200                     
  6133                           ; BSR set to: 0
  6134                           ;main.c: 206:     if(dia != diax){
  6135  002200  51ED               	movf	_diax& (0+255),w,b
  6136  002202  19F0               	xorwf	_dia& (0+255),w,b
  6137  002204  B4D8               	btfsc	status,2,c
  6138  002206  EF07  F011         	goto	u5451
  6139  00220A  EF09  F011         	goto	u5450
  6140  00220E                     u5451:
  6141  00220E  EF0D  F011         	goto	l5267
  6142  002212                     u5450:
  6143  002212                     
  6144                           ; BSR set to: 0
  6145                           ;main.c: 207:         Print_Dia();
  6146  002212  ECD1  F017         	call	_Print_Dia	;wreg free
  6147  002216                     
  6148                           ;main.c: 208:         diax = dia;
  6149  002216  C0F0  F0ED         	movff	_dia,_diax
  6150  00221A                     l5267:
  6151                           
  6152                           ;main.c: 210:     if(mes != mesx){
  6153  00221A  0100               	movlb	0	; () banked
  6154  00221C  51EE               	movf	_mesx& (0+255),w,b
  6155  00221E  19F1               	xorwf	_mes& (0+255),w,b
  6156  002220  B4D8               	btfsc	status,2,c
  6157  002222  EF15  F011         	goto	u5461
  6158  002226  EF17  F011         	goto	u5460
  6159  00222A                     u5461:
  6160  00222A  EF1B  F011         	goto	l5273
  6161  00222E                     u5460:
  6162  00222E                     
  6163                           ; BSR set to: 0
  6164                           ;main.c: 211:         mesx = mes;
  6165  00222E  C0F1  F0EE         	movff	_mes,_mesx
  6166  002232                     
  6167                           ; BSR set to: 0
  6168                           ;main.c: 212:         Print_Mes();
  6169  002232  EC9D  F017         	call	_Print_Mes	;wreg free
  6170  002236                     l5273:
  6171                           
  6172                           ;main.c: 214:     if(anio != aniox){
  6173  002236  0100               	movlb	0	; () banked
  6174  002238  51EF               	movf	_aniox& (0+255),w,b
  6175  00223A  19F2               	xorwf	_anio& (0+255),w,b
  6176  00223C  B4D8               	btfsc	status,2,c
  6177  00223E  EF23  F011         	goto	u5471
  6178  002242  EF25  F011         	goto	u5470
  6179  002246                     u5471:
  6180  002246  EF29  F011         	goto	l5279
  6181  00224A                     u5470:
  6182  00224A                     
  6183                           ; BSR set to: 0
  6184                           ;main.c: 215:         aniox = anio;
  6185  00224A  C0F2  F0EF         	movff	_anio,_aniox
  6186  00224E                     
  6187                           ; BSR set to: 0
  6188                           ;main.c: 216:         Print_Anio();
  6189  00224E  EC05  F018         	call	_Print_Anio	;wreg free
  6190  002252                     l5279:
  6191                           
  6192                           ;main.c: 218:     I2C_Stop_DS();
  6193  002252  EC50  F01C         	call	_I2C_Stop_DS	;wreg free
  6194  002256  0012               	return		;funcret
  6195  002258                     __end_of_get_RTC:
  6196                           	callstack 0
  6197                           
  6198 ;; *************** function _Print_Mes *****************
  6199 ;; Defined at:
  6200 ;;		line 157 in file "main.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;		None
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;		None
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0
  6215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6217 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6218 ;;Total ram usage:        0 bytes
  6219 ;; Hardware stack levels used: 1
  6220 ;; Hardware stack levels required when called: 9
  6221 ;; This function calls:
  6222 ;;		_OLED_SPuts
  6223 ;;		___awdiv
  6224 ;;		___awmod
  6225 ;;		_sprintf
  6226 ;; This function is called by:
  6227 ;;		_get_RTC
  6228 ;;		_get_key
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text5
  6233  002F3A                     __ptext5:
  6234                           	callstack 0
  6235  002F3A                     _Print_Mes:
  6236                           	callstack 20
  6237  002F3A                     
  6238                           ;main.c: 158:     sprintf(sms,"%d%d-",mes/10,mes%10);
  6239  002F3A  0EC5               	movlw	low _sms
  6240  002F3C  0100               	movlb	0	; () banked
  6241  002F3E  6FD9               	movwf	sprintf@s& (0+255),b
  6242  002F40  0E00               	movlw	high _sms
  6243  002F42  6FDA               	movwf	(sprintf@s+1)& (0+255),b
  6244  002F44  0ECE               	movlw	low STR_8
  6245  002F46  6FDB               	movwf	sprintf@fmt& (0+255),b
  6246  002F48  0E7F               	movlw	high STR_8
  6247  002F4A  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
  6248  002F4C  C0F1  F001         	movff	_mes,___awdiv@dividend
  6249  002F50  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6250  002F52  0E00               	movlw	0
  6251  002F54  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6252  002F56  0E0A               	movlw	10
  6253  002F58  6E03               	movwf	___awdiv@divisor^0,c
  6254  002F5A  ECE2  F013         	call	___awdiv	;wreg free
  6255  002F5E  C001  F0DD         	movff	?___awdiv,?_sprintf+4
  6256  002F62  C002  F0DE         	movff	?___awdiv+1,?_sprintf+5
  6257  002F66  C0F1  F001         	movff	_mes,___awmod@dividend
  6258  002F6A  6A02               	clrf	(___awmod@dividend+1)^0,c
  6259  002F6C  0E00               	movlw	0
  6260  002F6E  6E04               	movwf	(___awmod@divisor+1)^0,c
  6261  002F70  0E0A               	movlw	10
  6262  002F72  6E03               	movwf	___awmod@divisor^0,c
  6263  002F74  ECFE  F014         	call	___awmod	;wreg free
  6264  002F78  C001  F0DF         	movff	?___awmod,?_sprintf+6
  6265  002F7C  C002  F0E0         	movff	?___awmod+1,?_sprintf+7
  6266  002F80  EC74  F01A         	call	_sprintf	;wreg free
  6267  002F84                     
  6268                           ;main.c: 159:     OLED_SPuts(50,6,sms);
  6269  002F84  0E00               	movlw	0
  6270  002F86  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  6271  002F88  0E32               	movlw	50
  6272  002F8A  6E07               	movwf	OLED_SPuts@x^0,c
  6273  002F8C  0E00               	movlw	0
  6274  002F8E  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  6275  002F90  0E06               	movlw	6
  6276  002F92  6E09               	movwf	OLED_SPuts@y^0,c
  6277  002F94  0EC5               	movlw	low _sms
  6278  002F96  6E0B               	movwf	OLED_SPuts@buffer^0,c
  6279  002F98  0E00               	movlw	high _sms
  6280  002F9A  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  6281  002F9C  EC03  F00E         	call	_OLED_SPuts	;wreg free
  6282  002FA0  0012               	return		;funcret
  6283  002FA2                     __end_of_Print_Mes:
  6284                           	callstack 0
  6285                           
  6286 ;; *************** function _Print_Dia *****************
  6287 ;; Defined at:
  6288 ;;		line 153 in file "main.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6305 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6306 ;;Total ram usage:        0 bytes
  6307 ;; Hardware stack levels used: 1
  6308 ;; Hardware stack levels required when called: 9
  6309 ;; This function calls:
  6310 ;;		_OLED_SPuts
  6311 ;;		___awdiv
  6312 ;;		___awmod
  6313 ;;		_sprintf
  6314 ;; This function is called by:
  6315 ;;		_get_RTC
  6316 ;;		_get_key
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text6
  6321  002FA2                     __ptext6:
  6322                           	callstack 0
  6323  002FA2                     _Print_Dia:
  6324                           	callstack 20
  6325  002FA2                     
  6326                           ;main.c: 154:     sprintf(sms,"%d%d",dia/10,dia%10);
  6327  002FA2  0EC5               	movlw	low _sms
  6328  002FA4  0100               	movlb	0	; () banked
  6329  002FA6  6FD9               	movwf	sprintf@s& (0+255),b
  6330  002FA8  0E00               	movlw	high _sms
  6331  002FAA  6FDA               	movwf	(sprintf@s+1)& (0+255),b
  6332  002FAC  0EEE               	movlw	low STR_6
  6333  002FAE  6FDB               	movwf	sprintf@fmt& (0+255),b
  6334  002FB0  0E7F               	movlw	high STR_6
  6335  002FB2  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
  6336  002FB4  C0F0  F001         	movff	_dia,___awdiv@dividend
  6337  002FB8  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6338  002FBA  0E00               	movlw	0
  6339  002FBC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6340  002FBE  0E0A               	movlw	10
  6341  002FC0  6E03               	movwf	___awdiv@divisor^0,c
  6342  002FC2  ECE2  F013         	call	___awdiv	;wreg free
  6343  002FC6  C001  F0DD         	movff	?___awdiv,?_sprintf+4
  6344  002FCA  C002  F0DE         	movff	?___awdiv+1,?_sprintf+5
  6345  002FCE  C0F0  F001         	movff	_dia,___awmod@dividend
  6346  002FD2  6A02               	clrf	(___awmod@dividend+1)^0,c
  6347  002FD4  0E00               	movlw	0
  6348  002FD6  6E04               	movwf	(___awmod@divisor+1)^0,c
  6349  002FD8  0E0A               	movlw	10
  6350  002FDA  6E03               	movwf	___awmod@divisor^0,c
  6351  002FDC  ECFE  F014         	call	___awmod	;wreg free
  6352  002FE0  C001  F0DF         	movff	?___awmod,?_sprintf+6
  6353  002FE4  C002  F0E0         	movff	?___awmod+1,?_sprintf+7
  6354  002FE8  EC74  F01A         	call	_sprintf	;wreg free
  6355  002FEC                     
  6356                           ;main.c: 155:     OLED_SPuts(90,6,sms);
  6357  002FEC  0E00               	movlw	0
  6358  002FEE  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  6359  002FF0  0E5A               	movlw	90
  6360  002FF2  6E07               	movwf	OLED_SPuts@x^0,c
  6361  002FF4  0E00               	movlw	0
  6362  002FF6  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  6363  002FF8  0E06               	movlw	6
  6364  002FFA  6E09               	movwf	OLED_SPuts@y^0,c
  6365  002FFC  0EC5               	movlw	low _sms
  6366  002FFE  6E0B               	movwf	OLED_SPuts@buffer^0,c
  6367  003000  0E00               	movlw	high _sms
  6368  003002  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  6369  003004  EC03  F00E         	call	_OLED_SPuts	;wreg free
  6370  003008  0012               	return		;funcret
  6371  00300A                     __end_of_Print_Dia:
  6372                           	callstack 0
  6373                           
  6374 ;; *************** function _Print_Anio *****************
  6375 ;; Defined at:
  6376 ;;		line 161 in file "main.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;		None
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;		None
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6390 ;;      Params:         0       0       0       0       0       0       0       0       0
  6391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6393 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6394 ;;Total ram usage:        0 bytes
  6395 ;; Hardware stack levels used: 1
  6396 ;; Hardware stack levels required when called: 9
  6397 ;; This function calls:
  6398 ;;		_OLED_SPuts
  6399 ;;		___awdiv
  6400 ;;		___awmod
  6401 ;;		_sprintf
  6402 ;; This function is called by:
  6403 ;;		_get_RTC
  6404 ;;		_get_key
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text7
  6409  00300A                     __ptext7:
  6410                           	callstack 0
  6411  00300A                     _Print_Anio:
  6412                           	callstack 20
  6413  00300A                     
  6414                           ;main.c: 162:     sprintf(sms,"%d%d-",anio/10,anio%10);
  6415  00300A  0EC5               	movlw	low _sms
  6416  00300C  0100               	movlb	0	; () banked
  6417  00300E  6FD9               	movwf	sprintf@s& (0+255),b
  6418  003010  0E00               	movlw	high _sms
  6419  003012  6FDA               	movwf	(sprintf@s+1)& (0+255),b
  6420  003014  0ECE               	movlw	low STR_8
  6421  003016  6FDB               	movwf	sprintf@fmt& (0+255),b
  6422  003018  0E7F               	movlw	high STR_8
  6423  00301A  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
  6424  00301C  C0F2  F001         	movff	_anio,___awdiv@dividend
  6425  003020  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6426  003022  0E00               	movlw	0
  6427  003024  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6428  003026  0E0A               	movlw	10
  6429  003028  6E03               	movwf	___awdiv@divisor^0,c
  6430  00302A  ECE2  F013         	call	___awdiv	;wreg free
  6431  00302E  C001  F0DD         	movff	?___awdiv,?_sprintf+4
  6432  003032  C002  F0DE         	movff	?___awdiv+1,?_sprintf+5
  6433  003036  C0F2  F001         	movff	_anio,___awmod@dividend
  6434  00303A  6A02               	clrf	(___awmod@dividend+1)^0,c
  6435  00303C  0E00               	movlw	0
  6436  00303E  6E04               	movwf	(___awmod@divisor+1)^0,c
  6437  003040  0E0A               	movlw	10
  6438  003042  6E03               	movwf	___awmod@divisor^0,c
  6439  003044  ECFE  F014         	call	___awmod	;wreg free
  6440  003048  C001  F0DF         	movff	?___awmod,?_sprintf+6
  6441  00304C  C002  F0E0         	movff	?___awmod+1,?_sprintf+7
  6442  003050  EC74  F01A         	call	_sprintf	;wreg free
  6443  003054                     
  6444                           ;main.c: 163:     OLED_SPuts(10,6,sms);
  6445  003054  0E00               	movlw	0
  6446  003056  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  6447  003058  0E0A               	movlw	10
  6448  00305A  6E07               	movwf	OLED_SPuts@x^0,c
  6449  00305C  0E00               	movlw	0
  6450  00305E  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  6451  003060  0E06               	movlw	6
  6452  003062  6E09               	movwf	OLED_SPuts@y^0,c
  6453  003064  0EC5               	movlw	low _sms
  6454  003066  6E0B               	movwf	OLED_SPuts@buffer^0,c
  6455  003068  0E00               	movlw	high _sms
  6456  00306A  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  6457  00306C  EC03  F00E         	call	_OLED_SPuts	;wreg free
  6458  003070  0012               	return		;funcret
  6459  003072                     __end_of_Print_Anio:
  6460                           	callstack 0
  6461                           
  6462 ;; *************** function _I2C_Write_DS *****************
  6463 ;; Defined at:
  6464 ;;		line 22 in file "DS3231.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  i2c_data        1    wreg     unsigned char 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  i2c_data        1    1[COMRAM] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      void 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6478 ;;      Params:         0       0       0       0       0       0       0       0       0
  6479 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6480 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6481 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6482 ;;Total ram usage:        2 bytes
  6483 ;; Hardware stack levels used: 1
  6484 ;; Hardware stack levels required when called: 1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_get_RTC
  6489 ;;		_set_RTC
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text8
  6494  00384A                     __ptext8:
  6495                           	callstack 0
  6496  00384A                     _I2C_Write_DS:
  6497                           	callstack 27
  6498                           
  6499                           ;incstack = 0
  6500                           ;I2C_Write_DS@i2c_data stored from wreg
  6501  00384A  6E02               	movwf	I2C_Write_DS@i2c_data^0,c
  6502  00384C                     l425:
  6503  00384C  B4C7               	btfsc	199,2,c	;volatile
  6504  00384E  EF2B  F01C         	goto	u3841
  6505  003852  EF2D  F01C         	goto	u3840
  6506  003856                     u3841:
  6507  003856  EF26  F01C         	goto	l425
  6508  00385A                     u3840:
  6509  00385A  CFC5 F001          	movff	4037,??_I2C_Write_DS	;volatile
  6510  00385E  0E1F               	movlw	31
  6511  003860  1601               	andwf	??_I2C_Write_DS^0,f,c
  6512  003862  A4D8               	btfss	status,2,c
  6513  003864  EF36  F01C         	goto	u3851
  6514  003868  EF38  F01C         	goto	u3850
  6515  00386C                     u3851:
  6516  00386C  EF26  F01C         	goto	l425
  6517  003870                     u3850:
  6518  003870                     
  6519                           ;DS3231.c: 25:   SSPBUF = i2c_data;
  6520  003870  C002  FFC9         	movff	I2C_Write_DS@i2c_data,4041	;volatile
  6521  003874  0012               	return		;funcret
  6522  003876                     __end_of_I2C_Write_DS:
  6523                           	callstack 0
  6524                           
  6525 ;; *************** function _I2C_Stop_DS *****************
  6526 ;; Defined at:
  6527 ;;		line 16 in file "DS3231.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6543 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6544 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6545 ;;Total ram usage:        1 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; Hardware stack levels required when called: 1
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_get_RTC
  6552 ;;		_set_RTC
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text9
  6557  0038A0                     __ptext9:
  6558                           	callstack 0
  6559  0038A0                     _I2C_Stop_DS:
  6560                           	callstack 27
  6561  0038A0                     l419:
  6562  0038A0  B4C7               	btfsc	199,2,c	;volatile
  6563  0038A2  EF55  F01C         	goto	u3861
  6564  0038A6  EF57  F01C         	goto	u3860
  6565  0038AA                     u3861:
  6566  0038AA  EF50  F01C         	goto	l419
  6567  0038AE                     u3860:
  6568  0038AE  CFC5 F001          	movff	4037,??_I2C_Stop_DS	;volatile
  6569  0038B2  0E1F               	movlw	31
  6570  0038B4  1601               	andwf	??_I2C_Stop_DS^0,f,c
  6571  0038B6  A4D8               	btfss	status,2,c
  6572  0038B8  EF60  F01C         	goto	u3871
  6573  0038BC  EF62  F01C         	goto	u3870
  6574  0038C0                     u3871:
  6575  0038C0  EF50  F01C         	goto	l419
  6576  0038C4                     u3870:
  6577  0038C4                     
  6578                           ;DS3231.c: 19:   PEN = 1;
  6579  0038C4  84C5               	bsf	4037,2,c	;volatile
  6580  0038C6  0012               	return		;funcret
  6581  0038C8                     __end_of_I2C_Stop_DS:
  6582                           	callstack 0
  6583                           
  6584 ;; *************** function _I2C_Start_DS *****************
  6585 ;; Defined at:
  6586 ;;		line 4 in file "DS3231.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6600 ;;      Params:         0       0       0       0       0       0       0       0       0
  6601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6602 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6603 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6604 ;;Total ram usage:        1 bytes
  6605 ;; Hardware stack levels used: 1
  6606 ;; Hardware stack levels required when called: 1
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_get_RTC
  6611 ;;		_set_RTC
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text10
  6616  0038C8                     __ptext10:
  6617                           	callstack 0
  6618  0038C8                     _I2C_Start_DS:
  6619                           	callstack 27
  6620  0038C8                     l407:
  6621  0038C8  B4C7               	btfsc	199,2,c	;volatile
  6622  0038CA  EF69  F01C         	goto	u3821
  6623  0038CE  EF6B  F01C         	goto	u3820
  6624  0038D2                     u3821:
  6625  0038D2  EF64  F01C         	goto	l407
  6626  0038D6                     u3820:
  6627  0038D6  CFC5 F001          	movff	4037,??_I2C_Start_DS	;volatile
  6628  0038DA  0E1F               	movlw	31
  6629  0038DC  1601               	andwf	??_I2C_Start_DS^0,f,c
  6630  0038DE  A4D8               	btfss	status,2,c
  6631  0038E0  EF74  F01C         	goto	u3831
  6632  0038E4  EF76  F01C         	goto	u3830
  6633  0038E8                     u3831:
  6634  0038E8  EF64  F01C         	goto	l407
  6635  0038EC                     u3830:
  6636  0038EC                     
  6637                           ;DS3231.c: 7:   SEN = 1;
  6638  0038EC  80C5               	bsf	4037,0,c	;volatile
  6639  0038EE  0012               	return		;funcret
  6640  0038F0                     __end_of_I2C_Start_DS:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _I2C_Repeated_Start_DS *****************
  6644 ;; Defined at:
  6645 ;;		line 10 in file "DS3231.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;		None
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6661 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6662 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6663 ;;Total ram usage:        1 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; Hardware stack levels required when called: 1
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_get_RTC
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text11
  6674  0038F0                     __ptext11:
  6675                           	callstack 0
  6676  0038F0                     _I2C_Repeated_Start_DS:
  6677                           	callstack 28
  6678  0038F0                     l413:
  6679  0038F0  B4C7               	btfsc	199,2,c	;volatile
  6680  0038F2  EF7D  F01C         	goto	u4471
  6681  0038F6  EF7F  F01C         	goto	u4470
  6682  0038FA                     u4471:
  6683  0038FA  EF78  F01C         	goto	l413
  6684  0038FE                     u4470:
  6685  0038FE  CFC5 F001          	movff	4037,??_I2C_Repeated_Start_DS	;volatile
  6686  003902  0E1F               	movlw	31
  6687  003904  1601               	andwf	??_I2C_Repeated_Start_DS^0,f,c
  6688  003906  A4D8               	btfss	status,2,c
  6689  003908  EF88  F01C         	goto	u4481
  6690  00390C  EF8A  F01C         	goto	u4480
  6691  003910                     u4481:
  6692  003910  EF78  F01C         	goto	l413
  6693  003914                     u4480:
  6694  003914                     
  6695                           ;DS3231.c: 13:   RSEN = 1;
  6696  003914  82C5               	bsf	4037,1,c	;volatile
  6697  003916  0012               	return		;funcret
  6698  003918                     __end_of_I2C_Repeated_Start_DS:
  6699                           	callstack 0
  6700                           
  6701 ;; *************** function _I2C_Read_DS *****************
  6702 ;; Defined at:
  6703 ;;		line 28 in file "DS3231.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  ack             1    wreg     unsigned char 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  ack             1    1[COMRAM] unsigned char 
  6708 ;;  data            1    2[COMRAM] unsigned char 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      unsigned char 
  6711 ;; Registers used:
  6712 ;;		wreg, status,2, status,0
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6718 ;;      Params:         0       0       0       0       0       0       0       0       0
  6719 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6720 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6721 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6722 ;;Total ram usage:        3 bytes
  6723 ;; Hardware stack levels used: 1
  6724 ;; Hardware stack levels required when called: 1
  6725 ;; This function calls:
  6726 ;;		Nothing
  6727 ;; This function is called by:
  6728 ;;		_get_RTC
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           	psect	text12
  6733  002D3A                     __ptext12:
  6734                           	callstack 0
  6735  002D3A                     _I2C_Read_DS:
  6736                           	callstack 28
  6737                           
  6738                           ;incstack = 0
  6739                           ;I2C_Read_DS@ack stored from wreg
  6740  002D3A  6E02               	movwf	I2C_Read_DS@ack^0,c
  6741  002D3C                     l431:
  6742  002D3C  B4C7               	btfsc	199,2,c	;volatile
  6743  002D3E  EFA3  F016         	goto	u4491
  6744  002D42  EFA5  F016         	goto	u4490
  6745  002D46                     u4491:
  6746  002D46  EF9E  F016         	goto	l431
  6747  002D4A                     u4490:
  6748  002D4A  CFC5 F001          	movff	4037,??_I2C_Read_DS	;volatile
  6749  002D4E  0E1F               	movlw	31
  6750  002D50  1601               	andwf	??_I2C_Read_DS^0,f,c
  6751  002D52  A4D8               	btfss	status,2,c
  6752  002D54  EFAE  F016         	goto	u4501
  6753  002D58  EFB0  F016         	goto	u4500
  6754  002D5C                     u4501:
  6755  002D5C  EF9E  F016         	goto	l431
  6756  002D60                     u4500:
  6757  002D60                     
  6758                           ;DS3231.c: 32:   RCEN = 1;
  6759  002D60  86C5               	bsf	4037,3,c	;volatile
  6760  002D62                     l434:
  6761  002D62  B4C7               	btfsc	199,2,c	;volatile
  6762  002D64  EFB6  F016         	goto	u4511
  6763  002D68  EFB8  F016         	goto	u4510
  6764  002D6C                     u4511:
  6765  002D6C  EFB1  F016         	goto	l434
  6766  002D70                     u4510:
  6767  002D70  CFC5 F001          	movff	4037,??_I2C_Read_DS	;volatile
  6768  002D74  0E1F               	movlw	31
  6769  002D76  1601               	andwf	??_I2C_Read_DS^0,f,c
  6770  002D78  A4D8               	btfss	status,2,c
  6771  002D7A  EFC1  F016         	goto	u4521
  6772  002D7E  EFC3  F016         	goto	u4520
  6773  002D82                     u4521:
  6774  002D82  EFB1  F016         	goto	l434
  6775  002D86                     u4520:
  6776  002D86                     
  6777                           ;DS3231.c: 34:   data = SSPBUF;
  6778  002D86  CFC9 F003          	movff	4041,I2C_Read_DS@data	;volatile
  6779  002D8A                     l437:
  6780  002D8A  B4C7               	btfsc	199,2,c	;volatile
  6781  002D8C  EFCA  F016         	goto	u4531
  6782  002D90  EFCC  F016         	goto	u4530
  6783  002D94                     u4531:
  6784  002D94  EFC5  F016         	goto	l437
  6785  002D98                     u4530:
  6786  002D98  CFC5 F001          	movff	4037,??_I2C_Read_DS	;volatile
  6787  002D9C  0E1F               	movlw	31
  6788  002D9E  1601               	andwf	??_I2C_Read_DS^0,f,c
  6789  002DA0  A4D8               	btfss	status,2,c
  6790  002DA2  EFD5  F016         	goto	u4541
  6791  002DA6  EFD7  F016         	goto	u4540
  6792  002DAA                     u4541:
  6793  002DAA  EFC5  F016         	goto	l437
  6794  002DAE                     u4540:
  6795  002DAE                     
  6796                           ;DS3231.c: 37:   ACKDT = !ack;
  6797  002DAE  5002               	movf	I2C_Read_DS@ack^0,w,c
  6798  002DB0  B4D8               	btfsc	status,2,c
  6799  002DB2  EFDD  F016         	goto	u4551
  6800  002DB6  EFE0  F016         	goto	u4550
  6801  002DBA                     u4551:
  6802  002DBA  8AC5               	bsf	4037,5,c	;volatile
  6803  002DBC  EFE1  F016         	goto	u4565
  6804  002DC0                     u4550:
  6805  002DC0  9AC5               	bcf	4037,5,c	;volatile
  6806  002DC2                     u4565:
  6807  002DC2                     
  6808                           ;DS3231.c: 38:   ACKEN = 1;
  6809  002DC2  88C5               	bsf	4037,4,c	;volatile
  6810                           
  6811                           ;DS3231.c: 39:   return data;
  6812  002DC4  5003               	movf	I2C_Read_DS@data^0,w,c
  6813  002DC6  0012               	return		;funcret
  6814  002DC8                     __end_of_I2C_Read_DS:
  6815                           	callstack 0
  6816                           
  6817 ;; *************** function _UART_Init *****************
  6818 ;; Defined at:
  6819 ;;		line 4 in file "UART.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;		None
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;		None
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		None
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6833 ;;      Params:         0       0       0       0       0       0       0       0       0
  6834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6836 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6837 ;;Total ram usage:        0 bytes
  6838 ;; Hardware stack levels used: 1
  6839 ;; Hardware stack levels required when called: 1
  6840 ;; This function calls:
  6841 ;;		Nothing
  6842 ;; This function is called by:
  6843 ;;		_main
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           	psect	text13
  6848  003A9C                     __ptext13:
  6849                           	callstack 0
  6850  003A9C                     _UART_Init:
  6851                           	callstack 29
  6852  003A9C                     
  6853                           ;UART.c: 6:     TXSTAbits.SYNC = 0;
  6854  003A9C  98AC               	bcf	172,4,c	;volatile
  6855                           
  6856                           ;UART.c: 7:     TXSTAbits.TXEN = 1;
  6857  003A9E  8AAC               	bsf	172,5,c	;volatile
  6858                           
  6859                           ;UART.c: 8:     TXSTAbits.TX9 = 0;
  6860  003AA0  9CAC               	bcf	172,6,c	;volatile
  6861                           
  6862                           ;UART.c: 10:     RCSTAbits.SPEN = 1;
  6863  003AA2  8EAB               	bsf	171,7,c	;volatile
  6864                           
  6865                           ;UART.c: 11:     RCSTAbits.RX9 = 0;
  6866  003AA4  9CAB               	bcf	171,6,c	;volatile
  6867                           
  6868                           ;UART.c: 12:     RCSTAbits.CREN = 1;
  6869  003AA6  88AB               	bsf	171,4,c	;volatile
  6870                           
  6871                           ;UART.c: 14:     TXSTAbits.BRGH = 1;
  6872  003AA8  84AC               	bsf	172,2,c	;volatile
  6873                           
  6874                           ;UART.c: 15:     BAUDCONbits.BRG16 = 0;
  6875  003AAA  96B8               	bcf	184,3,c	;volatile
  6876                           
  6877                           ;UART.c: 16:     PIR1bits.RCIF = 0;
  6878  003AAC  9A9E               	bcf	158,5,c	;volatile
  6879                           
  6880                           ;UART.c: 17:     PIE1bits.RCIE = 1;
  6881  003AAE  8A9D               	bsf	157,5,c	;volatile
  6882  003AB0  0012               	return		;funcret
  6883  003AB2                     __end_of_UART_Init:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function _UART_Begin *****************
  6887 ;; Defined at:
  6888 ;;		line 20 in file "UART.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  baud            4   36[COMRAM] unsigned long 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  aux             4   44[COMRAM] unsigned long 
  6893 ;;  aux2            4   40[COMRAM] unsigned long 
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  1    wreg      void 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, status,0, cstack
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6903 ;;      Params:         4       0       0       0       0       0       0       0       0
  6904 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6906 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6907 ;;Total ram usage:       12 bytes
  6908 ;; Hardware stack levels used: 1
  6909 ;; Hardware stack levels required when called: 3
  6910 ;; This function calls:
  6911 ;;		___fladd
  6912 ;;		___fldiv
  6913 ;;		___flge
  6914 ;;		___flsub
  6915 ;;		___fltol
  6916 ;;		___xxtofl
  6917 ;; This function is called by:
  6918 ;;		_main
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text14
  6923  001086                     __ptext14:
  6924                           	callstack 0
  6925  001086                     _UART_Begin:
  6926                           	callstack 27
  6927  001086                     
  6928                           ;UART.c: 21:     double aux = 8000000;
  6929  001086  0E00               	movlw	0
  6930  001088  6E2D               	movwf	UART_Begin@aux^0,c
  6931  00108A  0E24               	movlw	36
  6932  00108C  6E2E               	movwf	(UART_Begin@aux+1)^0,c
  6933  00108E  0EF4               	movlw	244
  6934  001090  6E2F               	movwf	(UART_Begin@aux+2)^0,c
  6935  001092  0E4A               	movlw	74
  6936  001094  6E30               	movwf	(UART_Begin@aux+3)^0,c
  6937  001096                     
  6938                           ;UART.c: 22:     double aux2 = baud;
  6939  001096  C025  F001         	movff	UART_Begin@baud,___xxtofl@val
  6940  00109A  C026  F002         	movff	UART_Begin@baud+1,___xxtofl@val+1
  6941  00109E  C027  F003         	movff	UART_Begin@baud+2,___xxtofl@val+2
  6942  0010A2  C028  F004         	movff	UART_Begin@baud+3,___xxtofl@val+3
  6943  0010A6  0E00               	movlw	0
  6944  0010A8  EC28  F009         	call	___xxtofl
  6945  0010AC  C001  F029         	movff	?___xxtofl,UART_Begin@aux2
  6946  0010B0  C002  F02A         	movff	?___xxtofl+1,UART_Begin@aux2+1
  6947  0010B4  C003  F02B         	movff	?___xxtofl+2,UART_Begin@aux2+2
  6948  0010B8  C004  F02C         	movff	?___xxtofl+3,UART_Begin@aux2+3
  6949  0010BC                     
  6950                           ;UART.c: 23:     aux = aux / aux2;
  6951  0010BC  C02D  F001         	movff	UART_Begin@aux,___fldiv@b
  6952  0010C0  C02E  F002         	movff	UART_Begin@aux+1,___fldiv@b+1
  6953  0010C4  C02F  F003         	movff	UART_Begin@aux+2,___fldiv@b+2
  6954  0010C8  C030  F004         	movff	UART_Begin@aux+3,___fldiv@b+3
  6955  0010CC  C029  F005         	movff	UART_Begin@aux2,___fldiv@a
  6956  0010D0  C02A  F006         	movff	UART_Begin@aux2+1,___fldiv@a+1
  6957  0010D4  C02B  F007         	movff	UART_Begin@aux2+2,___fldiv@a+2
  6958  0010D8  C02C  F008         	movff	UART_Begin@aux2+3,___fldiv@a+3
  6959  0010DC  EC69  F002         	call	___fldiv	;wreg free
  6960  0010E0  C001  F02D         	movff	?___fldiv,UART_Begin@aux
  6961  0010E4  C002  F02E         	movff	?___fldiv+1,UART_Begin@aux+1
  6962  0010E8  C003  F02F         	movff	?___fldiv+2,UART_Begin@aux+2
  6963  0010EC  C004  F030         	movff	?___fldiv+3,UART_Begin@aux+3
  6964  0010F0                     
  6965                           ;UART.c: 24:     if(baud <= 19200){
  6966  0010F0  5028               	movf	(UART_Begin@baud+3)^0,w,c
  6967  0010F2  1027               	iorwf	(UART_Begin@baud+2)^0,w,c
  6968  0010F4  E108               	bnz	u5121
  6969  0010F6  0425               	decf	UART_Begin@baud^0,w,c
  6970  0010F8  0E4B               	movlw	75
  6971  0010FA  5826               	subwfb	(UART_Begin@baud+1)^0,w,c
  6972  0010FC  B0D8               	btfsc	status,0,c
  6973  0010FE  EF83  F008         	goto	u5121
  6974  001102  EF85  F008         	goto	u5120
  6975  001106                     u5121:
  6976  001106  EFA2  F008         	goto	l462
  6977  00110A                     u5120:
  6978  00110A                     
  6979                           ;UART.c: 25:         TXSTAbits.BRGH = 0;
  6980  00110A  94AC               	bcf	172,2,c	;volatile
  6981  00110C                     
  6982                           ;UART.c: 26:         aux = aux / 64.0;
  6983  00110C  C02D  F001         	movff	UART_Begin@aux,___fldiv@b
  6984  001110  C02E  F002         	movff	UART_Begin@aux+1,___fldiv@b+1
  6985  001114  C02F  F003         	movff	UART_Begin@aux+2,___fldiv@b+2
  6986  001118  C030  F004         	movff	UART_Begin@aux+3,___fldiv@b+3
  6987  00111C  0E00               	movlw	0
  6988  00111E  6E05               	movwf	___fldiv@a^0,c
  6989  001120  0E00               	movlw	0
  6990  001122  6E06               	movwf	(___fldiv@a+1)^0,c
  6991  001124  0E80               	movlw	128
  6992  001126  6E07               	movwf	(___fldiv@a+2)^0,c
  6993  001128  0E42               	movlw	66
  6994  00112A  6E08               	movwf	(___fldiv@a+3)^0,c
  6995  00112C  EC69  F002         	call	___fldiv	;wreg free
  6996  001130  C001  F02D         	movff	?___fldiv,UART_Begin@aux
  6997  001134  C002  F02E         	movff	?___fldiv+1,UART_Begin@aux+1
  6998  001138  C003  F02F         	movff	?___fldiv+2,UART_Begin@aux+2
  6999  00113C  C004  F030         	movff	?___fldiv+3,UART_Begin@aux+3
  7000                           
  7001                           ;UART.c: 27:     }else{
  7002  001140  EFBD  F008         	goto	l463
  7003  001144                     l462:
  7004                           
  7005                           ;UART.c: 28:         TXSTAbits.BRGH = 1;
  7006  001144  84AC               	bsf	172,2,c	;volatile
  7007  001146                     
  7008                           ;UART.c: 29:         aux = aux / 16.0;
  7009  001146  C02D  F001         	movff	UART_Begin@aux,___fldiv@b
  7010  00114A  C02E  F002         	movff	UART_Begin@aux+1,___fldiv@b+1
  7011  00114E  C02F  F003         	movff	UART_Begin@aux+2,___fldiv@b+2
  7012  001152  C030  F004         	movff	UART_Begin@aux+3,___fldiv@b+3
  7013  001156  0E00               	movlw	0
  7014  001158  6E05               	movwf	___fldiv@a^0,c
  7015  00115A  0E00               	movlw	0
  7016  00115C  6E06               	movwf	(___fldiv@a+1)^0,c
  7017  00115E  0E80               	movlw	128
  7018  001160  6E07               	movwf	(___fldiv@a+2)^0,c
  7019  001162  0E41               	movlw	65
  7020  001164  6E08               	movwf	(___fldiv@a+3)^0,c
  7021  001166  EC69  F002         	call	___fldiv	;wreg free
  7022  00116A  C001  F02D         	movff	?___fldiv,UART_Begin@aux
  7023  00116E  C002  F02E         	movff	?___fldiv+1,UART_Begin@aux+1
  7024  001172  C003  F02F         	movff	?___fldiv+2,UART_Begin@aux+2
  7025  001176  C004  F030         	movff	?___fldiv+3,UART_Begin@aux+3
  7026  00117A                     l463:
  7027                           
  7028                           ;UART.c: 31:     aux = aux - 1.0;
  7029  00117A  C02D  F001         	movff	UART_Begin@aux,___fladd@b
  7030  00117E  C02E  F002         	movff	UART_Begin@aux+1,___fladd@b+1
  7031  001182  C02F  F003         	movff	UART_Begin@aux+2,___fladd@b+2
  7032  001186  C030  F004         	movff	UART_Begin@aux+3,___fladd@b+3
  7033  00118A  0E00               	movlw	0
  7034  00118C  6E05               	movwf	___fladd@a^0,c
  7035  00118E  0E00               	movlw	0
  7036  001190  6E06               	movwf	(___fladd@a+1)^0,c
  7037  001192  0E80               	movlw	128
  7038  001194  6E07               	movwf	(___fladd@a+2)^0,c
  7039  001196  0EBF               	movlw	191
  7040  001198  6E08               	movwf	(___fladd@a+3)^0,c
  7041  00119A  EC09  F000         	call	___fladd	;wreg free
  7042  00119E  C001  F02D         	movff	?___fladd,UART_Begin@aux
  7043  0011A2  C002  F02E         	movff	?___fladd+1,UART_Begin@aux+1
  7044  0011A6  C003  F02F         	movff	?___fladd+2,UART_Begin@aux+2
  7045  0011AA  C004  F030         	movff	?___fladd+3,UART_Begin@aux+3
  7046                           
  7047                           ;UART.c: 32:     baud = (unsigned long)aux;
  7048  0011AE  C02D  F001         	movff	UART_Begin@aux,___fltol@f1
  7049  0011B2  C02E  F002         	movff	UART_Begin@aux+1,___fltol@f1+1
  7050  0011B6  C02F  F003         	movff	UART_Begin@aux+2,___fltol@f1+2
  7051  0011BA  C030  F004         	movff	UART_Begin@aux+3,___fltol@f1+3
  7052  0011BE  EC2C  F011         	call	___fltol	;wreg free
  7053  0011C2  C001  F025         	movff	?___fltol,UART_Begin@baud
  7054  0011C6  C002  F026         	movff	?___fltol+1,UART_Begin@baud+1
  7055  0011CA  C003  F027         	movff	?___fltol+2,UART_Begin@baud+2
  7056  0011CE  C004  F028         	movff	?___fltol+3,UART_Begin@baud+3
  7057                           
  7058                           ;UART.c: 33:     if(aux - baud >= 0.5){
  7059  0011D2  C025  F001         	movff	UART_Begin@baud,___xxtofl@val
  7060  0011D6  C026  F002         	movff	UART_Begin@baud+1,___xxtofl@val+1
  7061  0011DA  C027  F003         	movff	UART_Begin@baud+2,___xxtofl@val+2
  7062  0011DE  C028  F004         	movff	UART_Begin@baud+3,___xxtofl@val+3
  7063  0011E2  0E00               	movlw	0
  7064  0011E4  EC28  F009         	call	___xxtofl
  7065  0011E8  C001  F015         	movff	?___xxtofl,___flsub@a
  7066  0011EC  C002  F016         	movff	?___xxtofl+1,___flsub@a+1
  7067  0011F0  C003  F017         	movff	?___xxtofl+2,___flsub@a+2
  7068  0011F4  C004  F018         	movff	?___xxtofl+3,___flsub@a+3
  7069  0011F8  C02D  F011         	movff	UART_Begin@aux,___flsub@b
  7070  0011FC  C02E  F012         	movff	UART_Begin@aux+1,___flsub@b+1
  7071  001200  C02F  F013         	movff	UART_Begin@aux+2,___flsub@b+2
  7072  001204  C030  F014         	movff	UART_Begin@aux+3,___flsub@b+3
  7073  001208  ECC2  F01A         	call	___flsub	;wreg free
  7074  00120C  C011  F019         	movff	?___flsub,___flge@ff1
  7075  001210  C012  F01A         	movff	?___flsub+1,___flge@ff1+1
  7076  001214  C013  F01B         	movff	?___flsub+2,___flge@ff1+2
  7077  001218  C014  F01C         	movff	?___flsub+3,___flge@ff1+3
  7078  00121C  0E00               	movlw	0
  7079  00121E  6E1D               	movwf	___flge@ff2^0,c
  7080  001220  0E00               	movlw	0
  7081  001222  6E1E               	movwf	(___flge@ff2+1)^0,c
  7082  001224  0E00               	movlw	0
  7083  001226  6E1F               	movwf	(___flge@ff2+2)^0,c
  7084  001228  0E3F               	movlw	63
  7085  00122A  6E20               	movwf	(___flge@ff2+3)^0,c
  7086  00122C  ECAF  F011         	call	___flge	;wreg free
  7087  001230  A0D8               	btfss	status,0,c
  7088  001232  EF1D  F009         	goto	u5131
  7089  001236  EF1F  F009         	goto	u5130
  7090  00123A                     u5131:
  7091  00123A  EF25  F009         	goto	l5029
  7092  00123E                     u5130:
  7093  00123E                     
  7094                           ;UART.c: 34:         baud++;
  7095  00123E  0E01               	movlw	1
  7096  001240  2625               	addwf	UART_Begin@baud^0,f,c
  7097  001242  0E00               	movlw	0
  7098  001244  2226               	addwfc	(UART_Begin@baud+1)^0,f,c
  7099  001246  2227               	addwfc	(UART_Begin@baud+2)^0,f,c
  7100  001248  2228               	addwfc	(UART_Begin@baud+3)^0,f,c
  7101  00124A                     l5029:
  7102                           
  7103                           ;UART.c: 36:     SPBRG = (unsigned char)baud;
  7104  00124A  C025  FFAF         	movff	UART_Begin@baud,4015	;volatile
  7105  00124E  0012               	return		;funcret
  7106  001250                     __end_of_UART_Begin:
  7107                           	callstack 0
  7108                           
  7109 ;; *************** function ___xxtofl *****************
  7110 ;; Defined at:
  7111 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  sign            1    wreg     unsigned char 
  7114 ;;  val             4    0[COMRAM] long 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  sign            1    8[COMRAM] unsigned char 
  7117 ;;  arg             4   10[COMRAM] unsigned long 
  7118 ;;  exp             1    9[COMRAM] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  4    0[COMRAM] unsigned char 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7128 ;;      Params:         4       0       0       0       0       0       0       0       0
  7129 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7130 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7131 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7132 ;;Total ram usage:       14 bytes
  7133 ;; Hardware stack levels used: 1
  7134 ;; Hardware stack levels required when called: 1
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_UART_Begin
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text15
  7143  001250                     __ptext15:
  7144                           	callstack 0
  7145  001250                     ___xxtofl:
  7146                           	callstack 28
  7147                           
  7148                           ;incstack = 0
  7149                           ;___xxtofl@sign stored from wreg
  7150  001250  6E09               	movwf	___xxtofl@sign^0,c
  7151  001252  5009               	movf	___xxtofl@sign^0,w,c
  7152  001254  B4D8               	btfsc	status,2,c
  7153  001256  EF2F  F009         	goto	u5021
  7154  00125A  EF31  F009         	goto	u5020
  7155  00125E                     u5021:
  7156  00125E  EF53  F009         	goto	l1324
  7157  001262                     u5020:
  7158  001262  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7159  001264  EF38  F009         	goto	u5030
  7160  001268  EF36  F009         	goto	u5031
  7161  00126C                     u5031:
  7162  00126C  EF53  F009         	goto	l1324
  7163  001270                     u5030:
  7164  001270  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7165  001274  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7166  001278  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7167  00127C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7168  001280  1E05               	comf	??___xxtofl^0,f,c
  7169  001282  1E06               	comf	(??___xxtofl+1)^0,f,c
  7170  001284  1E07               	comf	(??___xxtofl+2)^0,f,c
  7171  001286  1E08               	comf	(??___xxtofl+3)^0,f,c
  7172  001288  2A05               	incf	??___xxtofl^0,f,c
  7173  00128A  0E00               	movlw	0
  7174  00128C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7175  00128E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7176  001290  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7177  001292  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7178  001296  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7179  00129A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7180  00129E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7181  0012A2  EF5B  F009         	goto	l4961
  7182  0012A6                     l1324:
  7183  0012A6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7184  0012AA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7185  0012AE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7186  0012B2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7187  0012B6                     l4961:
  7188  0012B6  5001               	movf	___xxtofl@val^0,w,c
  7189  0012B8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7190  0012BA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7191  0012BC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7192  0012BE  A4D8               	btfss	status,2,c
  7193  0012C0  EF64  F009         	goto	u5041
  7194  0012C4  EF66  F009         	goto	u5040
  7195  0012C8                     u5041:
  7196  0012C8  EF70  F009         	goto	l4967
  7197  0012CC                     u5040:
  7198  0012CC  0E00               	movlw	0
  7199  0012CE  6E01               	movwf	?___xxtofl^0,c
  7200  0012D0  0E00               	movlw	0
  7201  0012D2  6E02               	movwf	(?___xxtofl+1)^0,c
  7202  0012D4  0E00               	movlw	0
  7203  0012D6  6E03               	movwf	(?___xxtofl+2)^0,c
  7204  0012D8  0E00               	movlw	0
  7205  0012DA  6E04               	movwf	(?___xxtofl+3)^0,c
  7206  0012DC  EF01  F00A         	goto	l1327
  7207  0012E0                     l4967:
  7208  0012E0  0E96               	movlw	150
  7209  0012E2  6E0A               	movwf	___xxtofl@exp^0,c
  7210  0012E4  EF7A  F009         	goto	l4971
  7211  0012E8                     l4969:
  7212  0012E8  2A0A               	incf	___xxtofl@exp^0,f,c
  7213  0012EA  90D8               	bcf	status,0,c
  7214  0012EC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7215  0012EE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7216  0012F0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7217  0012F2  320B               	rrcf	___xxtofl@arg^0,f,c
  7218  0012F4                     l4971:
  7219  0012F4  0E00               	movlw	0
  7220  0012F6  140B               	andwf	___xxtofl@arg^0,w,c
  7221  0012F8  6E05               	movwf	??___xxtofl^0,c
  7222  0012FA  0E00               	movlw	0
  7223  0012FC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7224  0012FE  6E06               	movwf	(??___xxtofl+1)^0,c
  7225  001300  0E00               	movlw	0
  7226  001302  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7227  001304  6E07               	movwf	(??___xxtofl+2)^0,c
  7228  001306  0EFE               	movlw	254
  7229  001308  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7230  00130A  6E08               	movwf	(??___xxtofl+3)^0,c
  7231  00130C  5005               	movf	??___xxtofl^0,w,c
  7232  00130E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7233  001310  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7234  001312  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7235  001314  A4D8               	btfss	status,2,c
  7236  001316  EF8F  F009         	goto	u5051
  7237  00131A  EF91  F009         	goto	u5050
  7238  00131E                     u5051:
  7239  00131E  EF74  F009         	goto	l4969
  7240  001322                     u5050:
  7241  001322  EF9F  F009         	goto	l1331
  7242  001326                     l4973:
  7243  001326  2A0A               	incf	___xxtofl@exp^0,f,c
  7244  001328  0E01               	movlw	1
  7245  00132A  260B               	addwf	___xxtofl@arg^0,f,c
  7246  00132C  0E00               	movlw	0
  7247  00132E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7248  001330  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7249  001332  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7250  001334  90D8               	bcf	status,0,c
  7251  001336  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7252  001338  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7253  00133A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7254  00133C  320B               	rrcf	___xxtofl@arg^0,f,c
  7255  00133E                     l1331:
  7256  00133E  0E00               	movlw	0
  7257  001340  140B               	andwf	___xxtofl@arg^0,w,c
  7258  001342  6E05               	movwf	??___xxtofl^0,c
  7259  001344  0E00               	movlw	0
  7260  001346  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7261  001348  6E06               	movwf	(??___xxtofl+1)^0,c
  7262  00134A  0E00               	movlw	0
  7263  00134C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7264  00134E  6E07               	movwf	(??___xxtofl+2)^0,c
  7265  001350  0EFF               	movlw	255
  7266  001352  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7267  001354  6E08               	movwf	(??___xxtofl+3)^0,c
  7268  001356  5005               	movf	??___xxtofl^0,w,c
  7269  001358  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7270  00135A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7271  00135C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7272  00135E  A4D8               	btfss	status,2,c
  7273  001360  EFB4  F009         	goto	u5061
  7274  001364  EFB6  F009         	goto	u5060
  7275  001368                     u5061:
  7276  001368  EF93  F009         	goto	l4973
  7277  00136C                     u5060:
  7278  00136C  EFBE  F009         	goto	l4981
  7279  001370                     l4979:
  7280  001370  060A               	decf	___xxtofl@exp^0,f,c
  7281  001372  90D8               	bcf	status,0,c
  7282  001374  360B               	rlcf	___xxtofl@arg^0,f,c
  7283  001376  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7284  001378  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7285  00137A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7286  00137C                     l4981:
  7287  00137C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7288  00137E  EFC3  F009         	goto	u5071
  7289  001382  EFC5  F009         	goto	u5070
  7290  001386                     u5071:
  7291  001386  EFCD  F009         	goto	l1338
  7292  00138A                     u5070:
  7293  00138A  0E02               	movlw	2
  7294  00138C  600A               	cpfslt	___xxtofl@exp^0,c
  7295  00138E  EFCB  F009         	goto	u5081
  7296  001392  EFCD  F009         	goto	u5080
  7297  001396                     u5081:
  7298  001396  EFB8  F009         	goto	l4979
  7299  00139A                     u5080:
  7300  00139A                     l1338:
  7301  00139A  B00A               	btfsc	___xxtofl@exp^0,0,c
  7302  00139C  EFD2  F009         	goto	u5091
  7303  0013A0  EFD4  F009         	goto	u5090
  7304  0013A4                     u5091:
  7305  0013A4  EFD5  F009         	goto	l4987
  7306  0013A8                     u5090:
  7307  0013A8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7308  0013AA                     l4987:
  7309  0013AA  90D8               	bcf	status,0,c
  7310  0013AC  320A               	rrcf	___xxtofl@exp^0,f,c
  7311  0013AE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7312  0013B2  6A06               	clrf	(??___xxtofl+1)^0,c
  7313  0013B4  6A07               	clrf	(??___xxtofl+2)^0,c
  7314  0013B6  6A08               	clrf	(??___xxtofl+3)^0,c
  7315  0013B8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7316  0013BC  6A07               	clrf	(??___xxtofl+2)^0,c
  7317  0013BE  6A06               	clrf	(??___xxtofl+1)^0,c
  7318  0013C0  6A05               	clrf	??___xxtofl^0,c
  7319  0013C2  5005               	movf	??___xxtofl^0,w,c
  7320  0013C4  120B               	iorwf	___xxtofl@arg^0,f,c
  7321  0013C6  5006               	movf	(??___xxtofl+1)^0,w,c
  7322  0013C8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7323  0013CA  5007               	movf	(??___xxtofl+2)^0,w,c
  7324  0013CC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7325  0013CE  5008               	movf	(??___xxtofl+3)^0,w,c
  7326  0013D0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7327  0013D2  5009               	movf	___xxtofl@sign^0,w,c
  7328  0013D4  B4D8               	btfsc	status,2,c
  7329  0013D6  EFEF  F009         	goto	u5101
  7330  0013DA  EFF1  F009         	goto	u5100
  7331  0013DE                     u5101:
  7332  0013DE  EFF9  F009         	goto	l4997
  7333  0013E2                     u5100:
  7334  0013E2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7335  0013E4  EFF8  F009         	goto	u5110
  7336  0013E8  EFF6  F009         	goto	u5111
  7337  0013EC                     u5111:
  7338  0013EC  EFF9  F009         	goto	l4997
  7339  0013F0                     u5110:
  7340  0013F0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7341  0013F2                     l4997:
  7342  0013F2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7343  0013F6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7344  0013FA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7345  0013FE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7346  001402                     l1327:
  7347  001402  0012               	return		;funcret
  7348  001404                     __end_of___xxtofl:
  7349                           	callstack 0
  7350                           
  7351 ;; *************** function ___fltol *****************
  7352 ;; Defined at:
  7353 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  f1              4    0[COMRAM] unsigned char 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  exp1            1    9[COMRAM] unsigned char 
  7358 ;;  sign1           1    8[COMRAM] unsigned char 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  4    0[COMRAM] long 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7368 ;;      Params:         4       0       0       0       0       0       0       0       0
  7369 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7370 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7371 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7372 ;;Total ram usage:       10 bytes
  7373 ;; Hardware stack levels used: 1
  7374 ;; Hardware stack levels required when called: 1
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_UART_Begin
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	text16
  7383  002258                     __ptext16:
  7384                           	callstack 0
  7385  002258                     ___fltol:
  7386                           	callstack 28
  7387  002258  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7388  00225A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7389  00225C  6E0A               	movwf	___fltol@exp1^0,c
  7390  00225E  500A               	movf	___fltol@exp1^0,w,c
  7391  002260  A4D8               	btfss	status,2,c
  7392  002262  EF35  F011         	goto	u4951
  7393  002266  EF37  F011         	goto	u4950
  7394  00226A                     u4951:
  7395  00226A  EF41  F011         	goto	l4917
  7396  00226E                     u4950:
  7397  00226E                     l4913:
  7398  00226E  0E00               	movlw	0
  7399  002270  6E01               	movwf	?___fltol^0,c
  7400  002272  0E00               	movlw	0
  7401  002274  6E02               	movwf	(?___fltol+1)^0,c
  7402  002276  0E00               	movlw	0
  7403  002278  6E03               	movwf	(?___fltol+2)^0,c
  7404  00227A  0E00               	movlw	0
  7405  00227C  6E04               	movwf	(?___fltol+3)^0,c
  7406  00227E  EFAE  F011         	goto	l966
  7407  002282                     l4917:
  7408  002282  C001  F005         	movff	___fltol@f1,??___fltol
  7409  002286  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7410  00228A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7411  00228E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7412  002292  0E20               	movlw	32
  7413  002294  EF51  F011         	goto	u4960
  7414  002298                     u4965:
  7415  002298  90D8               	bcf	status,0,c
  7416  00229A  3208               	rrcf	(??___fltol+3)^0,f,c
  7417  00229C  3207               	rrcf	(??___fltol+2)^0,f,c
  7418  00229E  3206               	rrcf	(??___fltol+1)^0,f,c
  7419  0022A0  3205               	rrcf	??___fltol^0,f,c
  7420  0022A2                     u4960:
  7421  0022A2  2EE8               	decfsz	wreg,f,c
  7422  0022A4  EF4C  F011         	goto	u4965
  7423  0022A8  5005               	movf	??___fltol^0,w,c
  7424  0022AA  6E09               	movwf	___fltol@sign1^0,c
  7425  0022AC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7426  0022AE  0EFF               	movlw	255
  7427  0022B0  1601               	andwf	___fltol@f1^0,f,c
  7428  0022B2  0EFF               	movlw	255
  7429  0022B4  1602               	andwf	(___fltol@f1+1)^0,f,c
  7430  0022B6  0EFF               	movlw	255
  7431  0022B8  1603               	andwf	(___fltol@f1+2)^0,f,c
  7432  0022BA  0E00               	movlw	0
  7433  0022BC  1604               	andwf	(___fltol@f1+3)^0,f,c
  7434  0022BE  0E96               	movlw	150
  7435  0022C0  5E0A               	subwf	___fltol@exp1^0,f,c
  7436  0022C2  BE0A               	btfsc	___fltol@exp1^0,7,c
  7437  0022C4  EF68  F011         	goto	u4970
  7438  0022C8  EF66  F011         	goto	u4971
  7439  0022CC                     u4971:
  7440  0022CC  EF7E  F011         	goto	l4937
  7441  0022D0                     u4970:
  7442  0022D0  500A               	movf	___fltol@exp1^0,w,c
  7443  0022D2  0A80               	xorlw	128
  7444  0022D4  0F97               	addlw	151
  7445  0022D6  B0D8               	btfsc	status,0,c
  7446  0022D8  EF70  F011         	goto	u4981
  7447  0022DC  EF72  F011         	goto	u4980
  7448  0022E0                     u4981:
  7449  0022E0  EF74  F011         	goto	l4933
  7450  0022E4                     u4980:
  7451  0022E4  EF37  F011         	goto	l4913
  7452  0022E8                     l4933:
  7453  0022E8  90D8               	bcf	status,0,c
  7454  0022EA  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7455  0022EC  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7456  0022EE  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7457  0022F0  3201               	rrcf	___fltol@f1^0,f,c
  7458  0022F2  3E0A               	incfsz	___fltol@exp1^0,f,c
  7459  0022F4  EF74  F011         	goto	l4933
  7460  0022F8  EF96  F011         	goto	l4947
  7461  0022FC                     l4937:
  7462  0022FC  0E1F               	movlw	31
  7463  0022FE  640A               	cpfsgt	___fltol@exp1^0,c
  7464  002300  EF84  F011         	goto	u4991
  7465  002304  EF86  F011         	goto	u4990
  7466  002308                     u4991:
  7467  002308  EF8E  F011         	goto	l4945
  7468  00230C                     u4990:
  7469  00230C  EF37  F011         	goto	l4913
  7470  002310                     l4943:
  7471  002310  90D8               	bcf	status,0,c
  7472  002312  3601               	rlcf	___fltol@f1^0,f,c
  7473  002314  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7474  002316  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7475  002318  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7476  00231A  060A               	decf	___fltol@exp1^0,f,c
  7477  00231C                     l4945:
  7478  00231C  500A               	movf	___fltol@exp1^0,w,c
  7479  00231E  A4D8               	btfss	status,2,c
  7480  002320  EF94  F011         	goto	u5001
  7481  002324  EF96  F011         	goto	u5000
  7482  002328                     u5001:
  7483  002328  EF88  F011         	goto	l4943
  7484  00232C                     u5000:
  7485  00232C                     l4947:
  7486  00232C  5009               	movf	___fltol@sign1^0,w,c
  7487  00232E  B4D8               	btfsc	status,2,c
  7488  002330  EF9C  F011         	goto	u5011
  7489  002334  EF9E  F011         	goto	u5010
  7490  002338                     u5011:
  7491  002338  EFA6  F011         	goto	l4951
  7492  00233C                     u5010:
  7493  00233C  1E04               	comf	(___fltol@f1+3)^0,f,c
  7494  00233E  1E03               	comf	(___fltol@f1+2)^0,f,c
  7495  002340  1E02               	comf	(___fltol@f1+1)^0,f,c
  7496  002342  6C01               	negf	___fltol@f1^0,c
  7497  002344  0E00               	movlw	0
  7498  002346  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7499  002348  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7500  00234A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7501  00234C                     l4951:
  7502  00234C  C001  F001         	movff	___fltol@f1,?___fltol
  7503  002350  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7504  002354  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7505  002358  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7506  00235C                     l966:
  7507  00235C  0012               	return		;funcret
  7508  00235E                     __end_of___fltol:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function ___flsub *****************
  7512 ;; Defined at:
  7513 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  b               4   16[COMRAM] long 
  7516 ;;  a               4   20[COMRAM] long 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  4   16[COMRAM] long 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7528 ;;      Params:         8       0       0       0       0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7531 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7532 ;;Total ram usage:        8 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; Hardware stack levels required when called: 2
  7535 ;; This function calls:
  7536 ;;		___fladd
  7537 ;; This function is called by:
  7538 ;;		_UART_Begin
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text17
  7543  003584                     __ptext17:
  7544                           	callstack 0
  7545  003584                     ___flsub:
  7546                           	callstack 27
  7547  003584  0E00               	movlw	0
  7548  003586  1A15               	xorwf	___flsub@a^0,f,c
  7549  003588  0E00               	movlw	0
  7550  00358A  1A16               	xorwf	(___flsub@a+1)^0,f,c
  7551  00358C  0E00               	movlw	0
  7552  00358E  1A17               	xorwf	(___flsub@a+2)^0,f,c
  7553  003590  0E80               	movlw	128
  7554  003592  1A18               	xorwf	(___flsub@a+3)^0,f,c
  7555  003594  C011  F001         	movff	___flsub@b,___fladd@b
  7556  003598  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  7557  00359C  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  7558  0035A0  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  7559  0035A4  C015  F005         	movff	___flsub@a,___fladd@a
  7560  0035A8  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  7561  0035AC  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  7562  0035B0  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  7563  0035B4  EC09  F000         	call	___fladd	;wreg free
  7564  0035B8  C001  F011         	movff	?___fladd,?___flsub
  7565  0035BC  C002  F012         	movff	?___fladd+1,?___flsub+1
  7566  0035C0  C003  F013         	movff	?___fladd+2,?___flsub+2
  7567  0035C4  C004  F014         	movff	?___fladd+3,?___flsub+3
  7568  0035C8  0012               	return		;funcret
  7569  0035CA                     __end_of___flsub:
  7570                           	callstack 0
  7571                           
  7572 ;; *************** function ___fladd *****************
  7573 ;; Defined at:
  7574 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  b               4    0[COMRAM] long 
  7577 ;;  a               4    4[COMRAM] long 
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  grs             1   15[COMRAM] unsigned char 
  7580 ;;  bexp            1   14[COMRAM] unsigned char 
  7581 ;;  aexp            1   13[COMRAM] unsigned char 
  7582 ;;  signs           1   12[COMRAM] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  4    0[COMRAM] unsigned char 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7592 ;;      Params:         8       0       0       0       0       0       0       0       0
  7593 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7594 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7595 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7596 ;;Total ram usage:       16 bytes
  7597 ;; Hardware stack levels used: 1
  7598 ;; Hardware stack levels required when called: 1
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_UART_Begin
  7603 ;;		___flsub
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text18
  7608  000012                     __ptext18:
  7609                           	callstack 0
  7610  000012                     ___fladd:
  7611                           	callstack 27
  7612  000012  5004               	movf	(___fladd@b+3)^0,w,c
  7613  000014  0B80               	andlw	128
  7614  000016  6E0D               	movwf	___fladd@signs^0,c
  7615  000018  5004               	movf	(___fladd@b+3)^0,w,c
  7616  00001A  2404               	addwf	(___fladd@b+3)^0,w,c
  7617  00001C  6E0F               	movwf	___fladd@bexp^0,c
  7618  00001E  AE03               	btfss	(___fladd@b+2)^0,7,c
  7619  000020  EF14  F000         	goto	u3991
  7620  000024  EF16  F000         	goto	u3990
  7621  000028                     u3991:
  7622  000028  EF17  F000         	goto	l4233
  7623  00002C                     u3990:
  7624  00002C  800F               	bsf	___fladd@bexp^0,0,c
  7625  00002E                     l4233:
  7626  00002E  500F               	movf	___fladd@bexp^0,w,c
  7627  000030  B4D8               	btfsc	status,2,c
  7628  000032  EF1D  F000         	goto	u4001
  7629  000036  EF1F  F000         	goto	u4000
  7630  00003A                     u4001:
  7631  00003A  EF34  F000         	goto	l4243
  7632  00003E                     u4000:
  7633  00003E  280F               	incf	___fladd@bexp^0,w,c
  7634  000040  A4D8               	btfss	status,2,c
  7635  000042  EF25  F000         	goto	u4011
  7636  000046  EF27  F000         	goto	u4010
  7637  00004A                     u4011:
  7638  00004A  EF2F  F000         	goto	l4239
  7639  00004E                     u4010:
  7640  00004E  0E00               	movlw	0
  7641  000050  6E01               	movwf	___fladd@b^0,c
  7642  000052  0E00               	movlw	0
  7643  000054  6E02               	movwf	(___fladd@b+1)^0,c
  7644  000056  0E00               	movlw	0
  7645  000058  6E03               	movwf	(___fladd@b+2)^0,c
  7646  00005A  0E00               	movlw	0
  7647  00005C  6E04               	movwf	(___fladd@b+3)^0,c
  7648  00005E                     l4239:
  7649  00005E  8E03               	bsf	(___fladd@b+2)^0,7,c
  7650  000060  0E00               	movlw	0
  7651  000062  6E04               	movwf	(___fladd@b+3)^0,c
  7652  000064  EF3C  F000         	goto	l4245
  7653  000068                     l4243:
  7654  000068  0E00               	movlw	0
  7655  00006A  6E01               	movwf	___fladd@b^0,c
  7656  00006C  0E00               	movlw	0
  7657  00006E  6E02               	movwf	(___fladd@b+1)^0,c
  7658  000070  0E00               	movlw	0
  7659  000072  6E03               	movwf	(___fladd@b+2)^0,c
  7660  000074  0E00               	movlw	0
  7661  000076  6E04               	movwf	(___fladd@b+3)^0,c
  7662  000078                     l4245:
  7663  000078  5008               	movf	(___fladd@a+3)^0,w,c
  7664  00007A  0B80               	andlw	128
  7665  00007C  6E0E               	movwf	___fladd@aexp^0,c
  7666  00007E  500D               	movf	___fladd@signs^0,w,c
  7667  000080  180E               	xorwf	___fladd@aexp^0,w,c
  7668  000082  B4D8               	btfsc	status,2,c
  7669  000084  EF46  F000         	goto	u4021
  7670  000088  EF48  F000         	goto	u4020
  7671  00008C                     u4021:
  7672  00008C  EF49  F000         	goto	l4251
  7673  000090                     u4020:
  7674  000090  8C0D               	bsf	___fladd@signs^0,6,c
  7675  000092                     l4251:
  7676  000092  5008               	movf	(___fladd@a+3)^0,w,c
  7677  000094  2408               	addwf	(___fladd@a+3)^0,w,c
  7678  000096  6E0E               	movwf	___fladd@aexp^0,c
  7679  000098  AE07               	btfss	(___fladd@a+2)^0,7,c
  7680  00009A  EF51  F000         	goto	u4031
  7681  00009E  EF53  F000         	goto	u4030
  7682  0000A2                     u4031:
  7683  0000A2  EF54  F000         	goto	l4257
  7684  0000A6                     u4030:
  7685  0000A6  800E               	bsf	___fladd@aexp^0,0,c
  7686  0000A8                     l4257:
  7687  0000A8  500E               	movf	___fladd@aexp^0,w,c
  7688  0000AA  B4D8               	btfsc	status,2,c
  7689  0000AC  EF5A  F000         	goto	u4041
  7690  0000B0  EF5C  F000         	goto	u4040
  7691  0000B4                     u4041:
  7692  0000B4  EF71  F000         	goto	l4267
  7693  0000B8                     u4040:
  7694  0000B8  280E               	incf	___fladd@aexp^0,w,c
  7695  0000BA  A4D8               	btfss	status,2,c
  7696  0000BC  EF62  F000         	goto	u4051
  7697  0000C0  EF64  F000         	goto	u4050
  7698  0000C4                     u4051:
  7699  0000C4  EF6C  F000         	goto	l4263
  7700  0000C8                     u4050:
  7701  0000C8  0E00               	movlw	0
  7702  0000CA  6E05               	movwf	___fladd@a^0,c
  7703  0000CC  0E00               	movlw	0
  7704  0000CE  6E06               	movwf	(___fladd@a+1)^0,c
  7705  0000D0  0E00               	movlw	0
  7706  0000D2  6E07               	movwf	(___fladd@a+2)^0,c
  7707  0000D4  0E00               	movlw	0
  7708  0000D6  6E08               	movwf	(___fladd@a+3)^0,c
  7709  0000D8                     l4263:
  7710  0000D8  8E07               	bsf	(___fladd@a+2)^0,7,c
  7711  0000DA  0E00               	movlw	0
  7712  0000DC  6E08               	movwf	(___fladd@a+3)^0,c
  7713  0000DE  EF79  F000         	goto	l4269
  7714  0000E2                     l4267:
  7715  0000E2  0E00               	movlw	0
  7716  0000E4  6E05               	movwf	___fladd@a^0,c
  7717  0000E6  0E00               	movlw	0
  7718  0000E8  6E06               	movwf	(___fladd@a+1)^0,c
  7719  0000EA  0E00               	movlw	0
  7720  0000EC  6E07               	movwf	(___fladd@a+2)^0,c
  7721  0000EE  0E00               	movlw	0
  7722  0000F0  6E08               	movwf	(___fladd@a+3)^0,c
  7723  0000F2                     l4269:
  7724  0000F2  500F               	movf	___fladd@bexp^0,w,c
  7725  0000F4  5C0E               	subwf	___fladd@aexp^0,w,c
  7726  0000F6  B0D8               	btfsc	status,0,c
  7727  0000F8  EF80  F000         	goto	u4061
  7728  0000FC  EF82  F000         	goto	u4060
  7729  000100                     u4061:
  7730  000100  EFA9  F000         	goto	l4305
  7731  000104                     u4060:
  7732  000104  AC0D               	btfss	___fladd@signs^0,6,c
  7733  000106  EF87  F000         	goto	u4071
  7734  00010A  EF89  F000         	goto	u4070
  7735  00010E                     u4071:
  7736  00010E  EF8B  F000         	goto	l4275
  7737  000112                     u4070:
  7738  000112  0E80               	movlw	128
  7739  000114  1A0D               	xorwf	___fladd@signs^0,f,c
  7740  000116                     l4275:
  7741  000116  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7742  00011A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7743  00011E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7744  000122  C001  F010         	movff	___fladd@b,___fladd@grs
  7745  000126  C005  F001         	movff	___fladd@a,___fladd@b
  7746  00012A  C010  F005         	movff	___fladd@grs,___fladd@a
  7747  00012E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7748  000132  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7749  000136  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7750  00013A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7751  00013E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7752  000142  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7753  000146  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7754  00014A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7755  00014E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7756  000152                     l4305:
  7757  000152  0E00               	movlw	0
  7758  000154  6E10               	movwf	___fladd@grs^0,c
  7759  000156  500F               	movf	___fladd@bexp^0,w,c
  7760  000158  C00E  F009         	movff	___fladd@aexp,??___fladd
  7761  00015C  6A0A               	clrf	(??___fladd+1)^0,c
  7762  00015E  5E09               	subwf	??___fladd^0,f,c
  7763  000160  0E00               	movlw	0
  7764  000162  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7765  000164  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7766  000166  EFBE  F000         	goto	u4081
  7767  00016A  500A               	movf	(??___fladd+1)^0,w,c
  7768  00016C  E109               	bnz	u4080
  7769  00016E  0E1A               	movlw	26
  7770  000170  5C09               	subwf	??___fladd^0,w,c
  7771  000172  A0D8               	btfss	status,0,c
  7772  000174  EFBE  F000         	goto	u4081
  7773  000178  EFC0  F000         	goto	u4080
  7774  00017C                     u4081:
  7775  00017C  EFF7  F000         	goto	l1198
  7776  000180                     u4080:
  7777  000180  5001               	movf	___fladd@b^0,w,c
  7778  000182  1002               	iorwf	(___fladd@b+1)^0,w,c
  7779  000184  1003               	iorwf	(___fladd@b+2)^0,w,c
  7780  000186  1004               	iorwf	(___fladd@b+3)^0,w,c
  7781  000188  A4D8               	btfss	status,2,c
  7782  00018A  EFC9  F000         	goto	u4091
  7783  00018E  EFCC  F000         	goto	u4090
  7784  000192                     u4091:
  7785  000192  0E01               	movlw	1
  7786  000194  EFCD  F000         	goto	u4100
  7787  000198                     u4090:
  7788  000198  0E00               	movlw	0
  7789  00019A                     u4100:
  7790  00019A  6E10               	movwf	___fladd@grs^0,c
  7791  00019C  0E00               	movlw	0
  7792  00019E  6E01               	movwf	___fladd@b^0,c
  7793  0001A0  0E00               	movlw	0
  7794  0001A2  6E02               	movwf	(___fladd@b+1)^0,c
  7795  0001A4  0E00               	movlw	0
  7796  0001A6  6E03               	movwf	(___fladd@b+2)^0,c
  7797  0001A8  0E00               	movlw	0
  7798  0001AA  6E04               	movwf	(___fladd@b+3)^0,c
  7799  0001AC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7800  0001B0  EF00  F001         	goto	l1197
  7801  0001B4                     l1199:
  7802  0001B4  A010               	btfss	___fladd@grs^0,0,c
  7803  0001B6  EFDF  F000         	goto	u4111
  7804  0001BA  EFE1  F000         	goto	u4110
  7805  0001BE                     u4111:
  7806  0001BE  EFE7  F000         	goto	l4317
  7807  0001C2                     u4110:
  7808  0001C2  90D8               	bcf	status,0,c
  7809  0001C4  3010               	rrcf	___fladd@grs^0,w,c
  7810  0001C6  0901               	iorlw	1
  7811  0001C8  6E10               	movwf	___fladd@grs^0,c
  7812  0001CA  EFE9  F000         	goto	l4319
  7813  0001CE                     l4317:
  7814  0001CE  90D8               	bcf	status,0,c
  7815  0001D0  3210               	rrcf	___fladd@grs^0,f,c
  7816  0001D2                     l4319:
  7817  0001D2  A001               	btfss	___fladd@b^0,0,c
  7818  0001D4  EFEE  F000         	goto	u4121
  7819  0001D8  EFF0  F000         	goto	u4120
  7820  0001DC                     u4121:
  7821  0001DC  EFF1  F000         	goto	l4323
  7822  0001E0                     u4120:
  7823  0001E0  8E10               	bsf	___fladd@grs^0,7,c
  7824  0001E2                     l4323:
  7825  0001E2  3404               	rlcf	(___fladd@b+3)^0,w,c
  7826  0001E4  3204               	rrcf	(___fladd@b+3)^0,f,c
  7827  0001E6  3203               	rrcf	(___fladd@b+2)^0,f,c
  7828  0001E8  3202               	rrcf	(___fladd@b+1)^0,f,c
  7829  0001EA  3201               	rrcf	___fladd@b^0,f,c
  7830  0001EC  2A0F               	incf	___fladd@bexp^0,f,c
  7831  0001EE                     l1198:
  7832  0001EE  500E               	movf	___fladd@aexp^0,w,c
  7833  0001F0  5C0F               	subwf	___fladd@bexp^0,w,c
  7834  0001F2  A0D8               	btfss	status,0,c
  7835  0001F4  EFFE  F000         	goto	u4131
  7836  0001F8  EF00  F001         	goto	u4130
  7837  0001FC                     u4131:
  7838  0001FC  EFDA  F000         	goto	l1199
  7839  000200                     u4130:
  7840  000200                     l1197:
  7841  000200  BC0D               	btfsc	___fladd@signs^0,6,c
  7842  000202  EF05  F001         	goto	u4141
  7843  000206  EF07  F001         	goto	u4140
  7844  00020A                     u4141:
  7845  00020A  EF47  F001         	goto	l4351
  7846  00020E                     u4140:
  7847  00020E  500F               	movf	___fladd@bexp^0,w,c
  7848  000210  A4D8               	btfss	status,2,c
  7849  000212  EF0D  F001         	goto	u4151
  7850  000216  EF0F  F001         	goto	u4150
  7851  00021A                     u4151:
  7852  00021A  EF19  F001         	goto	l4333
  7853  00021E                     u4150:
  7854  00021E  0E00               	movlw	0
  7855  000220  6E01               	movwf	?___fladd^0,c
  7856  000222  0E00               	movlw	0
  7857  000224  6E02               	movwf	(?___fladd+1)^0,c
  7858  000226  0E00               	movlw	0
  7859  000228  6E03               	movwf	(?___fladd+2)^0,c
  7860  00022A  0E00               	movlw	0
  7861  00022C  6E04               	movwf	(?___fladd+3)^0,c
  7862  00022E  EF68  F002         	goto	l1206
  7863  000232                     l4333:
  7864  000232  5005               	movf	___fladd@a^0,w,c
  7865  000234  2601               	addwf	___fladd@b^0,f,c
  7866  000236  5006               	movf	(___fladd@a+1)^0,w,c
  7867  000238  2202               	addwfc	(___fladd@b+1)^0,f,c
  7868  00023A  5007               	movf	(___fladd@a+2)^0,w,c
  7869  00023C  2203               	addwfc	(___fladd@b+2)^0,f,c
  7870  00023E  5008               	movf	(___fladd@a+3)^0,w,c
  7871  000240  2204               	addwfc	(___fladd@b+3)^0,f,c
  7872  000242  A004               	btfss	(___fladd@b+3)^0,0,c
  7873  000244  EF26  F001         	goto	u4161
  7874  000248  EF28  F001         	goto	u4160
  7875  00024C                     u4161:
  7876  00024C  EFD4  F001         	goto	l4387
  7877  000250                     u4160:
  7878  000250  A010               	btfss	___fladd@grs^0,0,c
  7879  000252  EF2D  F001         	goto	u4171
  7880  000256  EF2F  F001         	goto	u4170
  7881  00025A                     u4171:
  7882  00025A  EF35  F001         	goto	l4341
  7883  00025E                     u4170:
  7884  00025E  90D8               	bcf	status,0,c
  7885  000260  3010               	rrcf	___fladd@grs^0,w,c
  7886  000262  0901               	iorlw	1
  7887  000264  6E10               	movwf	___fladd@grs^0,c
  7888  000266  EF37  F001         	goto	l4343
  7889  00026A                     l4341:
  7890  00026A  90D8               	bcf	status,0,c
  7891  00026C  3210               	rrcf	___fladd@grs^0,f,c
  7892  00026E                     l4343:
  7893  00026E  A001               	btfss	___fladd@b^0,0,c
  7894  000270  EF3C  F001         	goto	u4181
  7895  000274  EF3E  F001         	goto	u4180
  7896  000278                     u4181:
  7897  000278  EF3F  F001         	goto	l4347
  7898  00027C                     u4180:
  7899  00027C  8E10               	bsf	___fladd@grs^0,7,c
  7900  00027E                     l4347:
  7901  00027E  3404               	rlcf	(___fladd@b+3)^0,w,c
  7902  000280  3204               	rrcf	(___fladd@b+3)^0,f,c
  7903  000282  3203               	rrcf	(___fladd@b+2)^0,f,c
  7904  000284  3202               	rrcf	(___fladd@b+1)^0,f,c
  7905  000286  3201               	rrcf	___fladd@b^0,f,c
  7906  000288  2A0F               	incf	___fladd@bexp^0,f,c
  7907  00028A  EFD4  F001         	goto	l4387
  7908  00028E                     l4351:
  7909  00028E  5005               	movf	___fladd@a^0,w,c
  7910  000290  5C01               	subwf	___fladd@b^0,w,c
  7911  000292  5006               	movf	(___fladd@a+1)^0,w,c
  7912  000294  5802               	subwfb	(___fladd@b+1)^0,w,c
  7913  000296  5007               	movf	(___fladd@a+2)^0,w,c
  7914  000298  5803               	subwfb	(___fladd@b+2)^0,w,c
  7915  00029A  5004               	movf	(___fladd@b+3)^0,w,c
  7916  00029C  0A80               	xorlw	128
  7917  00029E  6E09               	movwf	??___fladd^0,c
  7918  0002A0  5008               	movf	(___fladd@a+3)^0,w,c
  7919  0002A2  0A80               	xorlw	128
  7920  0002A4  5809               	subwfb	??___fladd^0,w,c
  7921  0002A6  B0D8               	btfsc	status,0,c
  7922  0002A8  EF58  F001         	goto	u4191
  7923  0002AC  EF5A  F001         	goto	u4190
  7924  0002B0                     u4191:
  7925  0002B0  EF85  F001         	goto	l4361
  7926  0002B4                     u4190:
  7927  0002B4  5001               	movf	___fladd@b^0,w,c
  7928  0002B6  5C05               	subwf	___fladd@a^0,w,c
  7929  0002B8  6E09               	movwf	??___fladd^0,c
  7930  0002BA  5002               	movf	(___fladd@b+1)^0,w,c
  7931  0002BC  5806               	subwfb	(___fladd@a+1)^0,w,c
  7932  0002BE  6E0A               	movwf	(??___fladd+1)^0,c
  7933  0002C0  5003               	movf	(___fladd@b+2)^0,w,c
  7934  0002C2  5807               	subwfb	(___fladd@a+2)^0,w,c
  7935  0002C4  6E0B               	movwf	(??___fladd+2)^0,c
  7936  0002C6  5004               	movf	(___fladd@b+3)^0,w,c
  7937  0002C8  5808               	subwfb	(___fladd@a+3)^0,w,c
  7938  0002CA  6E0C               	movwf	(??___fladd+3)^0,c
  7939  0002CC  0EFF               	movlw	255
  7940  0002CE  2409               	addwf	??___fladd^0,w,c
  7941  0002D0  6E01               	movwf	___fladd@b^0,c
  7942  0002D2  0EFF               	movlw	255
  7943  0002D4  200A               	addwfc	(??___fladd+1)^0,w,c
  7944  0002D6  6E02               	movwf	(___fladd@b+1)^0,c
  7945  0002D8  0EFF               	movlw	255
  7946  0002DA  200B               	addwfc	(??___fladd+2)^0,w,c
  7947  0002DC  6E03               	movwf	(___fladd@b+2)^0,c
  7948  0002DE  0EFF               	movlw	255
  7949  0002E0  200C               	addwfc	(??___fladd+3)^0,w,c
  7950  0002E2  6E04               	movwf	(___fladd@b+3)^0,c
  7951  0002E4  0E80               	movlw	128
  7952  0002E6  1A0D               	xorwf	___fladd@signs^0,f,c
  7953  0002E8  6C10               	negf	___fladd@grs^0,c
  7954  0002EA  5010               	movf	___fladd@grs^0,w,c
  7955  0002EC  A4D8               	btfss	status,2,c
  7956  0002EE  EF7B  F001         	goto	u4201
  7957  0002F2  EF7D  F001         	goto	u4200
  7958  0002F6                     u4201:
  7959  0002F6  EF8D  F001         	goto	l1214
  7960  0002FA                     u4200:
  7961  0002FA  0E01               	movlw	1
  7962  0002FC  2601               	addwf	___fladd@b^0,f,c
  7963  0002FE  0E00               	movlw	0
  7964  000300  2202               	addwfc	(___fladd@b+1)^0,f,c
  7965  000302  2203               	addwfc	(___fladd@b+2)^0,f,c
  7966  000304  2204               	addwfc	(___fladd@b+3)^0,f,c
  7967  000306  EF8D  F001         	goto	l1214
  7968  00030A                     l4361:
  7969  00030A  5005               	movf	___fladd@a^0,w,c
  7970  00030C  5E01               	subwf	___fladd@b^0,f,c
  7971  00030E  5006               	movf	(___fladd@a+1)^0,w,c
  7972  000310  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7973  000312  5007               	movf	(___fladd@a+2)^0,w,c
  7974  000314  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7975  000316  5008               	movf	(___fladd@a+3)^0,w,c
  7976  000318  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7977  00031A                     l1214:
  7978  00031A  5001               	movf	___fladd@b^0,w,c
  7979  00031C  1002               	iorwf	(___fladd@b+1)^0,w,c
  7980  00031E  1003               	iorwf	(___fladd@b+2)^0,w,c
  7981  000320  1004               	iorwf	(___fladd@b+3)^0,w,c
  7982  000322  A4D8               	btfss	status,2,c
  7983  000324  EF96  F001         	goto	u4211
  7984  000328  EF98  F001         	goto	u4210
  7985  00032C                     u4211:
  7986  00032C  EFCD  F001         	goto	l4385
  7987  000330                     u4210:
  7988  000330  5010               	movf	___fladd@grs^0,w,c
  7989  000332  A4D8               	btfss	status,2,c
  7990  000334  EF9E  F001         	goto	u4221
  7991  000338  EFA0  F001         	goto	u4220
  7992  00033C                     u4221:
  7993  00033C  EFCD  F001         	goto	l4385
  7994  000340                     u4220:
  7995  000340  0E00               	movlw	0
  7996  000342  6E01               	movwf	?___fladd^0,c
  7997  000344  0E00               	movlw	0
  7998  000346  6E02               	movwf	(?___fladd+1)^0,c
  7999  000348  0E00               	movlw	0
  8000  00034A  6E03               	movwf	(?___fladd+2)^0,c
  8001  00034C  0E00               	movlw	0
  8002  00034E  6E04               	movwf	(?___fladd+3)^0,c
  8003  000350  EF68  F002         	goto	l1206
  8004  000354                     l4369:
  8005  000354  90D8               	bcf	status,0,c
  8006  000356  3601               	rlcf	___fladd@b^0,f,c
  8007  000358  3602               	rlcf	(___fladd@b+1)^0,f,c
  8008  00035A  3603               	rlcf	(___fladd@b+2)^0,f,c
  8009  00035C  3604               	rlcf	(___fladd@b+3)^0,f,c
  8010  00035E  AE10               	btfss	___fladd@grs^0,7,c
  8011  000360  EFB4  F001         	goto	u4231
  8012  000364  EFB6  F001         	goto	u4230
  8013  000368                     u4231:
  8014  000368  EFB7  F001         	goto	l4375
  8015  00036C                     u4230:
  8016  00036C  8001               	bsf	___fladd@b^0,0,c
  8017  00036E                     l4375:
  8018  00036E  A010               	btfss	___fladd@grs^0,0,c
  8019  000370  EFBC  F001         	goto	u4241
  8020  000374  EFBE  F001         	goto	u4240
  8021  000378                     u4241:
  8022  000378  EFC2  F001         	goto	l4379
  8023  00037C                     u4240:
  8024  00037C  80D8               	bsf	status,0,c
  8025  00037E  3610               	rlcf	___fladd@grs^0,f,c
  8026  000380  EFC4  F001         	goto	l4381
  8027  000384                     l4379:
  8028  000384  90D8               	bcf	status,0,c
  8029  000386  3610               	rlcf	___fladd@grs^0,f,c
  8030  000388                     l4381:
  8031  000388  500F               	movf	___fladd@bexp^0,w,c
  8032  00038A  B4D8               	btfsc	status,2,c
  8033  00038C  EFCA  F001         	goto	u4251
  8034  000390  EFCC  F001         	goto	u4250
  8035  000394                     u4251:
  8036  000394  EFCD  F001         	goto	l4385
  8037  000398                     u4250:
  8038  000398  060F               	decf	___fladd@bexp^0,f,c
  8039  00039A                     l4385:
  8040  00039A  AE03               	btfss	(___fladd@b+2)^0,7,c
  8041  00039C  EFD2  F001         	goto	u4261
  8042  0003A0  EFD4  F001         	goto	u4260
  8043  0003A4                     u4261:
  8044  0003A4  EFAA  F001         	goto	l4369
  8045  0003A8                     u4260:
  8046  0003A8                     l4387:
  8047  0003A8  0E00               	movlw	0
  8048  0003AA  6E0E               	movwf	___fladd@aexp^0,c
  8049  0003AC  AE10               	btfss	___fladd@grs^0,7,c
  8050  0003AE  EFDB  F001         	goto	u4271
  8051  0003B2  EFDD  F001         	goto	u4270
  8052  0003B6                     u4271:
  8053  0003B6  EFF5  F001         	goto	l1223
  8054  0003BA                     u4270:
  8055  0003BA  C010  F009         	movff	___fladd@grs,??___fladd
  8056  0003BE  0E7F               	movlw	127
  8057  0003C0  1609               	andwf	??___fladd^0,f,c
  8058  0003C2  B4D8               	btfsc	status,2,c
  8059  0003C4  EFE6  F001         	goto	u4281
  8060  0003C8  EFE8  F001         	goto	u4280
  8061  0003CC                     u4281:
  8062  0003CC  EFEC  F001         	goto	l1224
  8063  0003D0                     u4280:
  8064  0003D0                     l4393:
  8065  0003D0  0E01               	movlw	1
  8066  0003D2  6E0E               	movwf	___fladd@aexp^0,c
  8067  0003D4  EFF5  F001         	goto	l1223
  8068  0003D8                     l1224:
  8069  0003D8  A001               	btfss	___fladd@b^0,0,c
  8070  0003DA  EFF1  F001         	goto	u4291
  8071  0003DE  EFF3  F001         	goto	u4290
  8072  0003E2                     u4291:
  8073  0003E2  EFF5  F001         	goto	l1223
  8074  0003E6                     u4290:
  8075  0003E6  EFE8  F001         	goto	l4393
  8076  0003EA                     l1223:
  8077  0003EA  500E               	movf	___fladd@aexp^0,w,c
  8078  0003EC  B4D8               	btfsc	status,2,c
  8079  0003EE  EFFB  F001         	goto	u4301
  8080  0003F2  EFFD  F001         	goto	u4300
  8081  0003F6                     u4301:
  8082  0003F6  EF28  F002         	goto	l4405
  8083  0003FA                     u4300:
  8084  0003FA  0E01               	movlw	1
  8085  0003FC  2601               	addwf	___fladd@b^0,f,c
  8086  0003FE  0E00               	movlw	0
  8087  000400  2202               	addwfc	(___fladd@b+1)^0,f,c
  8088  000402  2203               	addwfc	(___fladd@b+2)^0,f,c
  8089  000404  2204               	addwfc	(___fladd@b+3)^0,f,c
  8090  000406  A004               	btfss	(___fladd@b+3)^0,0,c
  8091  000408  EF08  F002         	goto	u4311
  8092  00040C  EF0A  F002         	goto	u4310
  8093  000410                     u4311:
  8094  000410  EF28  F002         	goto	l4405
  8095  000414                     u4310:
  8096  000414  C001  F009         	movff	___fladd@b,??___fladd
  8097  000418  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8098  00041C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8099  000420  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8100  000424  340C               	rlcf	(??___fladd+3)^0,w,c
  8101  000426  320C               	rrcf	(??___fladd+3)^0,f,c
  8102  000428  320B               	rrcf	(??___fladd+2)^0,f,c
  8103  00042A  320A               	rrcf	(??___fladd+1)^0,f,c
  8104  00042C  3209               	rrcf	??___fladd^0,f,c
  8105  00042E  C009  F001         	movff	??___fladd,___fladd@b
  8106  000432  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8107  000436  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8108  00043A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8109  00043E  280F               	incf	___fladd@bexp^0,w,c
  8110  000440  B4D8               	btfsc	status,2,c
  8111  000442  EF25  F002         	goto	u4321
  8112  000446  EF27  F002         	goto	u4320
  8113  00044A                     u4321:
  8114  00044A  EF28  F002         	goto	l4405
  8115  00044E                     u4320:
  8116  00044E  2A0F               	incf	___fladd@bexp^0,f,c
  8117  000450                     l4405:
  8118  000450  280F               	incf	___fladd@bexp^0,w,c
  8119  000452  B4D8               	btfsc	status,2,c
  8120  000454  EF2E  F002         	goto	u4331
  8121  000458  EF30  F002         	goto	u4330
  8122  00045C                     u4331:
  8123  00045C  EF38  F002         	goto	l4409
  8124  000460                     u4330:
  8125  000460  500F               	movf	___fladd@bexp^0,w,c
  8126  000462  A4D8               	btfss	status,2,c
  8127  000464  EF36  F002         	goto	u4341
  8128  000468  EF38  F002         	goto	u4340
  8129  00046C                     u4341:
  8130  00046C  EF4A  F002         	goto	l4413
  8131  000470                     u4340:
  8132  000470                     l4409:
  8133  000470  0E00               	movlw	0
  8134  000472  6E01               	movwf	___fladd@b^0,c
  8135  000474  0E00               	movlw	0
  8136  000476  6E02               	movwf	(___fladd@b+1)^0,c
  8137  000478  0E00               	movlw	0
  8138  00047A  6E03               	movwf	(___fladd@b+2)^0,c
  8139  00047C  0E00               	movlw	0
  8140  00047E  6E04               	movwf	(___fladd@b+3)^0,c
  8141  000480  500F               	movf	___fladd@bexp^0,w,c
  8142  000482  A4D8               	btfss	status,2,c
  8143  000484  EF46  F002         	goto	u4351
  8144  000488  EF48  F002         	goto	u4350
  8145  00048C                     u4351:
  8146  00048C  EF4A  F002         	goto	l4413
  8147  000490                     u4350:
  8148  000490  0E00               	movlw	0
  8149  000492  6E0D               	movwf	___fladd@signs^0,c
  8150  000494                     l4413:
  8151  000494  A00F               	btfss	___fladd@bexp^0,0,c
  8152  000496  EF4F  F002         	goto	u4361
  8153  00049A  EF51  F002         	goto	u4360
  8154  00049E                     u4361:
  8155  00049E  EF54  F002         	goto	l4417
  8156  0004A2                     u4360:
  8157  0004A2  8E03               	bsf	(___fladd@b+2)^0,7,c
  8158  0004A4  EF55  F002         	goto	l4419
  8159  0004A8                     l4417:
  8160  0004A8  9E03               	bcf	(___fladd@b+2)^0,7,c
  8161  0004AA                     l4419:
  8162  0004AA  90D8               	bcf	status,0,c
  8163  0004AC  300F               	rrcf	___fladd@bexp^0,w,c
  8164  0004AE  6E04               	movwf	(___fladd@b+3)^0,c
  8165  0004B0  AE0D               	btfss	___fladd@signs^0,7,c
  8166  0004B2  EF5D  F002         	goto	u4371
  8167  0004B6  EF5F  F002         	goto	u4370
  8168  0004BA                     u4371:
  8169  0004BA  EF60  F002         	goto	l4425
  8170  0004BE                     u4370:
  8171  0004BE  8E04               	bsf	(___fladd@b+3)^0,7,c
  8172  0004C0                     l4425:
  8173  0004C0  C001  F001         	movff	___fladd@b,?___fladd
  8174  0004C4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8175  0004C8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8176  0004CC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8177  0004D0                     l1206:
  8178  0004D0  0012               	return		;funcret
  8179  0004D2                     __end_of___fladd:
  8180                           	callstack 0
  8181                           
  8182 ;; *************** function ___flge *****************
  8183 ;; Defined at:
  8184 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  ff1             4   24[COMRAM] unsigned char 
  8187 ;;  ff2             4   28[COMRAM] unsigned char 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;		None               void
  8192 ;; Registers used:
  8193 ;;		wreg, status,2, status,0
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8199 ;;      Params:         8       0       0       0       0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8201 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8202 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8203 ;;Total ram usage:       12 bytes
  8204 ;; Hardware stack levels used: 1
  8205 ;; Hardware stack levels required when called: 1
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_UART_Begin
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text19
  8214  00235E                     __ptext19:
  8215                           	callstack 0
  8216  00235E                     ___flge:
  8217                           	callstack 28
  8218  00235E  0E00               	movlw	0
  8219  002360  1419               	andwf	___flge@ff1^0,w,c
  8220  002362  6E21               	movwf	??___flge^0,c
  8221  002364  0E00               	movlw	0
  8222  002366  141A               	andwf	(___flge@ff1+1)^0,w,c
  8223  002368  6E22               	movwf	(??___flge+1)^0,c
  8224  00236A  0E80               	movlw	128
  8225  00236C  141B               	andwf	(___flge@ff1+2)^0,w,c
  8226  00236E  6E23               	movwf	(??___flge+2)^0,c
  8227  002370  0E7F               	movlw	127
  8228  002372  141C               	andwf	(___flge@ff1+3)^0,w,c
  8229  002374  6E24               	movwf	(??___flge+3)^0,c
  8230  002376  5021               	movf	??___flge^0,w,c
  8231  002378  1022               	iorwf	(??___flge+1)^0,w,c
  8232  00237A  1023               	iorwf	(??___flge+2)^0,w,c
  8233  00237C  1024               	iorwf	(??___flge+3)^0,w,c
  8234  00237E  A4D8               	btfss	status,2,c
  8235  002380  EFC4  F011         	goto	u4901
  8236  002384  EFC6  F011         	goto	u4900
  8237  002388                     u4901:
  8238  002388  EFCE  F011         	goto	l4893
  8239  00238C                     u4900:
  8240  00238C  0E00               	movlw	0
  8241  00238E  6E19               	movwf	___flge@ff1^0,c
  8242  002390  0E00               	movlw	0
  8243  002392  6E1A               	movwf	(___flge@ff1+1)^0,c
  8244  002394  0E00               	movlw	0
  8245  002396  6E1B               	movwf	(___flge@ff1+2)^0,c
  8246  002398  0E00               	movlw	0
  8247  00239A  6E1C               	movwf	(___flge@ff1+3)^0,c
  8248  00239C                     l4893:
  8249  00239C  0E00               	movlw	0
  8250  00239E  141D               	andwf	___flge@ff2^0,w,c
  8251  0023A0  6E21               	movwf	??___flge^0,c
  8252  0023A2  0E00               	movlw	0
  8253  0023A4  141E               	andwf	(___flge@ff2+1)^0,w,c
  8254  0023A6  6E22               	movwf	(??___flge+1)^0,c
  8255  0023A8  0E80               	movlw	128
  8256  0023AA  141F               	andwf	(___flge@ff2+2)^0,w,c
  8257  0023AC  6E23               	movwf	(??___flge+2)^0,c
  8258  0023AE  0E7F               	movlw	127
  8259  0023B0  1420               	andwf	(___flge@ff2+3)^0,w,c
  8260  0023B2  6E24               	movwf	(??___flge+3)^0,c
  8261  0023B4  5021               	movf	??___flge^0,w,c
  8262  0023B6  1022               	iorwf	(??___flge+1)^0,w,c
  8263  0023B8  1023               	iorwf	(??___flge+2)^0,w,c
  8264  0023BA  1024               	iorwf	(??___flge+3)^0,w,c
  8265  0023BC  A4D8               	btfss	status,2,c
  8266  0023BE  EFE3  F011         	goto	u4911
  8267  0023C2  EFE5  F011         	goto	u4910
  8268  0023C6                     u4911:
  8269  0023C6  EFED  F011         	goto	l4897
  8270  0023CA                     u4910:
  8271  0023CA  0E00               	movlw	0
  8272  0023CC  6E1D               	movwf	___flge@ff2^0,c
  8273  0023CE  0E00               	movlw	0
  8274  0023D0  6E1E               	movwf	(___flge@ff2+1)^0,c
  8275  0023D2  0E00               	movlw	0
  8276  0023D4  6E1F               	movwf	(___flge@ff2+2)^0,c
  8277  0023D6  0E00               	movlw	0
  8278  0023D8  6E20               	movwf	(___flge@ff2+3)^0,c
  8279  0023DA                     l4897:
  8280  0023DA  AE1C               	btfss	(___flge@ff1+3)^0,7,c
  8281  0023DC  EFF2  F011         	goto	u4921
  8282  0023E0  EFF4  F011         	goto	u4920
  8283  0023E4                     u4921:
  8284  0023E4  EFFD  F011         	goto	l4901
  8285  0023E8                     u4920:
  8286  0023E8  6C19               	negf	___flge@ff1^0,c
  8287  0023EA  1E1A               	comf	(___flge@ff1+1)^0,f,c
  8288  0023EC  B0D8               	btfsc	status,0,c
  8289  0023EE  2A1A               	incf	(___flge@ff1+1)^0,f,c
  8290  0023F0  1E1B               	comf	(___flge@ff1+2)^0,f,c
  8291  0023F2  B0D8               	btfsc	status,0,c
  8292  0023F4  2A1B               	incf	(___flge@ff1+2)^0,f,c
  8293  0023F6  0E80               	movlw	128
  8294  0023F8  561C               	subfwb	(___flge@ff1+3)^0,f,c
  8295  0023FA                     l4901:
  8296  0023FA  AE20               	btfss	(___flge@ff2+3)^0,7,c
  8297  0023FC  EF02  F012         	goto	u4931
  8298  002400  EF04  F012         	goto	u4930
  8299  002404                     u4931:
  8300  002404  EF0D  F012         	goto	l934
  8301  002408                     u4930:
  8302  002408  6C1D               	negf	___flge@ff2^0,c
  8303  00240A  1E1E               	comf	(___flge@ff2+1)^0,f,c
  8304  00240C  B0D8               	btfsc	status,0,c
  8305  00240E  2A1E               	incf	(___flge@ff2+1)^0,f,c
  8306  002410  1E1F               	comf	(___flge@ff2+2)^0,f,c
  8307  002412  B0D8               	btfsc	status,0,c
  8308  002414  2A1F               	incf	(___flge@ff2+2)^0,f,c
  8309  002416  0E80               	movlw	128
  8310  002418  5620               	subfwb	(___flge@ff2+3)^0,f,c
  8311  00241A                     l934:
  8312  00241A  0E00               	movlw	0
  8313  00241C  1A19               	xorwf	___flge@ff1^0,f,c
  8314  00241E  0E00               	movlw	0
  8315  002420  1A1A               	xorwf	(___flge@ff1+1)^0,f,c
  8316  002422  0E00               	movlw	0
  8317  002424  1A1B               	xorwf	(___flge@ff1+2)^0,f,c
  8318  002426  0E80               	movlw	128
  8319  002428  1A1C               	xorwf	(___flge@ff1+3)^0,f,c
  8320  00242A  0E00               	movlw	0
  8321  00242C  1A1D               	xorwf	___flge@ff2^0,f,c
  8322  00242E  0E00               	movlw	0
  8323  002430  1A1E               	xorwf	(___flge@ff2+1)^0,f,c
  8324  002432  0E00               	movlw	0
  8325  002434  1A1F               	xorwf	(___flge@ff2+2)^0,f,c
  8326  002436  0E80               	movlw	128
  8327  002438  1A20               	xorwf	(___flge@ff2+3)^0,f,c
  8328  00243A  501D               	movf	___flge@ff2^0,w,c
  8329  00243C  5C19               	subwf	___flge@ff1^0,w,c
  8330  00243E  501E               	movf	(___flge@ff2+1)^0,w,c
  8331  002440  581A               	subwfb	(___flge@ff1+1)^0,w,c
  8332  002442  501F               	movf	(___flge@ff2+2)^0,w,c
  8333  002444  581B               	subwfb	(___flge@ff1+2)^0,w,c
  8334  002446  5020               	movf	(___flge@ff2+3)^0,w,c
  8335  002448  581C               	subwfb	(___flge@ff1+3)^0,w,c
  8336  00244A  B0D8               	btfsc	status,0,c
  8337  00244C  EF2A  F012         	goto	u4941
  8338  002450  EF2C  F012         	goto	u4940
  8339  002454                     u4941:
  8340  002454  EF2F  F012         	goto	l4907
  8341  002458                     u4940:
  8342  002458  90D8               	bcf	status,0,c
  8343  00245A  EF30  F012         	goto	l939
  8344  00245E                     l4907:
  8345  00245E  80D8               	bsf	status,0,c
  8346  002460                     l939:
  8347  002460  0012               	return		;funcret
  8348  002462                     __end_of___flge:
  8349                           	callstack 0
  8350                           
  8351 ;; *************** function ___fldiv *****************
  8352 ;; Defined at:
  8353 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  b               4    0[COMRAM] unsigned char 
  8356 ;;  a               4    4[COMRAM] unsigned char 
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;  grs             4   19[COMRAM] unsigned long 
  8359 ;;  rem             4   12[COMRAM] unsigned long 
  8360 ;;  new_exp         2   17[COMRAM] short 
  8361 ;;  aexp            1   24[COMRAM] unsigned char 
  8362 ;;  bexp            1   23[COMRAM] unsigned char 
  8363 ;;  sign            1   16[COMRAM] unsigned char 
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  4    0[COMRAM] unsigned char 
  8366 ;; Registers used:
  8367 ;;		wreg, status,2, status,0
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8373 ;;      Params:         8       0       0       0       0       0       0       0       0
  8374 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8375 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8376 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8377 ;;Total ram usage:       25 bytes
  8378 ;; Hardware stack levels used: 1
  8379 ;; Hardware stack levels required when called: 1
  8380 ;; This function calls:
  8381 ;;		Nothing
  8382 ;; This function is called by:
  8383 ;;		_UART_Begin
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           	psect	text20
  8388  0004D2                     __ptext20:
  8389                           	callstack 0
  8390  0004D2                     ___fldiv:
  8391                           	callstack 28
  8392  0004D2  5004               	movf	(___fldiv@b+3)^0,w,c
  8393  0004D4  0B80               	andlw	128
  8394  0004D6  6E11               	movwf	___fldiv@sign^0,c
  8395  0004D8  5004               	movf	(___fldiv@b+3)^0,w,c
  8396  0004DA  2404               	addwf	(___fldiv@b+3)^0,w,c
  8397  0004DC  6E18               	movwf	___fldiv@bexp^0,c
  8398  0004DE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8399  0004E0  EF74  F002         	goto	u4671
  8400  0004E4  EF76  F002         	goto	u4670
  8401  0004E8                     u4671:
  8402  0004E8  EF77  F002         	goto	l4751
  8403  0004EC                     u4670:
  8404  0004EC  8018               	bsf	___fldiv@bexp^0,0,c
  8405  0004EE                     l4751:
  8406  0004EE  5018               	movf	___fldiv@bexp^0,w,c
  8407  0004F0  B4D8               	btfsc	status,2,c
  8408  0004F2  EF7D  F002         	goto	u4681
  8409  0004F6  EF7F  F002         	goto	u4680
  8410  0004FA                     u4681:
  8411  0004FA  EF94  F002         	goto	l4761
  8412  0004FE                     u4680:
  8413  0004FE  2818               	incf	___fldiv@bexp^0,w,c
  8414  000500  A4D8               	btfss	status,2,c
  8415  000502  EF85  F002         	goto	u4691
  8416  000506  EF87  F002         	goto	u4690
  8417  00050A                     u4691:
  8418  00050A  EF8F  F002         	goto	l4757
  8419  00050E                     u4690:
  8420  00050E  0E00               	movlw	0
  8421  000510  6E01               	movwf	___fldiv@b^0,c
  8422  000512  0E00               	movlw	0
  8423  000514  6E02               	movwf	(___fldiv@b+1)^0,c
  8424  000516  0E00               	movlw	0
  8425  000518  6E03               	movwf	(___fldiv@b+2)^0,c
  8426  00051A  0E00               	movlw	0
  8427  00051C  6E04               	movwf	(___fldiv@b+3)^0,c
  8428  00051E                     l4757:
  8429  00051E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8430  000520  0E00               	movlw	0
  8431  000522  6E04               	movwf	(___fldiv@b+3)^0,c
  8432  000524  EF9C  F002         	goto	l4763
  8433  000528                     l4761:
  8434  000528  0E00               	movlw	0
  8435  00052A  6E01               	movwf	___fldiv@b^0,c
  8436  00052C  0E00               	movlw	0
  8437  00052E  6E02               	movwf	(___fldiv@b+1)^0,c
  8438  000530  0E00               	movlw	0
  8439  000532  6E03               	movwf	(___fldiv@b+2)^0,c
  8440  000534  0E00               	movlw	0
  8441  000536  6E04               	movwf	(___fldiv@b+3)^0,c
  8442  000538                     l4763:
  8443  000538  5008               	movf	(___fldiv@a+3)^0,w,c
  8444  00053A  0B80               	andlw	128
  8445  00053C  1A11               	xorwf	___fldiv@sign^0,f,c
  8446  00053E  5008               	movf	(___fldiv@a+3)^0,w,c
  8447  000540  2408               	addwf	(___fldiv@a+3)^0,w,c
  8448  000542  6E19               	movwf	___fldiv@aexp^0,c
  8449  000544  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8450  000546  EFA7  F002         	goto	u4701
  8451  00054A  EFA9  F002         	goto	u4700
  8452  00054E                     u4701:
  8453  00054E  EFAA  F002         	goto	l4771
  8454  000552                     u4700:
  8455  000552  8019               	bsf	___fldiv@aexp^0,0,c
  8456  000554                     l4771:
  8457  000554  5019               	movf	___fldiv@aexp^0,w,c
  8458  000556  B4D8               	btfsc	status,2,c
  8459  000558  EFB0  F002         	goto	u4711
  8460  00055C  EFB2  F002         	goto	u4710
  8461  000560                     u4711:
  8462  000560  EFC7  F002         	goto	l4781
  8463  000564                     u4710:
  8464  000564  2819               	incf	___fldiv@aexp^0,w,c
  8465  000566  A4D8               	btfss	status,2,c
  8466  000568  EFB8  F002         	goto	u4721
  8467  00056C  EFBA  F002         	goto	u4720
  8468  000570                     u4721:
  8469  000570  EFC2  F002         	goto	l4777
  8470  000574                     u4720:
  8471  000574  0E00               	movlw	0
  8472  000576  6E05               	movwf	___fldiv@a^0,c
  8473  000578  0E00               	movlw	0
  8474  00057A  6E06               	movwf	(___fldiv@a+1)^0,c
  8475  00057C  0E00               	movlw	0
  8476  00057E  6E07               	movwf	(___fldiv@a+2)^0,c
  8477  000580  0E00               	movlw	0
  8478  000582  6E08               	movwf	(___fldiv@a+3)^0,c
  8479  000584                     l4777:
  8480  000584  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8481  000586  0E00               	movlw	0
  8482  000588  6E08               	movwf	(___fldiv@a+3)^0,c
  8483  00058A  EFCF  F002         	goto	l4783
  8484  00058E                     l4781:
  8485  00058E  0E00               	movlw	0
  8486  000590  6E05               	movwf	___fldiv@a^0,c
  8487  000592  0E00               	movlw	0
  8488  000594  6E06               	movwf	(___fldiv@a+1)^0,c
  8489  000596  0E00               	movlw	0
  8490  000598  6E07               	movwf	(___fldiv@a+2)^0,c
  8491  00059A  0E00               	movlw	0
  8492  00059C  6E08               	movwf	(___fldiv@a+3)^0,c
  8493  00059E                     l4783:
  8494  00059E  5005               	movf	___fldiv@a^0,w,c
  8495  0005A0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8496  0005A2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8497  0005A4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8498  0005A6  A4D8               	btfss	status,2,c
  8499  0005A8  EFD8  F002         	goto	u4731
  8500  0005AC  EFDA  F002         	goto	u4730
  8501  0005B0                     u4731:
  8502  0005B0  EFF2  F002         	goto	l4795
  8503  0005B4                     u4730:
  8504  0005B4  0E00               	movlw	0
  8505  0005B6  6E01               	movwf	___fldiv@b^0,c
  8506  0005B8  0E00               	movlw	0
  8507  0005BA  6E02               	movwf	(___fldiv@b+1)^0,c
  8508  0005BC  0E00               	movlw	0
  8509  0005BE  6E03               	movwf	(___fldiv@b+2)^0,c
  8510  0005C0  0E00               	movlw	0
  8511  0005C2  6E04               	movwf	(___fldiv@b+3)^0,c
  8512  0005C4  0E80               	movlw	128
  8513  0005C6  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8514  0005C8  0E7F               	movlw	127
  8515  0005CA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8516  0005CC                     l4789:
  8517  0005CC  5011               	movf	___fldiv@sign^0,w,c
  8518  0005CE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8519  0005D0  C001  F001         	movff	___fldiv@b,?___fldiv
  8520  0005D4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8521  0005D8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8522  0005DC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8523  0005E0  EF35  F004         	goto	l1251
  8524  0005E4                     l4795:
  8525  0005E4  5018               	movf	___fldiv@bexp^0,w,c
  8526  0005E6  A4D8               	btfss	status,2,c
  8527  0005E8  EFF8  F002         	goto	u4741
  8528  0005EC  EFFA  F002         	goto	u4740
  8529  0005F0                     u4741:
  8530  0005F0  EF04  F003         	goto	l4803
  8531  0005F4                     u4740:
  8532  0005F4  0E00               	movlw	0
  8533  0005F6  6E01               	movwf	?___fldiv^0,c
  8534  0005F8  0E00               	movlw	0
  8535  0005FA  6E02               	movwf	(?___fldiv+1)^0,c
  8536  0005FC  0E00               	movlw	0
  8537  0005FE  6E03               	movwf	(?___fldiv+2)^0,c
  8538  000600  0E00               	movlw	0
  8539  000602  6E04               	movwf	(?___fldiv+3)^0,c
  8540  000604  EF35  F004         	goto	l1251
  8541  000608                     l4803:
  8542  000608  5019               	movf	___fldiv@aexp^0,w,c
  8543  00060A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8544  00060E  6A0A               	clrf	(??___fldiv+1)^0,c
  8545  000610  5E09               	subwf	??___fldiv^0,f,c
  8546  000612  0E00               	movlw	0
  8547  000614  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8548  000616  0E7F               	movlw	127
  8549  000618  2409               	addwf	??___fldiv^0,w,c
  8550  00061A  6E12               	movwf	___fldiv@new_exp^0,c
  8551  00061C  0E00               	movlw	0
  8552  00061E  200A               	addwfc	(??___fldiv+1)^0,w,c
  8553  000620  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8554  000622  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8555  000626  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8556  00062A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8557  00062E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8558  000632  0E00               	movlw	0
  8559  000634  6E01               	movwf	___fldiv@b^0,c
  8560  000636  0E00               	movlw	0
  8561  000638  6E02               	movwf	(___fldiv@b+1)^0,c
  8562  00063A  0E00               	movlw	0
  8563  00063C  6E03               	movwf	(___fldiv@b+2)^0,c
  8564  00063E  0E00               	movlw	0
  8565  000640  6E04               	movwf	(___fldiv@b+3)^0,c
  8566  000642  0E00               	movlw	0
  8567  000644  6E14               	movwf	___fldiv@grs^0,c
  8568  000646  0E00               	movlw	0
  8569  000648  6E15               	movwf	(___fldiv@grs+1)^0,c
  8570  00064A  0E00               	movlw	0
  8571  00064C  6E16               	movwf	(___fldiv@grs+2)^0,c
  8572  00064E  0E00               	movlw	0
  8573  000650  6E17               	movwf	(___fldiv@grs+3)^0,c
  8574  000652  0E00               	movlw	0
  8575  000654  6E19               	movwf	___fldiv@aexp^0,c
  8576  000656  EF65  F003         	goto	l1253
  8577  00065A                     l4813:
  8578  00065A  5019               	movf	___fldiv@aexp^0,w,c
  8579  00065C  B4D8               	btfsc	status,2,c
  8580  00065E  EF33  F003         	goto	u4751
  8581  000662  EF35  F003         	goto	u4750
  8582  000666                     u4751:
  8583  000666  EF4C  F003         	goto	l4821
  8584  00066A                     u4750:
  8585  00066A  90D8               	bcf	status,0,c
  8586  00066C  360D               	rlcf	___fldiv@rem^0,f,c
  8587  00066E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8588  000670  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8589  000672  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8590  000674  90D8               	bcf	status,0,c
  8591  000676  3601               	rlcf	___fldiv@b^0,f,c
  8592  000678  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8593  00067A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8594  00067C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8595  00067E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8596  000680  EF44  F003         	goto	u4761
  8597  000684  EF46  F003         	goto	u4760
  8598  000688                     u4761:
  8599  000688  EF47  F003         	goto	l1256
  8600  00068C                     u4760:
  8601  00068C  8001               	bsf	___fldiv@b^0,0,c
  8602  00068E                     l1256:
  8603  00068E  90D8               	bcf	status,0,c
  8604  000690  3614               	rlcf	___fldiv@grs^0,f,c
  8605  000692  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8606  000694  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8607  000696  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8608  000698                     l4821:
  8609  000698  5005               	movf	___fldiv@a^0,w,c
  8610  00069A  5C0D               	subwf	___fldiv@rem^0,w,c
  8611  00069C  5006               	movf	(___fldiv@a+1)^0,w,c
  8612  00069E  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8613  0006A0  5007               	movf	(___fldiv@a+2)^0,w,c
  8614  0006A2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8615  0006A4  5008               	movf	(___fldiv@a+3)^0,w,c
  8616  0006A6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8617  0006A8  A0D8               	btfss	status,0,c
  8618  0006AA  EF59  F003         	goto	u4771
  8619  0006AE  EF5B  F003         	goto	u4770
  8620  0006B2                     u4771:
  8621  0006B2  EF64  F003         	goto	l4827
  8622  0006B6                     u4770:
  8623  0006B6  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8624  0006B8  5005               	movf	___fldiv@a^0,w,c
  8625  0006BA  5E0D               	subwf	___fldiv@rem^0,f,c
  8626  0006BC  5006               	movf	(___fldiv@a+1)^0,w,c
  8627  0006BE  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8628  0006C0  5007               	movf	(___fldiv@a+2)^0,w,c
  8629  0006C2  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8630  0006C4  5008               	movf	(___fldiv@a+3)^0,w,c
  8631  0006C6  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8632  0006C8                     l4827:
  8633  0006C8  2A19               	incf	___fldiv@aexp^0,f,c
  8634  0006CA                     l1253:
  8635  0006CA  0E19               	movlw	25
  8636  0006CC  6419               	cpfsgt	___fldiv@aexp^0,c
  8637  0006CE  EF6B  F003         	goto	u4781
  8638  0006D2  EF6D  F003         	goto	u4780
  8639  0006D6                     u4781:
  8640  0006D6  EF2D  F003         	goto	l4813
  8641  0006DA                     u4780:
  8642  0006DA  500D               	movf	___fldiv@rem^0,w,c
  8643  0006DC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8644  0006DE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8645  0006E0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8646  0006E2  B4D8               	btfsc	status,2,c
  8647  0006E4  EF76  F003         	goto	u4791
  8648  0006E8  EF78  F003         	goto	u4790
  8649  0006EC                     u4791:
  8650  0006EC  EF90  F003         	goto	l4839
  8651  0006F0                     u4790:
  8652  0006F0  8014               	bsf	___fldiv@grs^0,0,c
  8653  0006F2  EF90  F003         	goto	l4839
  8654  0006F6                     l4833:
  8655  0006F6  90D8               	bcf	status,0,c
  8656  0006F8  3601               	rlcf	___fldiv@b^0,f,c
  8657  0006FA  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8658  0006FC  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8659  0006FE  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8660  000700  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8661  000702  EF85  F003         	goto	u4801
  8662  000706  EF87  F003         	goto	u4800
  8663  00070A                     u4801:
  8664  00070A  EF88  F003         	goto	l1262
  8665  00070E                     u4800:
  8666  00070E  8001               	bsf	___fldiv@b^0,0,c
  8667  000710                     l1262:
  8668  000710  90D8               	bcf	status,0,c
  8669  000712  3614               	rlcf	___fldiv@grs^0,f,c
  8670  000714  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8671  000716  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8672  000718  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8673  00071A  0612               	decf	___fldiv@new_exp^0,f,c
  8674  00071C  A0D8               	btfss	status,0,c
  8675  00071E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8676  000720                     l4839:
  8677  000720  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8678  000722  EF95  F003         	goto	u4811
  8679  000726  EF97  F003         	goto	u4810
  8680  00072A                     u4811:
  8681  00072A  EF7B  F003         	goto	l4833
  8682  00072E                     u4810:
  8683  00072E  0E00               	movlw	0
  8684  000730  6E19               	movwf	___fldiv@aexp^0,c
  8685  000732  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8686  000734  EF9E  F003         	goto	u4821
  8687  000738  EFA0  F003         	goto	u4820
  8688  00073C                     u4821:
  8689  00073C  EFC4  F003         	goto	l1264
  8690  000740                     u4820:
  8691  000740  0EFF               	movlw	255
  8692  000742  1414               	andwf	___fldiv@grs^0,w,c
  8693  000744  6E09               	movwf	??___fldiv^0,c
  8694  000746  0EFF               	movlw	255
  8695  000748  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8696  00074A  6E0A               	movwf	(??___fldiv+1)^0,c
  8697  00074C  0EFF               	movlw	255
  8698  00074E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8699  000750  6E0B               	movwf	(??___fldiv+2)^0,c
  8700  000752  0E7F               	movlw	127
  8701  000754  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8702  000756  6E0C               	movwf	(??___fldiv+3)^0,c
  8703  000758  5009               	movf	??___fldiv^0,w,c
  8704  00075A  100A               	iorwf	(??___fldiv+1)^0,w,c
  8705  00075C  100B               	iorwf	(??___fldiv+2)^0,w,c
  8706  00075E  100C               	iorwf	(??___fldiv+3)^0,w,c
  8707  000760  B4D8               	btfsc	status,2,c
  8708  000762  EFB5  F003         	goto	u4831
  8709  000766  EFB7  F003         	goto	u4830
  8710  00076A                     u4831:
  8711  00076A  EFBB  F003         	goto	l1265
  8712  00076E                     u4830:
  8713  00076E                     l4847:
  8714  00076E  0E01               	movlw	1
  8715  000770  6E19               	movwf	___fldiv@aexp^0,c
  8716  000772  EFC4  F003         	goto	l1264
  8717  000776                     l1265:
  8718  000776  A001               	btfss	___fldiv@b^0,0,c
  8719  000778  EFC0  F003         	goto	u4841
  8720  00077C  EFC2  F003         	goto	u4840
  8721  000780                     u4841:
  8722  000780  EFC4  F003         	goto	l1264
  8723  000784                     u4840:
  8724  000784  EFB7  F003         	goto	l4847
  8725  000788                     l1264:
  8726  000788  5019               	movf	___fldiv@aexp^0,w,c
  8727  00078A  B4D8               	btfsc	status,2,c
  8728  00078C  EFCA  F003         	goto	u4851
  8729  000790  EFCC  F003         	goto	u4850
  8730  000794                     u4851:
  8731  000794  EFF0  F003         	goto	l4859
  8732  000798                     u4850:
  8733  000798  0E01               	movlw	1
  8734  00079A  2601               	addwf	___fldiv@b^0,f,c
  8735  00079C  0E00               	movlw	0
  8736  00079E  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8737  0007A0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8738  0007A2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8739  0007A4  A004               	btfss	(___fldiv@b+3)^0,0,c
  8740  0007A6  EFD7  F003         	goto	u4861
  8741  0007AA  EFD9  F003         	goto	u4860
  8742  0007AE                     u4861:
  8743  0007AE  EFF0  F003         	goto	l4859
  8744  0007B2                     u4860:
  8745  0007B2  C001  F009         	movff	___fldiv@b,??___fldiv
  8746  0007B6  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8747  0007BA  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8748  0007BE  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8749  0007C2  340C               	rlcf	(??___fldiv+3)^0,w,c
  8750  0007C4  320C               	rrcf	(??___fldiv+3)^0,f,c
  8751  0007C6  320B               	rrcf	(??___fldiv+2)^0,f,c
  8752  0007C8  320A               	rrcf	(??___fldiv+1)^0,f,c
  8753  0007CA  3209               	rrcf	??___fldiv^0,f,c
  8754  0007CC  C009  F001         	movff	??___fldiv,___fldiv@b
  8755  0007D0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8756  0007D4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8757  0007D8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8758  0007DC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8759  0007DE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8760  0007E0                     l4859:
  8761  0007E0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8762  0007E2  EFFB  F003         	goto	u4871
  8763  0007E6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8764  0007E8  E108               	bnz	u4870
  8765  0007EA  2812               	incf	___fldiv@new_exp^0,w,c
  8766  0007EC  A0D8               	btfss	status,0,c
  8767  0007EE  EFFB  F003         	goto	u4871
  8768  0007F2  EFFD  F003         	goto	u4870
  8769  0007F6                     u4871:
  8770  0007F6  EF08  F004         	goto	l4863
  8771  0007FA                     u4870:
  8772  0007FA  0E00               	movlw	0
  8773  0007FC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8774  0007FE  6812               	setf	___fldiv@new_exp^0,c
  8775  000800  0E00               	movlw	0
  8776  000802  6E01               	movwf	___fldiv@b^0,c
  8777  000804  0E00               	movlw	0
  8778  000806  6E02               	movwf	(___fldiv@b+1)^0,c
  8779  000808  0E00               	movlw	0
  8780  00080A  6E03               	movwf	(___fldiv@b+2)^0,c
  8781  00080C  0E00               	movlw	0
  8782  00080E  6E04               	movwf	(___fldiv@b+3)^0,c
  8783  000810                     l4863:
  8784  000810  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8785  000812  EF15  F004         	goto	u4880
  8786  000816  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8787  000818  E106               	bnz	u4881
  8788  00081A  0412               	decf	___fldiv@new_exp^0,w,c
  8789  00081C  B0D8               	btfsc	status,0,c
  8790  00081E  EF13  F004         	goto	u4881
  8791  000822  EF15  F004         	goto	u4880
  8792  000826                     u4881:
  8793  000826  EF23  F004         	goto	l4867
  8794  00082A                     u4880:
  8795  00082A  0E00               	movlw	0
  8796  00082C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8797  00082E  0E00               	movlw	0
  8798  000830  6E12               	movwf	___fldiv@new_exp^0,c
  8799  000832  0E00               	movlw	0
  8800  000834  6E01               	movwf	___fldiv@b^0,c
  8801  000836  0E00               	movlw	0
  8802  000838  6E02               	movwf	(___fldiv@b+1)^0,c
  8803  00083A  0E00               	movlw	0
  8804  00083C  6E03               	movwf	(___fldiv@b+2)^0,c
  8805  00083E  0E00               	movlw	0
  8806  000840  6E04               	movwf	(___fldiv@b+3)^0,c
  8807  000842  0E00               	movlw	0
  8808  000844  6E11               	movwf	___fldiv@sign^0,c
  8809  000846                     l4867:
  8810  000846  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8811  00084A  A018               	btfss	___fldiv@bexp^0,0,c
  8812  00084C  EF2A  F004         	goto	u4891
  8813  000850  EF2C  F004         	goto	u4890
  8814  000854                     u4891:
  8815  000854  EF2F  F004         	goto	l4873
  8816  000858                     u4890:
  8817  000858  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8818  00085A  EF30  F004         	goto	l4875
  8819  00085E                     l4873:
  8820  00085E  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8821  000860                     l4875:
  8822  000860  90D8               	bcf	status,0,c
  8823  000862  3018               	rrcf	___fldiv@bexp^0,w,c
  8824  000864  6E04               	movwf	(___fldiv@b+3)^0,c
  8825  000866  EFE6  F002         	goto	l4789
  8826  00086A                     l1251:
  8827  00086A  0012               	return		;funcret
  8828  00086C                     __end_of___fldiv:
  8829                           	callstack 0
  8830                           
  8831 ;; *************** function _Timer1_Init *****************
  8832 ;; Defined at:
  8833 ;;		line 6 in file "Timer1.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      void 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8851 ;;Total ram usage:        0 bytes
  8852 ;; Hardware stack levels used: 1
  8853 ;; Hardware stack levels required when called: 1
  8854 ;; This function calls:
  8855 ;;		Nothing
  8856 ;; This function is called by:
  8857 ;;		_main
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text21
  8862  003A1A                     __ptext21:
  8863                           	callstack 0
  8864  003A1A                     _Timer1_Init:
  8865                           	callstack 29
  8866  003A1A                     
  8867                           ;Timer1.c: 7:     T1CONbits.RD16 = 1;
  8868  003A1A  8ECD               	bsf	205,7,c	;volatile
  8869                           
  8870                           ;Timer1.c: 8:     T1CONbits.T1RUN = 0;
  8871  003A1C  9CCD               	bcf	205,6,c	;volatile
  8872                           
  8873                           ;Timer1.c: 9:     T1CONbits.T1OSCEN = 0;
  8874  003A1E  96CD               	bcf	205,3,c	;volatile
  8875                           
  8876                           ;Timer1.c: 10:     T1CONbits.TMR1CS = 0;
  8877  003A20  92CD               	bcf	205,1,c	;volatile
  8878  003A22                     
  8879                           ;Timer1.c: 11:     TMR1 = 5553;
  8880  003A22  0E15               	movlw	21
  8881  003A24  6ECF               	movwf	207,c	;volatile
  8882  003A26  0EB1               	movlw	177
  8883  003A28  6ECE               	movwf	206,c	;volatile
  8884  003A2A                     
  8885                           ;Timer1.c: 12:     T1CONbits.TMR1ON = 1;
  8886  003A2A  80CD               	bsf	205,0,c	;volatile
  8887                           
  8888                           ;Timer1.c: 13:     T1CONbits.T1CKPS = 0b11;
  8889  003A2C  0E30               	movlw	48
  8890  003A2E  12CD               	iorwf	205,f,c	;volatile
  8891  003A30                     
  8892                           ;Timer1.c: 14:     PIE1bits.TMR1IE = 1;
  8893  003A30  809D               	bsf	157,0,c	;volatile
  8894  003A32                     
  8895                           ;Timer1.c: 15:     PIR1bits.TMR1IF = 0;
  8896  003A32  909E               	bcf	158,0,c	;volatile
  8897  003A34  0012               	return		;funcret
  8898  003A36                     __end_of_Timer1_Init:
  8899                           	callstack 0
  8900                           
  8901 ;; *************** function _Print_Menu *****************
  8902 ;; Defined at:
  8903 ;;		line 131 in file "main.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;		None
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;		None
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      void 
  8910 ;; Registers used:
  8911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8917 ;;      Params:         0       0       0       0       0       0       0       0       0
  8918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8920 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8921 ;;Total ram usage:        0 bytes
  8922 ;; Hardware stack levels used: 1
  8923 ;; Hardware stack levels required when called: 10
  8924 ;; This function calls:
  8925 ;;		_OLEDClear
  8926 ;;		_OLED_NPuts
  8927 ;;		_OLED_SPuts
  8928 ;;		_OLEDsetCursor
  8929 ;;		_Print_Hora
  8930 ;;		_Print_Minuto
  8931 ;;		_Print_Segundo
  8932 ;;		_Print_config
  8933 ;; This function is called by:
  8934 ;;		_main
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           	psect	text22
  8939  003496                     __ptext22:
  8940                           	callstack 0
  8941  003496                     _Print_Menu:
  8942                           	callstack 20
  8943  003496                     
  8944                           ;main.c: 132:     OLEDClear();
  8945  003496  EC21  F01A         	call	_OLEDClear	;wreg free
  8946  00349A                     
  8947                           ;main.c: 133:     OLED_SPuts(0,0,"LECOMPERU");
  8948  00349A  0E00               	movlw	0
  8949  00349C  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  8950  00349E  0E00               	movlw	0
  8951  0034A0  6E07               	movwf	OLED_SPuts@x^0,c
  8952  0034A2  0E00               	movlw	0
  8953  0034A4  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  8954  0034A6  0E00               	movlw	0
  8955  0034A8  6E09               	movwf	OLED_SPuts@y^0,c
  8956  0034AA  0EBD               	movlw	low STR_2
  8957  0034AC  6E0B               	movwf	OLED_SPuts@buffer^0,c
  8958  0034AE  0E7F               	movlw	high STR_2
  8959  0034B0  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  8960  0034B2  EC03  F00E         	call	_OLED_SPuts	;wreg free
  8961  0034B6                     
  8962                           ;main.c: 134:     OLEDsetCursor(0,2);
  8963  0034B6  0E00               	movlw	0
  8964  0034B8  6E04               	movwf	(OLEDsetCursor@x+1)^0,c
  8965  0034BA  0E00               	movlw	0
  8966  0034BC  6E03               	movwf	OLEDsetCursor@x^0,c
  8967  0034BE  0E00               	movlw	0
  8968  0034C0  6E06               	movwf	(OLEDsetCursor@y+1)^0,c
  8969  0034C2  0E02               	movlw	2
  8970  0034C4  6E05               	movwf	OLEDsetCursor@y^0,c
  8971  0034C6  ECB4  F01C         	call	_OLEDsetCursor	;wreg free
  8972  0034CA                     
  8973                           ;main.c: 135:     OLED_NPuts("REGISTRO PERSONAL");
  8974  0034CA  0EAB               	movlw	low STR_3
  8975  0034CC  6E07               	movwf	OLED_NPuts@buffer^0,c
  8976  0034CE  0E7F               	movlw	high STR_3
  8977  0034D0  6E08               	movwf	(OLED_NPuts@buffer+1)^0,c
  8978  0034D2  EC44  F014         	call	_OLED_NPuts	;wreg free
  8979  0034D6                     
  8980                           ;main.c: 136:     Print_Hora();
  8981  0034D6  ECA1  F018         	call	_Print_Hora	;wreg free
  8982  0034DA                     
  8983                           ;main.c: 137:     Print_Minuto();
  8984  0034DA  EC6D  F018         	call	_Print_Minuto	;wreg free
  8985  0034DE                     
  8986                           ;main.c: 138:     Print_Segundo();
  8987  0034DE  EC39  F018         	call	_Print_Segundo	;wreg free
  8988  0034E2                     
  8989                           ;main.c: 139:     Print_config();
  8990  0034E2  EC20  F010         	call	_Print_config	;wreg free
  8991  0034E6  0012               	return		;funcret
  8992  0034E8                     __end_of_Print_Menu:
  8993                           	callstack 0
  8994                           
  8995 ;; *************** function _Print_config *****************
  8996 ;; Defined at:
  8997 ;;		line 165 in file "main.c"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;		None
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;		None
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  1    wreg      void 
  9004 ;; Registers used:
  9005 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9011 ;;      Params:         0       0       0       0       0       0       0       0       0
  9012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9014 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9015 ;;Total ram usage:        0 bytes
  9016 ;; Hardware stack levels used: 1
  9017 ;; Hardware stack levels required when called: 7
  9018 ;; This function calls:
  9019 ;;		_OLED_SPuts
  9020 ;; This function is called by:
  9021 ;;		_Print_Menu
  9022 ;;		_get_key
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text23
  9027  002040                     __ptext23:
  9028                           	callstack 0
  9029  002040                     _Print_config:
  9030                           	callstack 22
  9031  002040                     
  9032                           ;main.c: 166:     if(configuracion == 0) OLED_SPuts(50,7,"    ");
  9033  002040  505E               	movf	_configuracion^0,w,c
  9034  002042  A4D8               	btfss	status,2,c
  9035  002044  EF26  F010         	goto	u4411
  9036  002048  EF28  F010         	goto	u4410
  9037  00204C                     u4411:
  9038  00204C  EF36  F010         	goto	l4495
  9039  002050                     u4410:
  9040  002050  0E00               	movlw	0
  9041  002052  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  9042  002054  0E32               	movlw	50
  9043  002056  6E07               	movwf	OLED_SPuts@x^0,c
  9044  002058  0E00               	movlw	0
  9045  00205A  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  9046  00205C  0E07               	movlw	7
  9047  00205E  6E09               	movwf	OLED_SPuts@y^0,c
  9048  002060  0EDA               	movlw	low STR_10
  9049  002062  6E0B               	movwf	OLED_SPuts@buffer^0,c
  9050  002064  0E7F               	movlw	high STR_10
  9051  002066  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  9052  002068  EC03  F00E         	call	_OLED_SPuts	;wreg free
  9053  00206C                     l4495:
  9054                           
  9055                           ;main.c: 167:     if(configuracion == 1) OLED_SPuts(50,7,"MIN");
  9056  00206C  045E               	decf	_configuracion^0,w,c
  9057  00206E  A4D8               	btfss	status,2,c
  9058  002070  EF3C  F010         	goto	u4421
  9059  002074  EF3E  F010         	goto	u4420
  9060  002078                     u4421:
  9061  002078  EF4C  F010         	goto	l4499
  9062  00207C                     u4420:
  9063  00207C  0E00               	movlw	0
  9064  00207E  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  9065  002080  0E32               	movlw	50
  9066  002082  6E07               	movwf	OLED_SPuts@x^0,c
  9067  002084  0E00               	movlw	0
  9068  002086  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  9069  002088  0E07               	movlw	7
  9070  00208A  6E09               	movwf	OLED_SPuts@y^0,c
  9071  00208C  0EF7               	movlw	low STR_11
  9072  00208E  6E0B               	movwf	OLED_SPuts@buffer^0,c
  9073  002090  0E7F               	movlw	high STR_11
  9074  002092  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  9075  002094  EC03  F00E         	call	_OLED_SPuts	;wreg free
  9076  002098                     l4499:
  9077                           
  9078                           ;main.c: 168:     if(configuracion == 2) OLED_SPuts(50,7,"HORA");
  9079  002098  0E02               	movlw	2
  9080  00209A  185E               	xorwf	_configuracion^0,w,c
  9081  00209C  A4D8               	btfss	status,2,c
  9082  00209E  EF53  F010         	goto	u4431
  9083  0020A2  EF55  F010         	goto	u4430
  9084  0020A6                     u4431:
  9085  0020A6  EF63  F010         	goto	l4503
  9086  0020AA                     u4430:
  9087  0020AA  0E00               	movlw	0
  9088  0020AC  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  9089  0020AE  0E32               	movlw	50
  9090  0020B0  6E07               	movwf	OLED_SPuts@x^0,c
  9091  0020B2  0E00               	movlw	0
  9092  0020B4  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  9093  0020B6  0E07               	movlw	7
  9094  0020B8  6E09               	movwf	OLED_SPuts@y^0,c
  9095  0020BA  0EE4               	movlw	low STR_12
  9096  0020BC  6E0B               	movwf	OLED_SPuts@buffer^0,c
  9097  0020BE  0E7F               	movlw	high STR_12
  9098  0020C0  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  9099  0020C2  EC03  F00E         	call	_OLED_SPuts	;wreg free
  9100  0020C6                     l4503:
  9101                           
  9102                           ;main.c: 169:     if(configuracion == 3) OLED_SPuts(50,7,"DIA");
  9103  0020C6  0E03               	movlw	3
  9104  0020C8  185E               	xorwf	_configuracion^0,w,c
  9105  0020CA  A4D8               	btfss	status,2,c
  9106  0020CC  EF6A  F010         	goto	u4441
  9107  0020D0  EF6C  F010         	goto	u4440
  9108  0020D4                     u4441:
  9109  0020D4  EF7A  F010         	goto	l4507
  9110  0020D8                     u4440:
  9111  0020D8  0E00               	movlw	0
  9112  0020DA  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  9113  0020DC  0E32               	movlw	50
  9114  0020DE  6E07               	movwf	OLED_SPuts@x^0,c
  9115  0020E0  0E00               	movlw	0
  9116  0020E2  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  9117  0020E4  0E07               	movlw	7
  9118  0020E6  6E09               	movwf	OLED_SPuts@y^0,c
  9119  0020E8  0EF3               	movlw	low STR_13
  9120  0020EA  6E0B               	movwf	OLED_SPuts@buffer^0,c
  9121  0020EC  0E7F               	movlw	high STR_13
  9122  0020EE  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  9123  0020F0  EC03  F00E         	call	_OLED_SPuts	;wreg free
  9124  0020F4                     l4507:
  9125                           
  9126                           ;main.c: 170:     if(configuracion == 4) OLED_SPuts(50,7,"MES");
  9127  0020F4  0E04               	movlw	4
  9128  0020F6  185E               	xorwf	_configuracion^0,w,c
  9129  0020F8  A4D8               	btfss	status,2,c
  9130  0020FA  EF81  F010         	goto	u4451
  9131  0020FE  EF83  F010         	goto	u4450
  9132  002102                     u4451:
  9133  002102  EF91  F010         	goto	l4511
  9134  002106                     u4450:
  9135  002106  0E00               	movlw	0
  9136  002108  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  9137  00210A  0E32               	movlw	50
  9138  00210C  6E07               	movwf	OLED_SPuts@x^0,c
  9139  00210E  0E00               	movlw	0
  9140  002110  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  9141  002112  0E07               	movlw	7
  9142  002114  6E09               	movwf	OLED_SPuts@y^0,c
  9143  002116  0EFB               	movlw	low STR_14
  9144  002118  6E0B               	movwf	OLED_SPuts@buffer^0,c
  9145  00211A  0E7F               	movlw	high STR_14
  9146  00211C  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  9147  00211E  EC03  F00E         	call	_OLED_SPuts	;wreg free
  9148  002122                     l4511:
  9149                           
  9150                           ;main.c: 171:     if(configuracion == 5) OLED_SPuts(50,7,"YEAR");
  9151  002122  0E05               	movlw	5
  9152  002124  185E               	xorwf	_configuracion^0,w,c
  9153  002126  A4D8               	btfss	status,2,c
  9154  002128  EF98  F010         	goto	u4461
  9155  00212C  EF9A  F010         	goto	u4460
  9156  002130                     u4461:
  9157  002130  EFA8  F010         	goto	l201
  9158  002134                     u4460:
  9159  002134  0E00               	movlw	0
  9160  002136  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  9161  002138  0E32               	movlw	50
  9162  00213A  6E07               	movwf	OLED_SPuts@x^0,c
  9163  00213C  0E00               	movlw	0
  9164  00213E  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  9165  002140  0E07               	movlw	7
  9166  002142  6E09               	movwf	OLED_SPuts@y^0,c
  9167  002144  0EE9               	movlw	low STR_15
  9168  002146  6E0B               	movwf	OLED_SPuts@buffer^0,c
  9169  002148  0E7F               	movlw	high STR_15
  9170  00214A  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  9171  00214C  EC03  F00E         	call	_OLED_SPuts	;wreg free
  9172  002150                     l201:
  9173  002150  0012               	return		;funcret
  9174  002152                     __end_of_Print_config:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function _Print_Segundo *****************
  9178 ;; Defined at:
  9179 ;;		line 149 in file "main.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      void 
  9186 ;; Registers used:
  9187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9193 ;;      Params:         0       0       0       0       0       0       0       0       0
  9194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9196 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9197 ;;Total ram usage:        0 bytes
  9198 ;; Hardware stack levels used: 1
  9199 ;; Hardware stack levels required when called: 9
  9200 ;; This function calls:
  9201 ;;		_OLED_SPuts
  9202 ;;		___awdiv
  9203 ;;		___awmod
  9204 ;;		_sprintf
  9205 ;; This function is called by:
  9206 ;;		_Print_Menu
  9207 ;;		_get_RTC
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           	psect	text24
  9212  003072                     __ptext24:
  9213                           	callstack 0
  9214  003072                     _Print_Segundo:
  9215                           	callstack 20
  9216  003072                     
  9217                           ;main.c: 150:     sprintf(sms,"%d%d",Segundo/10,Segundo%10);
  9218  003072  0EC5               	movlw	low _sms
  9219  003074  0100               	movlb	0	; () banked
  9220  003076  6FD9               	movwf	sprintf@s& (0+255),b
  9221  003078  0E00               	movlw	high _sms
  9222  00307A  6FDA               	movwf	(sprintf@s+1)& (0+255),b
  9223  00307C  0EEE               	movlw	low STR_6
  9224  00307E  6FDB               	movwf	sprintf@fmt& (0+255),b
  9225  003080  0E7F               	movlw	high STR_6
  9226  003082  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
  9227  003084  C0F3  F001         	movff	_Segundo,___awdiv@dividend
  9228  003088  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9229  00308A  0E00               	movlw	0
  9230  00308C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9231  00308E  0E0A               	movlw	10
  9232  003090  6E03               	movwf	___awdiv@divisor^0,c
  9233  003092  ECE2  F013         	call	___awdiv	;wreg free
  9234  003096  C001  F0DD         	movff	?___awdiv,?_sprintf+4
  9235  00309A  C002  F0DE         	movff	?___awdiv+1,?_sprintf+5
  9236  00309E  C0F3  F001         	movff	_Segundo,___awmod@dividend
  9237  0030A2  6A02               	clrf	(___awmod@dividend+1)^0,c
  9238  0030A4  0E00               	movlw	0
  9239  0030A6  6E04               	movwf	(___awmod@divisor+1)^0,c
  9240  0030A8  0E0A               	movlw	10
  9241  0030AA  6E03               	movwf	___awmod@divisor^0,c
  9242  0030AC  ECFE  F014         	call	___awmod	;wreg free
  9243  0030B0  C001  F0DF         	movff	?___awmod,?_sprintf+6
  9244  0030B4  C002  F0E0         	movff	?___awmod+1,?_sprintf+7
  9245  0030B8  EC74  F01A         	call	_sprintf	;wreg free
  9246  0030BC                     
  9247                           ;main.c: 151:     OLED_SPuts(90,5,sms);
  9248  0030BC  0E00               	movlw	0
  9249  0030BE  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  9250  0030C0  0E5A               	movlw	90
  9251  0030C2  6E07               	movwf	OLED_SPuts@x^0,c
  9252  0030C4  0E00               	movlw	0
  9253  0030C6  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  9254  0030C8  0E05               	movlw	5
  9255  0030CA  6E09               	movwf	OLED_SPuts@y^0,c
  9256  0030CC  0EC5               	movlw	low _sms
  9257  0030CE  6E0B               	movwf	OLED_SPuts@buffer^0,c
  9258  0030D0  0E00               	movlw	high _sms
  9259  0030D2  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  9260  0030D4  EC03  F00E         	call	_OLED_SPuts	;wreg free
  9261  0030D8  0012               	return		;funcret
  9262  0030DA                     __end_of_Print_Segundo:
  9263                           	callstack 0
  9264                           
  9265 ;; *************** function _Print_Minuto *****************
  9266 ;; Defined at:
  9267 ;;		line 145 in file "main.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;		None
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      void 
  9274 ;; Registers used:
  9275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9281 ;;      Params:         0       0       0       0       0       0       0       0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9284 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9285 ;;Total ram usage:        0 bytes
  9286 ;; Hardware stack levels used: 1
  9287 ;; Hardware stack levels required when called: 9
  9288 ;; This function calls:
  9289 ;;		_OLED_SPuts
  9290 ;;		___awdiv
  9291 ;;		___awmod
  9292 ;;		_sprintf
  9293 ;; This function is called by:
  9294 ;;		_Print_Menu
  9295 ;;		_get_RTC
  9296 ;;		_get_key
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text25
  9301  0030DA                     __ptext25:
  9302                           	callstack 0
  9303  0030DA                     _Print_Minuto:
  9304                           	callstack 20
  9305  0030DA                     
  9306                           ;main.c: 146:     sprintf(sms,"%d%d:",Minuto/10,Minuto%10);
  9307  0030DA  0EC5               	movlw	low _sms
  9308  0030DC  0100               	movlb	0	; () banked
  9309  0030DE  6FD9               	movwf	sprintf@s& (0+255),b
  9310  0030E0  0E00               	movlw	high _sms
  9311  0030E2  6FDA               	movwf	(sprintf@s+1)& (0+255),b
  9312  0030E4  0ED4               	movlw	low STR_4
  9313  0030E6  6FDB               	movwf	sprintf@fmt& (0+255),b
  9314  0030E8  0E7F               	movlw	high STR_4
  9315  0030EA  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
  9316  0030EC  C0F4  F001         	movff	_Minuto,___awdiv@dividend
  9317  0030F0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9318  0030F2  0E00               	movlw	0
  9319  0030F4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9320  0030F6  0E0A               	movlw	10
  9321  0030F8  6E03               	movwf	___awdiv@divisor^0,c
  9322  0030FA  ECE2  F013         	call	___awdiv	;wreg free
  9323  0030FE  C001  F0DD         	movff	?___awdiv,?_sprintf+4
  9324  003102  C002  F0DE         	movff	?___awdiv+1,?_sprintf+5
  9325  003106  C0F4  F001         	movff	_Minuto,___awmod@dividend
  9326  00310A  6A02               	clrf	(___awmod@dividend+1)^0,c
  9327  00310C  0E00               	movlw	0
  9328  00310E  6E04               	movwf	(___awmod@divisor+1)^0,c
  9329  003110  0E0A               	movlw	10
  9330  003112  6E03               	movwf	___awmod@divisor^0,c
  9331  003114  ECFE  F014         	call	___awmod	;wreg free
  9332  003118  C001  F0DF         	movff	?___awmod,?_sprintf+6
  9333  00311C  C002  F0E0         	movff	?___awmod+1,?_sprintf+7
  9334  003120  EC74  F01A         	call	_sprintf	;wreg free
  9335  003124                     
  9336                           ;main.c: 147:     OLED_SPuts(50,5,sms);
  9337  003124  0E00               	movlw	0
  9338  003126  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  9339  003128  0E32               	movlw	50
  9340  00312A  6E07               	movwf	OLED_SPuts@x^0,c
  9341  00312C  0E00               	movlw	0
  9342  00312E  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  9343  003130  0E05               	movlw	5
  9344  003132  6E09               	movwf	OLED_SPuts@y^0,c
  9345  003134  0EC5               	movlw	low _sms
  9346  003136  6E0B               	movwf	OLED_SPuts@buffer^0,c
  9347  003138  0E00               	movlw	high _sms
  9348  00313A  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  9349  00313C  EC03  F00E         	call	_OLED_SPuts	;wreg free
  9350  003140  0012               	return		;funcret
  9351  003142                     __end_of_Print_Minuto:
  9352                           	callstack 0
  9353                           
  9354 ;; *************** function _Print_Hora *****************
  9355 ;; Defined at:
  9356 ;;		line 141 in file "main.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;		None
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;		None
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  1    wreg      void 
  9363 ;; Registers used:
  9364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9370 ;;      Params:         0       0       0       0       0       0       0       0       0
  9371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9374 ;;Total ram usage:        0 bytes
  9375 ;; Hardware stack levels used: 1
  9376 ;; Hardware stack levels required when called: 9
  9377 ;; This function calls:
  9378 ;;		_OLED_SPuts
  9379 ;;		___awdiv
  9380 ;;		___awmod
  9381 ;;		_sprintf
  9382 ;; This function is called by:
  9383 ;;		_Print_Menu
  9384 ;;		_get_RTC
  9385 ;;		_get_key
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           	psect	text26
  9390  003142                     __ptext26:
  9391                           	callstack 0
  9392  003142                     _Print_Hora:
  9393                           	callstack 20
  9394  003142                     
  9395                           ;main.c: 142:     sprintf(sms,"%d%d:",Hora/10,Hora%10);
  9396  003142  0EC5               	movlw	low _sms
  9397  003144  0100               	movlb	0	; () banked
  9398  003146  6FD9               	movwf	sprintf@s& (0+255),b
  9399  003148  0E00               	movlw	high _sms
  9400  00314A  6FDA               	movwf	(sprintf@s+1)& (0+255),b
  9401  00314C  0ED4               	movlw	low STR_4
  9402  00314E  6FDB               	movwf	sprintf@fmt& (0+255),b
  9403  003150  0E7F               	movlw	high STR_4
  9404  003152  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
  9405  003154  C0F5  F001         	movff	_Hora,___awdiv@dividend
  9406  003158  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9407  00315A  0E00               	movlw	0
  9408  00315C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9409  00315E  0E0A               	movlw	10
  9410  003160  6E03               	movwf	___awdiv@divisor^0,c
  9411  003162  ECE2  F013         	call	___awdiv	;wreg free
  9412  003166  C001  F0DD         	movff	?___awdiv,?_sprintf+4
  9413  00316A  C002  F0DE         	movff	?___awdiv+1,?_sprintf+5
  9414  00316E  C0F5  F001         	movff	_Hora,___awmod@dividend
  9415  003172  6A02               	clrf	(___awmod@dividend+1)^0,c
  9416  003174  0E00               	movlw	0
  9417  003176  6E04               	movwf	(___awmod@divisor+1)^0,c
  9418  003178  0E0A               	movlw	10
  9419  00317A  6E03               	movwf	___awmod@divisor^0,c
  9420  00317C  ECFE  F014         	call	___awmod	;wreg free
  9421  003180  C001  F0DF         	movff	?___awmod,?_sprintf+6
  9422  003184  C002  F0E0         	movff	?___awmod+1,?_sprintf+7
  9423  003188  EC74  F01A         	call	_sprintf	;wreg free
  9424  00318C                     
  9425                           ;main.c: 143:     OLED_SPuts(10,5,sms);
  9426  00318C  0E00               	movlw	0
  9427  00318E  6E08               	movwf	(OLED_SPuts@x+1)^0,c
  9428  003190  0E0A               	movlw	10
  9429  003192  6E07               	movwf	OLED_SPuts@x^0,c
  9430  003194  0E00               	movlw	0
  9431  003196  6E0A               	movwf	(OLED_SPuts@y+1)^0,c
  9432  003198  0E05               	movlw	5
  9433  00319A  6E09               	movwf	OLED_SPuts@y^0,c
  9434  00319C  0EC5               	movlw	low _sms
  9435  00319E  6E0B               	movwf	OLED_SPuts@buffer^0,c
  9436  0031A0  0E00               	movlw	high _sms
  9437  0031A2  6E0C               	movwf	(OLED_SPuts@buffer+1)^0,c
  9438  0031A4  EC03  F00E         	call	_OLED_SPuts	;wreg free
  9439  0031A8  0012               	return		;funcret
  9440  0031AA                     __end_of_Print_Hora:
  9441                           	callstack 0
  9442                           
  9443 ;; *************** function _OLED_SPuts *****************
  9444 ;; Defined at:
  9445 ;;		line 82 in file "Oled.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  x               2    6[COMRAM] unsigned int 
  9448 ;;  y               2    8[COMRAM] unsigned int 
  9449 ;;  buffer          2   10[COMRAM] PTR unsigned char 
  9450 ;;		 -> STR_15(5), STR_14(4), STR_13(4), STR_12(5), 
  9451 ;;		 -> STR_11(4), STR_10(5), sms(10), STR_2(10), 
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;  i               2   21[COMRAM] int 
  9454 ;;  xi              2   19[COMRAM] int 
  9455 ;;  valve           2   16[COMRAM] int 
  9456 ;;  c               1   18[COMRAM] unsigned char 
  9457 ;;  j               2   23[COMRAM] int 
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9467 ;;      Params:         6       0       0       0       0       0       0       0       0
  9468 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9469 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9470 ;;      Totals:        19       0       0       0       0       0       0       0       0
  9471 ;;Total ram usage:       19 bytes
  9472 ;; Hardware stack levels used: 1
  9473 ;; Hardware stack levels required when called: 6
  9474 ;; This function calls:
  9475 ;;		_I2C_Send
  9476 ;;		_I2C_Start
  9477 ;;		_I2C_Stop
  9478 ;;		_OLEDsetCursor
  9479 ;; This function is called by:
  9480 ;;		_Print_Menu
  9481 ;;		_Print_Hora
  9482 ;;		_Print_Minuto
  9483 ;;		_Print_Segundo
  9484 ;;		_Print_Dia
  9485 ;;		_Print_Mes
  9486 ;;		_Print_Anio
  9487 ;;		_Print_config
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text27
  9492  001C06                     __ptext27:
  9493                           	callstack 0
  9494  001C06                     _OLED_SPuts:
  9495                           	callstack 22
  9496  001C06                     
  9497                           ;Oled.c: 83:     OLEDsetCursor(x,y);
  9498  001C06  C007  F003         	movff	OLED_SPuts@x,OLEDsetCursor@x
  9499  001C0A  C008  F004         	movff	OLED_SPuts@x+1,OLEDsetCursor@x+1
  9500  001C0E  C009  F005         	movff	OLED_SPuts@y,OLEDsetCursor@y
  9501  001C12  C00A  F006         	movff	OLED_SPuts@y+1,OLEDsetCursor@y+1
  9502  001C16  ECB4  F01C         	call	_OLEDsetCursor	;wreg free
  9503                           
  9504                           ;Oled.c: 84:     while(*buffer){
  9505  001C1A  EFA0  F00E         	goto	l4103
  9506  001C1E                     l4059:
  9507                           
  9508                           ;Oled.c: 85:         for(int j=0;j<2;j++){
  9509  001C1E  0E00               	movlw	0
  9510  001C20  6E19               	movwf	(OLED_SPuts@j+1)^0,c
  9511  001C22  0E00               	movlw	0
  9512  001C24  6E18               	movwf	OLED_SPuts@j^0,c
  9513  001C26                     l4065:
  9514                           
  9515                           ;Oled.c: 86:             int valve = (int)y+ j;
  9516  001C26  5018               	movf	OLED_SPuts@j^0,w,c
  9517  001C28  2409               	addwf	OLED_SPuts@y^0,w,c
  9518  001C2A  6E11               	movwf	OLED_SPuts@valve^0,c
  9519  001C2C  5019               	movf	(OLED_SPuts@j+1)^0,w,c
  9520  001C2E  200A               	addwfc	(OLED_SPuts@y+1)^0,w,c
  9521  001C30  6E12               	movwf	(OLED_SPuts@valve+1)^0,c
  9522  001C32                     
  9523                           ;Oled.c: 87:             OLEDsetCursor(x,(unsigned int)valve);
  9524  001C32  C007  F003         	movff	OLED_SPuts@x,OLEDsetCursor@x
  9525  001C36  C008  F004         	movff	OLED_SPuts@x+1,OLEDsetCursor@x+1
  9526  001C3A  C011  F005         	movff	OLED_SPuts@valve,OLEDsetCursor@y
  9527  001C3E  C012  F006         	movff	OLED_SPuts@valve+1,OLEDsetCursor@y+1
  9528  001C42  ECB4  F01C         	call	_OLEDsetCursor	;wreg free
  9529  001C46                     
  9530                           ;Oled.c: 88:             I2C_Start();
  9531  001C46  EC78  F01D         	call	_I2C_Start	;wreg free
  9532  001C4A                     
  9533                           ;Oled.c: 89:             I2C_Send(0x3C << 1);
  9534  001C4A  0E78               	movlw	120
  9535  001C4C  EC35  F01D         	call	_I2C_Send
  9536  001C50                     
  9537                           ;Oled.c: 90:             I2C_Send(0x40);
  9538  001C50  0E40               	movlw	64
  9539  001C52  EC35  F01D         	call	_I2C_Send
  9540  001C56                     
  9541                           ;Oled.c: 91:             char c = *buffer;
  9542  001C56  C00B  FFF6         	movff	OLED_SPuts@buffer,tblptrl
  9543  001C5A  C00C  FFF7         	movff	OLED_SPuts@buffer+1,tblptrh
  9544  001C5E  6AF8               	clrf	tblptru,c
  9545  001C60  0E07               	movlw	(high __ramtop+-1)
  9546  001C62  64F7               	cpfsgt	tblptrh,c
  9547  001C64  D003               	bra	u3767
  9548  001C66  0008               	tblrd		*
  9549  001C68  50F5               	movf	tablat,w,c
  9550  001C6A  D005               	bra	u3760
  9551  001C6C                     u3767:
  9552  001C6C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9553  001C70  CFF7 FFE2          	movff	tblptrh,fsr1h
  9554  001C74  50E7               	movf	indf1,w,c
  9555  001C76                     u3760:
  9556  001C76  6E13               	movwf	OLED_SPuts@c^0,c
  9557  001C78                     
  9558                           ;Oled.c: 92:             int xi = c - 32;
  9559  001C78  0EE0               	movlw	224
  9560  001C7A  2413               	addwf	OLED_SPuts@c^0,w,c
  9561  001C7C  6E14               	movwf	OLED_SPuts@xi^0,c
  9562  001C7E  6A15               	clrf	(OLED_SPuts@xi+1)^0,c
  9563  001C80  0EFF               	movlw	255
  9564  001C82  2215               	addwfc	(OLED_SPuts@xi+1)^0,f,c
  9565  001C84                     
  9566                           ;Oled.c: 93:             xi=xi*32 + (16*j);
  9567  001C84  C018  F00D         	movff	OLED_SPuts@j,??_OLED_SPuts
  9568  001C88  C019  F00E         	movff	OLED_SPuts@j+1,??_OLED_SPuts+1
  9569  001C8C  3A0D               	swapf	??_OLED_SPuts^0,f,c
  9570  001C8E  3A0E               	swapf	(??_OLED_SPuts+1)^0,f,c
  9571  001C90  0EF0               	movlw	240
  9572  001C92  160E               	andwf	(??_OLED_SPuts+1)^0,f,c
  9573  001C94  500D               	movf	??_OLED_SPuts^0,w,c
  9574  001C96  0B0F               	andlw	15
  9575  001C98  120E               	iorwf	(??_OLED_SPuts+1)^0,f,c
  9576  001C9A  0EF0               	movlw	240
  9577  001C9C  160D               	andwf	??_OLED_SPuts^0,f,c
  9578  001C9E  C014  F00F         	movff	OLED_SPuts@xi,??_OLED_SPuts+2
  9579  001CA2  C015  F010         	movff	OLED_SPuts@xi+1,??_OLED_SPuts+3
  9580  001CA6  0E05               	movlw	5
  9581  001CA8                     u3775:
  9582  001CA8  90D8               	bcf	status,0,c
  9583  001CAA  360F               	rlcf	(??_OLED_SPuts+2)^0,f,c
  9584  001CAC  3610               	rlcf	(??_OLED_SPuts+3)^0,f,c
  9585  001CAE  2EE8               	decfsz	wreg,f,c
  9586  001CB0  EF54  F00E         	goto	u3775
  9587  001CB4  500D               	movf	??_OLED_SPuts^0,w,c
  9588  001CB6  240F               	addwf	(??_OLED_SPuts+2)^0,w,c
  9589  001CB8  6E14               	movwf	OLED_SPuts@xi^0,c
  9590  001CBA  500E               	movf	(??_OLED_SPuts+1)^0,w,c
  9591  001CBC  2010               	addwfc	(??_OLED_SPuts+3)^0,w,c
  9592  001CBE  6E15               	movwf	(OLED_SPuts@xi+1)^0,c
  9593  001CC0                     
  9594                           ;Oled.c: 94:             for(int i=0;i<16;i++){
  9595  001CC0  0E00               	movlw	0
  9596  001CC2  6E17               	movwf	(OLED_SPuts@i+1)^0,c
  9597  001CC4  0E00               	movlw	0
  9598  001CC6  6E16               	movwf	OLED_SPuts@i^0,c
  9599  001CC8                     l4087:
  9600                           
  9601                           ;Oled.c: 95:                 I2C_Send(BIG_FONTS[xi+i]);
  9602  001CC8  0E4F               	movlw	low _BIG_FONTS
  9603  001CCA  6E0D               	movwf	??_OLED_SPuts^0,c
  9604  001CCC  0E70               	movlw	high _BIG_FONTS
  9605  001CCE  6E0E               	movwf	(??_OLED_SPuts+1)^0,c
  9606  001CD0  5014               	movf	OLED_SPuts@xi^0,w,c
  9607  001CD2  260D               	addwf	??_OLED_SPuts^0,f,c
  9608  001CD4  5015               	movf	(OLED_SPuts@xi+1)^0,w,c
  9609  001CD6  220E               	addwfc	(??_OLED_SPuts+1)^0,f,c
  9610  001CD8  5016               	movf	OLED_SPuts@i^0,w,c
  9611  001CDA  260D               	addwf	??_OLED_SPuts^0,f,c
  9612  001CDC  5017               	movf	(OLED_SPuts@i+1)^0,w,c
  9613  001CDE  220E               	addwfc	(??_OLED_SPuts+1)^0,f,c
  9614  001CE0  C00D  FFF6         	movff	??_OLED_SPuts,tblptrl
  9615  001CE4  C00E  FFF7         	movff	??_OLED_SPuts+1,tblptrh
  9616  001CE8                     	if	0	;tblptru may be non-zero
  9617  001CE8                     	endif
  9618  001CE8                     	if	0	;tblptru may be non-zero
  9619  001CE8                     	endif
  9620  001CE8  0008               	tblrd		*
  9621  001CEA  50F5               	movf	tablat,w,c
  9622  001CEC  EC35  F01D         	call	_I2C_Send
  9623  001CF0                     
  9624                           ;Oled.c: 96:             }
  9625  001CF0  4A16               	infsnz	OLED_SPuts@i^0,f,c
  9626  001CF2  2A17               	incf	(OLED_SPuts@i+1)^0,f,c
  9627  001CF4  BE17               	btfsc	(OLED_SPuts@i+1)^0,7,c
  9628  001CF6  EF86  F00E         	goto	u3781
  9629  001CFA  5017               	movf	(OLED_SPuts@i+1)^0,w,c
  9630  001CFC  E109               	bnz	u3780
  9631  001CFE  0E10               	movlw	16
  9632  001D00  5C16               	subwf	OLED_SPuts@i^0,w,c
  9633  001D02  A0D8               	btfss	status,0,c
  9634  001D04  EF86  F00E         	goto	u3781
  9635  001D08  EF88  F00E         	goto	u3780
  9636  001D0C                     u3781:
  9637  001D0C  EF64  F00E         	goto	l4087
  9638  001D10                     u3780:
  9639  001D10                     
  9640                           ;Oled.c: 97:             I2C_Stop();
  9641  001D10  EC8A  F01D         	call	_I2C_Stop	;wreg free
  9642  001D14                     
  9643                           ;Oled.c: 98:         }
  9644  001D14  4A18               	infsnz	OLED_SPuts@j^0,f,c
  9645  001D16  2A19               	incf	(OLED_SPuts@j+1)^0,f,c
  9646  001D18  BE19               	btfsc	(OLED_SPuts@j+1)^0,7,c
  9647  001D1A  EF98  F00E         	goto	u3791
  9648  001D1E  5019               	movf	(OLED_SPuts@j+1)^0,w,c
  9649  001D20  E109               	bnz	u3790
  9650  001D22  0E02               	movlw	2
  9651  001D24  5C18               	subwf	OLED_SPuts@j^0,w,c
  9652  001D26  A0D8               	btfss	status,0,c
  9653  001D28  EF98  F00E         	goto	u3791
  9654  001D2C  EF9A  F00E         	goto	u3790
  9655  001D30                     u3791:
  9656  001D30  EF13  F00E         	goto	l4065
  9657  001D34                     u3790:
  9658  001D34                     
  9659                           ;Oled.c: 99:         x+=13;
  9660  001D34  0E0D               	movlw	13
  9661  001D36  2607               	addwf	OLED_SPuts@x^0,f,c
  9662  001D38  0E00               	movlw	0
  9663  001D3A  2208               	addwfc	(OLED_SPuts@x+1)^0,f,c
  9664  001D3C                     
  9665                           ;Oled.c: 100:         buffer++;
  9666  001D3C  4A0B               	infsnz	OLED_SPuts@buffer^0,f,c
  9667  001D3E  2A0C               	incf	(OLED_SPuts@buffer+1)^0,f,c
  9668  001D40                     l4103:
  9669                           
  9670                           ;Oled.c: 84:     while(*buffer){
  9671  001D40  C00B  FFF6         	movff	OLED_SPuts@buffer,tblptrl
  9672  001D44  C00C  FFF7         	movff	OLED_SPuts@buffer+1,tblptrh
  9673  001D48  6AF8               	clrf	tblptru,c
  9674  001D4A  0E07               	movlw	(high __ramtop+-1)
  9675  001D4C  64F7               	cpfsgt	tblptrh,c
  9676  001D4E  D003               	bra	u3807
  9677  001D50  0008               	tblrd		*
  9678  001D52  50F5               	movf	tablat,w,c
  9679  001D54  D005               	bra	u3800
  9680  001D56                     u3807:
  9681  001D56  CFF6 FFE1          	movff	tblptrl,fsr1l
  9682  001D5A  CFF7 FFE2          	movff	tblptrh,fsr1h
  9683  001D5E  50E7               	movf	indf1,w,c
  9684  001D60                     u3800:
  9685  001D60  0900               	iorlw	0
  9686  001D62  A4D8               	btfss	status,2,c
  9687  001D64  EFB6  F00E         	goto	u3811
  9688  001D68  EFB8  F00E         	goto	u3810
  9689  001D6C                     u3811:
  9690  001D6C  EF0F  F00E         	goto	l4059
  9691  001D70                     u3810:
  9692  001D70  0012               	return		;funcret
  9693  001D72                     __end_of_OLED_SPuts:
  9694                           	callstack 0
  9695                           
  9696 ;; *************** function _OLED_NPuts *****************
  9697 ;; Defined at:
  9698 ;;		line 66 in file "Oled.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  buffer          2    6[COMRAM] PTR unsigned char 
  9701 ;;		 -> STR_3(18), 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  i               2   13[COMRAM] int 
  9704 ;;  x               2   11[COMRAM] int 
  9705 ;;  c               1   10[COMRAM] unsigned char 
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  1    wreg      void 
  9708 ;; Registers used:
  9709 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9715 ;;      Params:         2       0       0       0       0       0       0       0       0
  9716 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9717 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9718 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9719 ;;Total ram usage:        9 bytes
  9720 ;; Hardware stack levels used: 1
  9721 ;; Hardware stack levels required when called: 4
  9722 ;; This function calls:
  9723 ;;		_I2C_Send
  9724 ;;		_I2C_Start
  9725 ;;		_I2C_Stop
  9726 ;;		___wmul
  9727 ;; This function is called by:
  9728 ;;		_Print_Menu
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text28
  9733  002888                     __ptext28:
  9734                           	callstack 0
  9735  002888                     _OLED_NPuts:
  9736                           	callstack 25
  9737  002888                     
  9738                           ;Oled.c: 67:     I2C_Start();
  9739  002888  EC78  F01D         	call	_I2C_Start	;wreg free
  9740  00288C                     
  9741                           ;Oled.c: 68:     I2C_Send(0x3C << 1);
  9742  00288C  0E78               	movlw	120
  9743  00288E  EC35  F01D         	call	_I2C_Send
  9744  002892                     
  9745                           ;Oled.c: 69:     I2C_Send(0x40);
  9746  002892  0E40               	movlw	64
  9747  002894  EC35  F01D         	call	_I2C_Send
  9748                           
  9749                           ;Oled.c: 70:     while(*buffer){
  9750  002898  EF93  F014         	goto	l4475
  9751  00289C                     l4455:
  9752                           
  9753                           ;Oled.c: 71:         char c = *buffer;
  9754  00289C  C007  FFF6         	movff	OLED_NPuts@buffer,tblptrl
  9755  0028A0  C008  FFF7         	movff	OLED_NPuts@buffer+1,tblptrh
  9756  0028A4                     	if	0	;tblptru may be non-zero
  9757  0028A4                     	endif
  9758  0028A4                     	if	0	;tblptru may be non-zero
  9759  0028A4                     	endif
  9760  0028A4  0008               	tblrd		*
  9761  0028A6  CFF5 F00B          	movff	tablat,OLED_NPuts@c
  9762  0028AA                     
  9763                           ;Oled.c: 72:         int x = c - 32;
  9764  0028AA  0EE0               	movlw	224
  9765  0028AC  240B               	addwf	OLED_NPuts@c^0,w,c
  9766  0028AE  6E0C               	movwf	OLED_NPuts@x^0,c
  9767  0028B0  6A0D               	clrf	(OLED_NPuts@x+1)^0,c
  9768  0028B2  0EFF               	movlw	255
  9769  0028B4  220D               	addwfc	(OLED_NPuts@x+1)^0,f,c
  9770  0028B6                     
  9771                           ;Oled.c: 73:         x=x*6;
  9772  0028B6  C00C  F001         	movff	OLED_NPuts@x,___wmul@multiplier
  9773  0028BA  C00D  F002         	movff	OLED_NPuts@x+1,___wmul@multiplier+1
  9774  0028BE  0E00               	movlw	0
  9775  0028C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9776  0028C2  0E06               	movlw	6
  9777  0028C4  6E03               	movwf	___wmul@multiplicand^0,c
  9778  0028C6  ECDA  F01C         	call	___wmul	;wreg free
  9779  0028CA  C001  F00C         	movff	?___wmul,OLED_NPuts@x
  9780  0028CE  C002  F00D         	movff	?___wmul+1,OLED_NPuts@x+1
  9781  0028D2                     
  9782                           ;Oled.c: 74:         for(int i=0;i<6;i++){
  9783  0028D2  0E00               	movlw	0
  9784  0028D4  6E0F               	movwf	(OLED_NPuts@i+1)^0,c
  9785  0028D6  0E00               	movlw	0
  9786  0028D8  6E0E               	movwf	OLED_NPuts@i^0,c
  9787  0028DA                     l4467:
  9788                           
  9789                           ;Oled.c: 75:             I2C_Send(SMALL_FONTS[x+i]);
  9790  0028DA  0E2F               	movlw	low _SMALL_FONTS
  9791  0028DC  6E09               	movwf	??_OLED_NPuts^0,c
  9792  0028DE  0E7C               	movlw	high _SMALL_FONTS
  9793  0028E0  6E0A               	movwf	(??_OLED_NPuts+1)^0,c
  9794  0028E2  500C               	movf	OLED_NPuts@x^0,w,c
  9795  0028E4  2609               	addwf	??_OLED_NPuts^0,f,c
  9796  0028E6  500D               	movf	(OLED_NPuts@x+1)^0,w,c
  9797  0028E8  220A               	addwfc	(??_OLED_NPuts+1)^0,f,c
  9798  0028EA  500E               	movf	OLED_NPuts@i^0,w,c
  9799  0028EC  2609               	addwf	??_OLED_NPuts^0,f,c
  9800  0028EE  500F               	movf	(OLED_NPuts@i+1)^0,w,c
  9801  0028F0  220A               	addwfc	(??_OLED_NPuts+1)^0,f,c
  9802  0028F2  C009  FFF6         	movff	??_OLED_NPuts,tblptrl
  9803  0028F6  C00A  FFF7         	movff	??_OLED_NPuts+1,tblptrh
  9804  0028FA                     	if	0	;tblptru may be non-zero
  9805  0028FA                     	endif
  9806  0028FA                     	if	0	;tblptru may be non-zero
  9807  0028FA                     	endif
  9808  0028FA  0008               	tblrd		*
  9809  0028FC  50F5               	movf	tablat,w,c
  9810  0028FE  EC35  F01D         	call	_I2C_Send
  9811  002902                     
  9812                           ;Oled.c: 76:         }
  9813  002902  4A0E               	infsnz	OLED_NPuts@i^0,f,c
  9814  002904  2A0F               	incf	(OLED_NPuts@i+1)^0,f,c
  9815  002906  BE0F               	btfsc	(OLED_NPuts@i+1)^0,7,c
  9816  002908  EF8F  F014         	goto	u4391
  9817  00290C  500F               	movf	(OLED_NPuts@i+1)^0,w,c
  9818  00290E  E109               	bnz	u4390
  9819  002910  0E06               	movlw	6
  9820  002912  5C0E               	subwf	OLED_NPuts@i^0,w,c
  9821  002914  A0D8               	btfss	status,0,c
  9822  002916  EF8F  F014         	goto	u4391
  9823  00291A  EF91  F014         	goto	u4390
  9824  00291E                     u4391:
  9825  00291E  EF6D  F014         	goto	l4467
  9826  002922                     u4390:
  9827  002922                     
  9828                           ;Oled.c: 77:         buffer++;
  9829  002922  4A07               	infsnz	OLED_NPuts@buffer^0,f,c
  9830  002924  2A08               	incf	(OLED_NPuts@buffer+1)^0,f,c
  9831  002926                     l4475:
  9832                           
  9833                           ;Oled.c: 70:     while(*buffer){
  9834  002926  C007  FFF6         	movff	OLED_NPuts@buffer,tblptrl
  9835  00292A  C008  FFF7         	movff	OLED_NPuts@buffer+1,tblptrh
  9836  00292E                     	if	0	;tblptru may be non-zero
  9837  00292E                     	endif
  9838  00292E                     	if	0	;tblptru may be non-zero
  9839  00292E                     	endif
  9840  00292E  0008               	tblrd		*
  9841  002930  50F5               	movf	tablat,w,c
  9842  002932  0900               	iorlw	0
  9843  002934  A4D8               	btfss	status,2,c
  9844  002936  EF9F  F014         	goto	u4401
  9845  00293A  EFA1  F014         	goto	u4400
  9846  00293E                     u4401:
  9847  00293E  EF4E  F014         	goto	l4455
  9848  002942                     u4400:
  9849  002942                     
  9850                           ;Oled.c: 79:     I2C_Stop();
  9851  002942  EC8A  F01D         	call	_I2C_Stop	;wreg free
  9852  002946  0012               	return		;funcret
  9853  002948                     __end_of_OLED_NPuts:
  9854                           	callstack 0
  9855                           
  9856 ;; *************** function _OLEDClear *****************
  9857 ;; Defined at:
  9858 ;;		line 105 in file "Oled.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;		None
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  i               2    6[COMRAM] int 
  9863 ;; Return value:  Size  Location     Type
  9864 ;;                  1    wreg      void 
  9865 ;; Registers used:
  9866 ;;		wreg, status,2, status,0, cstack
  9867 ;; Tracked objects:
  9868 ;;		On entry : 0/0
  9869 ;;		On exit  : 0/0
  9870 ;;		Unchanged: 0/0
  9871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9872 ;;      Params:         0       0       0       0       0       0       0       0       0
  9873 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9875 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9876 ;;Total ram usage:        2 bytes
  9877 ;; Hardware stack levels used: 1
  9878 ;; Hardware stack levels required when called: 6
  9879 ;; This function calls:
  9880 ;;		_I2C_Send
  9881 ;;		_I2C_Start
  9882 ;;		_I2C_Stop
  9883 ;;		_OLEDsetCursor
  9884 ;; This function is called by:
  9885 ;;		_Print_Menu
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text29
  9890  003442                     __ptext29:
  9891                           	callstack 0
  9892  003442                     _OLEDClear:
  9893                           	callstack 23
  9894  003442                     
  9895                           ;Oled.c: 106:     OLEDsetCursor(0,0);
  9896  003442  0E00               	movlw	0
  9897  003444  6E04               	movwf	(OLEDsetCursor@x+1)^0,c
  9898  003446  0E00               	movlw	0
  9899  003448  6E03               	movwf	OLEDsetCursor@x^0,c
  9900  00344A  0E00               	movlw	0
  9901  00344C  6E06               	movwf	(OLEDsetCursor@y+1)^0,c
  9902  00344E  0E00               	movlw	0
  9903  003450  6E05               	movwf	OLEDsetCursor@y^0,c
  9904  003452  ECB4  F01C         	call	_OLEDsetCursor	;wreg free
  9905  003456                     
  9906                           ;Oled.c: 107:     I2C_Start();
  9907  003456  EC78  F01D         	call	_I2C_Start	;wreg free
  9908  00345A                     
  9909                           ;Oled.c: 108:     I2C_Send(0x3C << 1);
  9910  00345A  0E78               	movlw	120
  9911  00345C  EC35  F01D         	call	_I2C_Send
  9912  003460                     
  9913                           ;Oled.c: 109:     I2C_Send(0x40);
  9914  003460  0E40               	movlw	64
  9915  003462  EC35  F01D         	call	_I2C_Send
  9916                           
  9917                           ;Oled.c: 110:     for(int i = 0; i < 1024; i++){
  9918  003466  0E00               	movlw	0
  9919  003468  6E08               	movwf	(OLEDClear@i+1)^0,c
  9920  00346A  0E00               	movlw	0
  9921  00346C  6E07               	movwf	OLEDClear@i^0,c
  9922  00346E                     l4441:
  9923                           
  9924                           ;Oled.c: 111:         I2C_Send(0);
  9925  00346E  0E00               	movlw	0
  9926  003470  EC35  F01D         	call	_I2C_Send
  9927  003474                     
  9928                           ;Oled.c: 112:     }
  9929  003474  4A07               	infsnz	OLEDClear@i^0,f,c
  9930  003476  2A08               	incf	(OLEDClear@i+1)^0,f,c
  9931  003478  BE08               	btfsc	(OLEDClear@i+1)^0,7,c
  9932  00347A  EF46  F01A         	goto	u4381
  9933  00347E  0E04               	movlw	4
  9934  003480  5C08               	subwf	(OLEDClear@i+1)^0,w,c
  9935  003482  A0D8               	btfss	status,0,c
  9936  003484  EF46  F01A         	goto	u4381
  9937  003488  EF48  F01A         	goto	u4380
  9938  00348C                     u4381:
  9939  00348C  EF37  F01A         	goto	l4441
  9940  003490                     u4380:
  9941  003490                     
  9942                           ;Oled.c: 113:     I2C_Stop();
  9943  003490  EC8A  F01D         	call	_I2C_Stop	;wreg free
  9944  003494  0012               	return		;funcret
  9945  003496                     __end_of_OLEDClear:
  9946                           	callstack 0
  9947                           
  9948 ;; *************** function _OLEDsetCursor *****************
  9949 ;; Defined at:
  9950 ;;		line 57 in file "Oled.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  x               2    2[COMRAM] unsigned int 
  9953 ;;  y               2    4[COMRAM] unsigned int 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;		None
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  1    wreg      void 
  9958 ;; Registers used:
  9959 ;;		wreg, status,2, cstack
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9965 ;;      Params:         4       0       0       0       0       0       0       0       0
  9966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9968 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9969 ;;Total ram usage:        4 bytes
  9970 ;; Hardware stack levels used: 1
  9971 ;; Hardware stack levels required when called: 5
  9972 ;; This function calls:
  9973 ;;		_ssd1306_command
  9974 ;; This function is called by:
  9975 ;;		_Print_Menu
  9976 ;;		_OLED_SPuts
  9977 ;;		_OLEDClear
  9978 ;; This function uses a non-reentrant model
  9979 ;;
  9980                           
  9981                           	psect	text30
  9982  003968                     __ptext30:
  9983                           	callstack 0
  9984  003968                     _OLEDsetCursor:
  9985                           	callstack 22
  9986  003968                     
  9987                           ;Oled.c: 58:     ssd1306_command(0x21);
  9988  003968  0E21               	movlw	33
  9989  00396A  ECFE  F01C         	call	_ssd1306_command
  9990                           
  9991                           ;Oled.c: 59:     ssd1306_command((unsigned char)x);
  9992  00396E  5003               	movf	OLEDsetCursor@x^0,w,c
  9993  003970  ECFE  F01C         	call	_ssd1306_command
  9994                           
  9995                           ;Oled.c: 60:     ssd1306_command(0x7F);
  9996  003974  0E7F               	movlw	127
  9997  003976  ECFE  F01C         	call	_ssd1306_command
  9998                           
  9999                           ;Oled.c: 61:     ssd1306_command(0x22);
 10000  00397A  0E22               	movlw	34
 10001  00397C  ECFE  F01C         	call	_ssd1306_command
 10002                           
 10003                           ;Oled.c: 62:     ssd1306_command((unsigned char)y);
 10004  003980  5005               	movf	OLEDsetCursor@y^0,w,c
 10005  003982  ECFE  F01C         	call	_ssd1306_command
 10006                           
 10007                           ;Oled.c: 63:     ssd1306_command(0x07);
 10008  003986  0E07               	movlw	7
 10009  003988  ECFE  F01C         	call	_ssd1306_command
 10010  00398C  0012               	return		;funcret
 10011  00398E                     __end_of_OLEDsetCursor:
 10012                           	callstack 0
 10013                           
 10014 ;; *************** function _OLED_Init *****************
 10015 ;; Defined at:
 10016 ;;		line 13 in file "Oled.c"
 10017 ;; Parameters:    Size  Location     Type
 10018 ;;		None
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;		None
 10021 ;; Return value:  Size  Location     Type
 10022 ;;                  1    wreg      void 
 10023 ;; Registers used:
 10024 ;;		wreg, status,2, status,0, cstack
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10030 ;;      Params:         0       0       0       0       0       0       0       0       0
 10031 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10032 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10033 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10034 ;;Total ram usage:        0 bytes
 10035 ;; Hardware stack levels used: 1
 10036 ;; Hardware stack levels required when called: 5
 10037 ;; This function calls:
 10038 ;;		_I2C_Init
 10039 ;;		_I2C_Stop
 10040 ;;		_ssd1306_command
 10041 ;; This function is called by:
 10042 ;;		_main
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           	psect	text31
 10047  002B58                     __ptext31:
 10048                           	callstack 0
 10049  002B58                     _OLED_Init:
 10050                           	callstack 25
 10051  002B58                     
 10052                           ;Oled.c: 14:     I2C_Init(0u);
 10053  002B58  0E00               	movlw	0
 10054  002B5A  EC8C  F01C         	call	_I2C_Init
 10055  002B5E                     
 10056                           ;Oled.c: 15:     I2C_Stop();
 10057  002B5E  EC8A  F01D         	call	_I2C_Stop	;wreg free
 10058  002B62                     
 10059                           ;Oled.c: 16:     ssd1306_command( 0xAE);
 10060  002B62  0EAE               	movlw	174
 10061  002B64  ECFE  F01C         	call	_ssd1306_command
 10062  002B68                     
 10063                           ;Oled.c: 17:     ssd1306_command( 0xD5);
 10064  002B68  0ED5               	movlw	213
 10065  002B6A  ECFE  F01C         	call	_ssd1306_command
 10066  002B6E                     
 10067                           ;Oled.c: 18:     ssd1306_command( 0x80);
 10068  002B6E  0E80               	movlw	128
 10069  002B70  ECFE  F01C         	call	_ssd1306_command
 10070  002B74                     
 10071                           ;Oled.c: 19:     ssd1306_command( 0xA8 );
 10072  002B74  0EA8               	movlw	168
 10073  002B76  ECFE  F01C         	call	_ssd1306_command
 10074  002B7A                     
 10075                           ;Oled.c: 20:     ssd1306_command( 64 - 1 );
 10076  002B7A  0E3F               	movlw	63
 10077  002B7C  ECFE  F01C         	call	_ssd1306_command
 10078  002B80                     
 10079                           ;Oled.c: 21:     ssd1306_command( 0xD3 );
 10080  002B80  0ED3               	movlw	211
 10081  002B82  ECFE  F01C         	call	_ssd1306_command
 10082  002B86                     
 10083                           ;Oled.c: 22:     ssd1306_command(0x00);
 10084  002B86  0E00               	movlw	0
 10085  002B88  ECFE  F01C         	call	_ssd1306_command
 10086  002B8C                     
 10087                           ;Oled.c: 23:     ssd1306_command( 0x40|0x00);
 10088  002B8C  0E40               	movlw	64
 10089  002B8E  ECFE  F01C         	call	_ssd1306_command
 10090  002B92                     
 10091                           ;Oled.c: 24:     ssd1306_command( 0x8D );
 10092  002B92  0E8D               	movlw	141
 10093  002B94  ECFE  F01C         	call	_ssd1306_command
 10094  002B98                     
 10095                           ;Oled.c: 26:     ssd1306_command(0x14);
 10096  002B98  0E14               	movlw	20
 10097  002B9A  ECFE  F01C         	call	_ssd1306_command
 10098  002B9E                     
 10099                           ;Oled.c: 27:     ssd1306_command( 0x20 );
 10100  002B9E  0E20               	movlw	32
 10101  002BA0  ECFE  F01C         	call	_ssd1306_command
 10102  002BA4                     
 10103                           ;Oled.c: 28:     ssd1306_command(0x00);
 10104  002BA4  0E00               	movlw	0
 10105  002BA6  ECFE  F01C         	call	_ssd1306_command
 10106  002BAA                     
 10107                           ;Oled.c: 29:     ssd1306_command( 0xA0| 0x01);
 10108  002BAA  0EA1               	movlw	161
 10109  002BAC  ECFE  F01C         	call	_ssd1306_command
 10110  002BB0                     
 10111                           ;Oled.c: 30:     ssd1306_command( 0xC8 );
 10112  002BB0  0EC8               	movlw	200
 10113  002BB2  ECFE  F01C         	call	_ssd1306_command
 10114  002BB6                     
 10115                           ;Oled.c: 39:   ssd1306_command( 0xDA );
 10116  002BB6  0EDA               	movlw	218
 10117  002BB8  ECFE  F01C         	call	_ssd1306_command
 10118  002BBC                     
 10119                           ;Oled.c: 40:   ssd1306_command( 0x12 );
 10120  002BBC  0E12               	movlw	18
 10121  002BBE  ECFE  F01C         	call	_ssd1306_command
 10122  002BC2                     
 10123                           ;Oled.c: 41:   ssd1306_command( 0x81 );
 10124  002BC2  0E81               	movlw	129
 10125  002BC4  ECFE  F01C         	call	_ssd1306_command
 10126  002BC8                     
 10127                           ;Oled.c: 43:   ssd1306_command(0xCF);
 10128  002BC8  0ECF               	movlw	207
 10129  002BCA  ECFE  F01C         	call	_ssd1306_command
 10130  002BCE                     
 10131                           ;Oled.c: 46:   ssd1306_command( 0xD9 );
 10132  002BCE  0ED9               	movlw	217
 10133  002BD0  ECFE  F01C         	call	_ssd1306_command
 10134  002BD4                     
 10135                           ;Oled.c: 48:   ssd1306_command( 0xF1 );
 10136  002BD4  0EF1               	movlw	241
 10137  002BD6  ECFE  F01C         	call	_ssd1306_command
 10138  002BDA                     
 10139                           ;Oled.c: 49:   ssd1306_command( 0xDB );
 10140  002BDA  0EDB               	movlw	219
 10141  002BDC  ECFE  F01C         	call	_ssd1306_command
 10142  002BE0                     
 10143                           ;Oled.c: 50:   ssd1306_command( 0x40 );
 10144  002BE0  0E40               	movlw	64
 10145  002BE2  ECFE  F01C         	call	_ssd1306_command
 10146  002BE6                     
 10147                           ;Oled.c: 51:   ssd1306_command( 0xA4 );
 10148  002BE6  0EA4               	movlw	164
 10149  002BE8  ECFE  F01C         	call	_ssd1306_command
 10150  002BEC                     
 10151                           ;Oled.c: 52:   ssd1306_command( 0xA6 );
 10152  002BEC  0EA6               	movlw	166
 10153  002BEE  ECFE  F01C         	call	_ssd1306_command
 10154  002BF2                     
 10155                           ;Oled.c: 53:   ssd1306_command( 0x2E );
 10156  002BF2  0E2E               	movlw	46
 10157  002BF4  ECFE  F01C         	call	_ssd1306_command
 10158  002BF8                     
 10159                           ;Oled.c: 54:   ssd1306_command( 0xAF );
 10160  002BF8  0EAF               	movlw	175
 10161  002BFA  ECFE  F01C         	call	_ssd1306_command
 10162  002BFE  0012               	return		;funcret
 10163  002C00                     __end_of_OLED_Init:
 10164                           	callstack 0
 10165                           
 10166 ;; *************** function _ssd1306_command *****************
 10167 ;; Defined at:
 10168 ;;		line 4 in file "Oled.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;  command         1    wreg     unsigned char 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;  command         1    1[COMRAM] unsigned char 
 10173 ;;  control         1    0        unsigned char 
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1    wreg      void 
 10176 ;; Registers used:
 10177 ;;		wreg, status,2, cstack
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10183 ;;      Params:         0       0       0       0       0       0       0       0       0
 10184 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10185 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10186 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10187 ;;Total ram usage:        1 bytes
 10188 ;; Hardware stack levels used: 1
 10189 ;; Hardware stack levels required when called: 4
 10190 ;; This function calls:
 10191 ;;		_I2C_Send
 10192 ;;		_I2C_Start
 10193 ;;		_I2C_Stop
 10194 ;; This function is called by:
 10195 ;;		_OLED_Init
 10196 ;;		_OLEDsetCursor
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           	psect	text32
 10201  0039FC                     __ptext32:
 10202                           	callstack 0
 10203  0039FC                     _ssd1306_command:
 10204                           	callstack 22
 10205                           
 10206                           ;incstack = 0
 10207                           ;ssd1306_command@command stored from wreg
 10208  0039FC  6E02               	movwf	ssd1306_command@command^0,c
 10209  0039FE                     
 10210                           ;Oled.c: 6:   I2C_Start();
 10211  0039FE  EC78  F01D         	call	_I2C_Start	;wreg free
 10212  003A02                     
 10213                           ;Oled.c: 7:   I2C_Send(0x3C << 1);
 10214  003A02  0E78               	movlw	120
 10215  003A04  EC35  F01D         	call	_I2C_Send
 10216  003A08                     
 10217                           ;Oled.c: 8:   I2C_Send(control);
 10218  003A08  0E00               	movlw	0
 10219  003A0A  EC35  F01D         	call	_I2C_Send
 10220  003A0E                     
 10221                           ;Oled.c: 9:   I2C_Send(command);
 10222  003A0E  5002               	movf	ssd1306_command@command^0,w,c
 10223  003A10  EC35  F01D         	call	_I2C_Send
 10224  003A14                     
 10225                           ;Oled.c: 10:   I2C_Stop();
 10226  003A14  EC8A  F01D         	call	_I2C_Stop	;wreg free
 10227  003A18  0012               	return		;funcret
 10228  003A1A                     __end_of_ssd1306_command:
 10229                           	callstack 0
 10230                           
 10231 ;; *************** function _I2C_Init *****************
 10232 ;; Defined at:
 10233 ;;		line 4 in file "i2c.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  speed           1    wreg     unsigned char 
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;  speed           1    0[COMRAM] unsigned char 
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  1    wreg      void 
 10240 ;; Registers used:
 10241 ;;		wreg, status,2, status,0
 10242 ;; Tracked objects:
 10243 ;;		On entry : 0/0
 10244 ;;		On exit  : 0/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10247 ;;      Params:         0       0       0       0       0       0       0       0       0
 10248 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10249 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10250 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10251 ;;Total ram usage:        1 bytes
 10252 ;; Hardware stack levels used: 1
 10253 ;; Hardware stack levels required when called: 1
 10254 ;; This function calls:
 10255 ;;		Nothing
 10256 ;; This function is called by:
 10257 ;;		_OLED_Init
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           
 10261                           	psect	text33
 10262  003918                     __ptext33:
 10263                           	callstack 0
 10264  003918                     _I2C_Init:
 10265                           	callstack 28
 10266                           
 10267                           ;incstack = 0
 10268                           ;I2C_Init@speed stored from wreg
 10269  003918  6E01               	movwf	I2C_Init@speed^0,c
 10270  00391A                     
 10271                           ;i2c.c: 4: void I2C_Init( unsigned char speed );i2c.c: 5: {;i2c.c: 11:   TRISBbits.RB0=1
      +                          ;
 10272  00391A  8093               	bsf	147,0,c	;volatile
 10273                           
 10274                           ;i2c.c: 12:   TRISBbits.RB1=1;
 10275  00391C  8293               	bsf	147,1,c	;volatile
 10276  00391E                     
 10277                           ;i2c.c: 14:   if( speed == 0u )
 10278  00391E  5001               	movf	I2C_Init@speed^0,w,c
 10279  003920  A4D8               	btfss	status,2,c
 10280  003922  EF95  F01C         	goto	u4661
 10281  003926  EF97  F01C         	goto	u4660
 10282  00392A                     u4661:
 10283  00392A  EF9A  F01C         	goto	l4729
 10284  00392E                     u4660:
 10285  00392E                     
 10286                           ;i2c.c: 15:   {;i2c.c: 16:     SSPSTAT |= 0x80;
 10287  00392E  8EC7               	bsf	199,7,c	;volatile
 10288                           
 10289                           ;i2c.c: 17:   }
 10290  003930  EF9B  F01C         	goto	l4731
 10291  003934                     l4729:
 10292                           
 10293                           ;i2c.c: 19:   {;i2c.c: 20:     SSPSTAT &= ~0x80;
 10294  003934  9EC7               	bcf	199,7,c	;volatile
 10295  003936                     l4731:
 10296                           
 10297                           ;i2c.c: 30:   SSPCON1 = 0b00101000;
 10298  003936  0E28               	movlw	40
 10299  003938  6EC6               	movwf	198,c	;volatile
 10300  00393A                     
 10301                           ;i2c.c: 31:   SSPADD = 119u;
 10302  00393A  0E77               	movlw	119
 10303  00393C  6EC8               	movwf	200,c	;volatile
 10304  00393E  0012               	return		;funcret
 10305  003940                     __end_of_I2C_Init:
 10306                           	callstack 0
 10307                           
 10308 ;; *************** function _MFRC522_Init *****************
 10309 ;; Defined at:
 10310 ;;		line 119 in file "RC522.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;		None
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;		None
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  1    wreg      void 
 10317 ;; Registers used:
 10318 ;;		wreg, status,2, status,0, cstack
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10324 ;;      Params:         0       0       0       0       0       0       0       0       0
 10325 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10326 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10327 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10328 ;;Total ram usage:        0 bytes
 10329 ;; Hardware stack levels used: 1
 10330 ;; Hardware stack levels required when called: 4
 10331 ;; This function calls:
 10332 ;;		_MFRC522_AntennaOff
 10333 ;;		_MFRC522_AntennaOn
 10334 ;;		_MFRC522_Reset
 10335 ;;		_MFRC522_Wr
 10336 ;; This function is called by:
 10337 ;;		_main
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text34
 10342  003392                     __ptext34:
 10343                           	callstack 0
 10344  003392                     _MFRC522_Init:
 10345                           	callstack 26
 10346  003392                     
 10347                           ;RC522.c: 121:     TRISCbits.RC1 = 0;
 10348  003392  9294               	bcf	148,1,c	;volatile
 10349                           
 10350                           ;RC522.c: 122:     TRISCbits.RC2 = 0;
 10351  003394  9494               	bcf	148,2,c	;volatile
 10352                           
 10353                           ;RC522.c: 123:     TRISDbits.RD0 = 0;
 10354  003396  9095               	bcf	149,0,c	;volatile
 10355                           
 10356                           ;RC522.c: 124:     TRISDbits.RD1 = 1;
 10357  003398  8295               	bsf	149,1,c	;volatile
 10358                           
 10359                           ;RC522.c: 125:     TRISDbits.RD3 = 0;
 10360  00339A  9695               	bcf	149,3,c	;volatile
 10361                           
 10362                           ;RC522.c: 129:      LATCbits.LATC1 = 1;
 10363  00339C  828B               	bsf	139,1,c	;volatile
 10364                           
 10365                           ;RC522.c: 130:      LATDbits.LATD3 = 1;
 10366  00339E  868C               	bsf	140,3,c	;volatile
 10367  0033A0                     
 10368                           ;RC522.c: 131:      MFRC522_Reset();
 10369  0033A0  EC1B  F01D         	call	_MFRC522_Reset	;wreg free
 10370                           
 10371                           ;RC522.c: 132:      MFRC522_Wr( 0x2A, 0x8D );
 10372  0033A4  0E8D               	movlw	141
 10373  0033A6  6E01               	movwf	MFRC522_Wr@value^0,c
 10374  0033A8  0E2A               	movlw	42
 10375  0033AA  EC25  F017         	call	_MFRC522_Wr
 10376                           
 10377                           ;RC522.c: 133:      MFRC522_Wr( 0x2B, 0x3E );
 10378  0033AE  0E3E               	movlw	62
 10379  0033B0  6E01               	movwf	MFRC522_Wr@value^0,c
 10380  0033B2  0E2B               	movlw	43
 10381  0033B4  EC25  F017         	call	_MFRC522_Wr
 10382                           
 10383                           ;RC522.c: 134:      MFRC522_Wr( 0x2D, 30 );
 10384  0033B8  0E1E               	movlw	30
 10385  0033BA  6E01               	movwf	MFRC522_Wr@value^0,c
 10386  0033BC  0E2D               	movlw	45
 10387  0033BE  EC25  F017         	call	_MFRC522_Wr
 10388                           
 10389                           ;RC522.c: 135:      MFRC522_Wr( 0x2C, 0 );
 10390  0033C2  0E00               	movlw	0
 10391  0033C4  6E01               	movwf	MFRC522_Wr@value^0,c
 10392  0033C6  0E2C               	movlw	44
 10393  0033C8  EC25  F017         	call	_MFRC522_Wr
 10394                           
 10395                           ;RC522.c: 136:      MFRC522_Wr( 0x15, 0x40 );
 10396  0033CC  0E40               	movlw	64
 10397  0033CE  6E01               	movwf	MFRC522_Wr@value^0,c
 10398  0033D0  0E15               	movlw	21
 10399  0033D2  EC25  F017         	call	_MFRC522_Wr
 10400                           
 10401                           ;RC522.c: 137:      MFRC522_Wr( 0x11, 0x3D );
 10402  0033D6  0E3D               	movlw	61
 10403  0033D8  6E01               	movwf	MFRC522_Wr@value^0,c
 10404  0033DA  0E11               	movlw	17
 10405  0033DC  EC25  F017         	call	_MFRC522_Wr
 10406                           
 10407                           ;RC522.c: 140:      MFRC522_AntennaOff() ;
 10408  0033E0  EC9A  F01D         	call	_MFRC522_AntennaOff	;wreg free
 10409                           
 10410                           ;RC522.c: 141:      MFRC522_AntennaOn();
 10411  0033E4  EC6F  F01D         	call	_MFRC522_AntennaOn	;wreg free
 10412  0033E8  0012               	return		;funcret
 10413  0033EA                     __end_of_MFRC522_Init:
 10414                           	callstack 0
 10415                           
 10416 ;; *************** function _MFRC522_Reset *****************
 10417 ;; Defined at:
 10418 ;;		line 93 in file "RC522.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;		None
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;		None
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      void 
 10425 ;; Registers used:
 10426 ;;		wreg, status,2, status,0, cstack
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10432 ;;      Params:         0       0       0       0       0       0       0       0       0
 10433 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10435 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10436 ;;Total ram usage:        0 bytes
 10437 ;; Hardware stack levels used: 1
 10438 ;; Hardware stack levels required when called: 2
 10439 ;; This function calls:
 10440 ;;		_MFRC522_Wr
 10441 ;; This function is called by:
 10442 ;;		_MFRC522_Init
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446                           	psect	text35
 10447  003A36                     __ptext35:
 10448                           	callstack 0
 10449  003A36                     _MFRC522_Reset:
 10450                           	callstack 27
 10451  003A36                     
 10452                           ;RC522.c: 97:    LATDbits.LATD3 = 1;
 10453  003A36  868C               	bsf	140,3,c	;volatile
 10454                           
 10455                           ;RC522.c: 98:    _delay((unsigned long)((1)*(8000000/4000000.0)));
 10456  003A38  D000               	nop2		;2 cycle nop
 10457                           
 10458                           ;RC522.c: 100:    LATDbits.LATD3 = 0;
 10459  003A3A  968C               	bcf	140,3,c	;volatile
 10460                           
 10461                           ;RC522.c: 101:    _delay((unsigned long)((1)*(8000000/4000000.0)));
 10462  003A3C  D000               	nop2		;2 cycle nop
 10463                           
 10464                           ;RC522.c: 103:    LATDbits.LATD3 = 1;
 10465  003A3E  868C               	bsf	140,3,c	;volatile
 10466                           
 10467                           ;RC522.c: 104:    _delay((unsigned long)((1)*(8000000/4000000.0)));
 10468  003A40  D000               	nop2		;2 cycle nop
 10469  003A42                     
 10470                           ;RC522.c: 105:    MFRC522_Wr( 0x01, 0x0F );
 10471  003A42  0E0F               	movlw	15
 10472  003A44  6E01               	movwf	MFRC522_Wr@value^0,c
 10473  003A46  0E01               	movlw	1
 10474  003A48  EC25  F017         	call	_MFRC522_Wr
 10475  003A4C                     
 10476                           ;RC522.c: 106:    _delay((unsigned long)((1)*(8000000/4000000.0)));
 10477  003A4C  D000               	nop2		;2 cycle nop
 10478  003A4E  0012               	return		;funcret
 10479  003A50                     __end_of_MFRC522_Reset:
 10480                           	callstack 0
 10481                           
 10482 ;; *************** function _MFRC522_AntennaOn *****************
 10483 ;; Defined at:
 10484 ;;		line 109 in file "RC522.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;		None
 10487 ;; Auto vars:     Size  Location     Type
 10488 ;;  stt             1    0        unsigned char 
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  1    wreg      void 
 10491 ;; Registers used:
 10492 ;;		wreg, status,2, status,0, cstack
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/0
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10498 ;;      Params:         0       0       0       0       0       0       0       0       0
 10499 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10500 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10501 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10502 ;;Total ram usage:        0 bytes
 10503 ;; Hardware stack levels used: 1
 10504 ;; Hardware stack levels required when called: 3
 10505 ;; This function calls:
 10506 ;;		_MFRC522_Rd
 10507 ;;		_MFRC522_Set_Bit
 10508 ;; This function is called by:
 10509 ;;		_MFRC522_Init
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text36
 10514  003ADE                     __ptext36:
 10515                           	callstack 0
 10516  003ADE                     _MFRC522_AntennaOn:
 10517                           	callstack 26
 10518  003ADE  0E14               	movlw	20
 10519  003AE0  EC56  F015         	call	_MFRC522_Rd
 10520                           
 10521                           ;RC522.c: 113: MFRC522_Set_Bit( 0x14, 0x03 );
 10522  003AE4  0E03               	movlw	3
 10523  003AE6  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
 10524  003AE8  0E14               	movlw	20
 10525  003AEA  EC42  F01D         	call	_MFRC522_Set_Bit
 10526  003AEE  0012               	return		;funcret
 10527  003AF0                     __end_of_MFRC522_AntennaOn:
 10528                           	callstack 0
 10529                           
 10530 ;; *************** function _MFRC522_AntennaOff *****************
 10531 ;; Defined at:
 10532 ;;		line 115 in file "RC522.c"
 10533 ;; Parameters:    Size  Location     Type
 10534 ;;		None
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;		None
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1    wreg      void 
 10539 ;; Registers used:
 10540 ;;		wreg, status,2, status,0, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10546 ;;      Params:         0       0       0       0       0       0       0       0       0
 10547 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10548 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10549 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10550 ;;Total ram usage:        0 bytes
 10551 ;; Hardware stack levels used: 1
 10552 ;; Hardware stack levels required when called: 3
 10553 ;; This function calls:
 10554 ;;		_MFRC522_Clear_Bit
 10555 ;; This function is called by:
 10556 ;;		_MFRC522_Init
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text37
 10561  003B34                     __ptext37:
 10562                           	callstack 0
 10563  003B34                     _MFRC522_AntennaOff:
 10564                           	callstack 26
 10565  003B34                     
 10566                           ;RC522.c: 117: MFRC522_Clear_Bit( 0x14, 0x03 );
 10567  003B34  0E03               	movlw	3
 10568  003B36  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
 10569  003B38  0E14               	movlw	20
 10570  003B3A  EC28  F01D         	call	_MFRC522_Clear_Bit
 10571  003B3E  0012               	return		;funcret
 10572  003B40                     __end_of_MFRC522_AntennaOff:
 10573                           	callstack 0
 10574                           
 10575 ;; *************** function _CHECK_TAG *****************
 10576 ;; Defined at:
 10577 ;;		line 344 in file "main.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;		None
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  i               2   89[COMRAM] int 
 10582 ;;  valor           2   87[COMRAM] unsigned int 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10592 ;;      Params:         0       0       0       0       0       0       0       0       0
 10593 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10595 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10596 ;;Total ram usage:        4 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; Hardware stack levels required when called: 10
 10599 ;; This function calls:
 10600 ;;		_EEPROM_getRegistro
 10601 ;;		_Guarda_ID
 10602 ;;		_MFRC522_Clear_UID
 10603 ;;		_MFRC522_Halt
 10604 ;;		_MFRC522_ReadCardSerial
 10605 ;;		_MFRC522_isCard
 10606 ;;		_Muestra_ID
 10607 ;;		_Print_Ticket
 10608 ;;		_Registro_busqueda
 10609 ;; This function is called by:
 10610 ;;		_main
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text38
 10615  002462                     __ptext38:
 10616                           	callstack 0
 10617  002462                     _CHECK_TAG:
 10618                           	callstack 20
 10619  002462                     
 10620                           ;main.c: 345:    if(MFRC522_isCard(TagType)){
 10621  002462  0E00               	movlw	0
 10622  002464  6E26               	movwf	MFRC522_isCard@TagType^0,c
 10623  002466  0E00               	movlw	0
 10624  002468  6E27               	movwf	(MFRC522_isCard@TagType+1)^0,c
 10625  00246A  ECA0  F01C         	call	_MFRC522_isCard	;wreg free
 10626  00246E  0900               	iorlw	0
 10627  002470  B4D8               	btfsc	status,2,c
 10628  002472  EF3D  F012         	goto	u5481
 10629  002476  EF3F  F012         	goto	u5480
 10630  00247A                     u5481:
 10631  00247A  EFAA  F012         	goto	l268
 10632  00247E                     u5480:
 10633  00247E                     
 10634                           ;main.c: 346:       if(MFRC522_ReadCardSerial(UID)){
 10635  00247E  0ECF               	movlw	low _UID
 10636  002480  6E28               	movwf	MFRC522_ReadCardSerial@str^0,c
 10637  002482  0E00               	movlw	high _UID
 10638  002484  6E29               	movwf	(MFRC522_ReadCardSerial@str+1)^0,c
 10639  002486  ECA1  F01B         	call	_MFRC522_ReadCardSerial	;wreg free
 10640  00248A  0900               	iorlw	0
 10641  00248C  B4D8               	btfsc	status,2,c
 10642  00248E  EF4B  F012         	goto	u5491
 10643  002492  EF4D  F012         	goto	u5490
 10644  002496                     u5491:
 10645  002496  EFA8  F012         	goto	l5313
 10646  00249A                     u5490:
 10647  00249A                     
 10648                           ;main.c: 347:          int i = 0;
 10649  00249A  0E00               	movlw	0
 10650  00249C  6E5B               	movwf	(CHECK_TAG@i+1)^0,c
 10651  00249E  0E00               	movlw	0
 10652  0024A0  6E5A               	movwf	CHECK_TAG@i^0,c
 10653                           
 10654                           ;main.c: 348:          for(i=0; i<5; i++){
 10655  0024A2  0E00               	movlw	0
 10656  0024A4  6E5B               	movwf	(CHECK_TAG@i+1)^0,c
 10657  0024A6  0E00               	movlw	0
 10658  0024A8  6E5A               	movwf	CHECK_TAG@i^0,c
 10659  0024AA                     l5291:
 10660                           
 10661                           ;main.c: 349:             Aux[i] = UID[i];
 10662  0024AA  0ECF               	movlw	low _UID
 10663  0024AC  245A               	addwf	CHECK_TAG@i^0,w,c
 10664  0024AE  6ED9               	movwf	fsr2l,c
 10665  0024B0  0E00               	movlw	high _UID
 10666  0024B2  205B               	addwfc	(CHECK_TAG@i+1)^0,w,c
 10667  0024B4  6EDA               	movwf	fsr2h,c
 10668  0024B6  0E88               	movlw	low _Aux
 10669  0024B8  245A               	addwf	CHECK_TAG@i^0,w,c
 10670  0024BA  6EE1               	movwf	fsr1l,c
 10671  0024BC  0E00               	movlw	high _Aux
 10672  0024BE  205B               	addwfc	(CHECK_TAG@i+1)^0,w,c
 10673  0024C0  6EE2               	movwf	fsr1h,c
 10674  0024C2  CFDF FFE7          	movff	indf2,indf1
 10675  0024C6                     
 10676                           ;main.c: 350:          }
 10677  0024C6  4A5A               	infsnz	CHECK_TAG@i^0,f,c
 10678  0024C8  2A5B               	incf	(CHECK_TAG@i+1)^0,f,c
 10679  0024CA  BE5B               	btfsc	(CHECK_TAG@i+1)^0,7,c
 10680  0024CC  EF71  F012         	goto	u5501
 10681  0024D0  505B               	movf	(CHECK_TAG@i+1)^0,w,c
 10682  0024D2  E109               	bnz	u5500
 10683  0024D4  0E05               	movlw	5
 10684  0024D6  5C5A               	subwf	CHECK_TAG@i^0,w,c
 10685  0024D8  A0D8               	btfss	status,0,c
 10686  0024DA  EF71  F012         	goto	u5501
 10687  0024DE  EF73  F012         	goto	u5500
 10688  0024E2                     u5501:
 10689  0024E2  EF55  F012         	goto	l5291
 10690  0024E6                     u5500:
 10691  0024E6                     
 10692                           ;main.c: 351:          unsigned int valor = Registro_busqueda();
 10693  0024E6  ECB9  F00E         	call	_Registro_busqueda	;wreg free
 10694  0024EA  C011  F058         	movff	?_Registro_busqueda,CHECK_TAG@valor
 10695  0024EE  C012  F059         	movff	?_Registro_busqueda+1,CHECK_TAG@valor+1
 10696  0024F2                     
 10697                           ;main.c: 352:          if(valor == 0){
 10698  0024F2  5058               	movf	CHECK_TAG@valor^0,w,c
 10699  0024F4  1059               	iorwf	(CHECK_TAG@valor+1)^0,w,c
 10700  0024F6  A4D8               	btfss	status,2,c
 10701  0024F8  EF80  F012         	goto	u5511
 10702  0024FC  EF82  F012         	goto	u5510
 10703  002500                     u5511:
 10704  002500  EF96  F012         	goto	l5307
 10705  002504                     u5510:
 10706  002504                     
 10707                           ;main.c: 353:             Valores[0] = Hora;
 10708  002504  C0F5  F08D         	movff	_Hora,_Valores
 10709                           
 10710                           ;main.c: 354:             Valores[1] = Minuto;
 10711  002508  C0F4  F08E         	movff	_Minuto,_Valores+1
 10712                           
 10713                           ;main.c: 355:             Valores[2] = dia;
 10714  00250C  C0F0  F08F         	movff	_dia,_Valores+2
 10715                           
 10716                           ;main.c: 356:             Valores[3] = mes;
 10717  002510  C0F1  F090         	movff	_mes,_Valores+3
 10718                           
 10719                           ;main.c: 357:             Valores[4] = anio;
 10720  002514  C0F2  F091         	movff	_anio,_Valores+4
 10721  002518                     
 10722                           ;main.c: 358:             Guarda_ID();
 10723  002518  ECDC  F00A         	call	_Guarda_ID	;wreg free
 10724  00251C                     
 10725                           ;main.c: 359:             valor = EEPROM_getRegistro();
 10726  00251C  ECBD  F01B         	call	_EEPROM_getRegistro	;wreg free
 10727  002520  C00A  F058         	movff	?_EEPROM_getRegistro,CHECK_TAG@valor
 10728  002524  C00B  F059         	movff	?_EEPROM_getRegistro+1,CHECK_TAG@valor+1
 10729                           
 10730                           ;main.c: 360:          }else{
 10731  002528  EF9C  F012         	goto	l5309
 10732  00252C                     l5307:
 10733                           
 10734                           ;main.c: 361:             Muestra_ID(valor);
 10735  00252C  C058  F00A         	movff	CHECK_TAG@valor,Muestra_ID@valor
 10736  002530  C059  F00B         	movff	CHECK_TAG@valor+1,Muestra_ID@valor+1
 10737  002534  EC78  F00C         	call	_Muestra_ID	;wreg free
 10738  002538                     l5309:
 10739                           
 10740                           ;main.c: 363:          Print_Ticket(valor);
 10741  002538  C058  F0E9         	movff	CHECK_TAG@valor,Print_Ticket@valor
 10742  00253C  C059  F0EA         	movff	CHECK_TAG@valor+1,Print_Ticket@valor+1
 10743  002540  ECB1  F00B         	call	_Print_Ticket	;wreg free
 10744  002544                     
 10745                           ;main.c: 364:          MFRC522_Clear_UID(UID);
 10746  002544  0ECF               	movlw	low _UID
 10747  002546  6E01               	movwf	MFRC522_Clear_UID@u_i^0,c
 10748  002548  0E00               	movlw	high _UID
 10749  00254A  6E02               	movwf	(MFRC522_Clear_UID@u_i+1)^0,c
 10750  00254C  EC68  F01B         	call	_MFRC522_Clear_UID	;wreg free
 10751  002550                     l5313:
 10752                           
 10753                           ;main.c: 366:       MFRC522_Halt();
 10754  002550  ECF5  F019         	call	_MFRC522_Halt	;wreg free
 10755  002554                     l268:
 10756  002554  0012               	return		;funcret
 10757  002556                     __end_of_CHECK_TAG:
 10758                           	callstack 0
 10759                           
 10760 ;; *************** function _Registro_busqueda *****************
 10761 ;; Defined at:
 10762 ;;		line 72 in file "24LC256.c"
 10763 ;; Parameters:    Size  Location     Type
 10764 ;;		None
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  datox           1   20[COMRAM] unsigned char 
 10767 ;;  i               2   21[COMRAM] unsigned int 
 10768 ;;  registro        2   18[COMRAM] unsigned int 
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  2   16[COMRAM] unsigned int 
 10771 ;; Registers used:
 10772 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10778 ;;      Params:         2       0       0       0       0       0       0       0       0
 10779 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10780 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10781 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10782 ;;Total ram usage:        7 bytes
 10783 ;; Hardware stack levels used: 1
 10784 ;; Hardware stack levels required when called: 6
 10785 ;; This function calls:
 10786 ;;		_EEPROM_Read
 10787 ;;		_EEPROM_getRegistro
 10788 ;;		___wmul
 10789 ;; This function is called by:
 10790 ;;		_CHECK_TAG
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           	psect	text39
 10795  001D72                     __ptext39:
 10796                           	callstack 0
 10797  001D72                     _Registro_busqueda:
 10798                           	callstack 23
 10799  001D72  ECBD  F01B         	call	_EEPROM_getRegistro	;wreg free
 10800  001D76  C00A  F013         	movff	?_EEPROM_getRegistro,Registro_busqueda@registro
 10801  001D7A  C00B  F014         	movff	?_EEPROM_getRegistro+1,Registro_busqueda@registro+1
 10802  001D7E  0E00               	movlw	0
 10803  001D80  6E17               	movwf	(Registro_busqueda@i+1)^0,c
 10804  001D82  0E01               	movlw	1
 10805  001D84  6E16               	movwf	Registro_busqueda@i^0,c
 10806  001D86  EF5E  F00F         	goto	l4667
 10807  001D8A                     l4643:
 10808  001D8A  C016  F001         	movff	Registro_busqueda@i,___wmul@multiplier
 10809  001D8E  C017  F002         	movff	Registro_busqueda@i+1,___wmul@multiplier+1
 10810  001D92  0E00               	movlw	0
 10811  001D94  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10812  001D96  0E0A               	movlw	10
 10813  001D98  6E03               	movwf	___wmul@multiplicand^0,c
 10814  001D9A  ECDA  F01C         	call	___wmul	;wreg free
 10815  001D9E  0E05               	movlw	5
 10816  001DA0  2401               	addwf	?___wmul^0,w,c
 10817  001DA2  6E07               	movwf	EEPROM_Read@add^0,c
 10818  001DA4  0E00               	movlw	0
 10819  001DA6  2002               	addwfc	(?___wmul+1)^0,w,c
 10820  001DA8  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 10821  001DAA  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 10822  001DAE  6E15               	movwf	Registro_busqueda@datox^0,c
 10823  001DB0  5015               	movf	Registro_busqueda@datox^0,w,c
 10824  001DB2  0100               	movlb	0	; () banked
 10825  001DB4  1988               	xorwf	_Aux& (0+255),w,b
 10826  001DB6  A4D8               	btfss	status,2,c
 10827  001DB8  EFE0  F00E         	goto	u4591
 10828  001DBC  EFE2  F00E         	goto	u4590
 10829  001DC0                     u4591:
 10830  001DC0  EF5C  F00F         	goto	l4665
 10831  001DC4                     u4590:
 10832  001DC4                     
 10833                           ; BSR set to: 0
 10834  001DC4  C016  F001         	movff	Registro_busqueda@i,___wmul@multiplier
 10835  001DC8  C017  F002         	movff	Registro_busqueda@i+1,___wmul@multiplier+1
 10836  001DCC  0E00               	movlw	0
 10837  001DCE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10838  001DD0  0E0A               	movlw	10
 10839  001DD2  6E03               	movwf	___wmul@multiplicand^0,c
 10840  001DD4  ECDA  F01C         	call	___wmul	;wreg free
 10841  001DD8  0E06               	movlw	6
 10842  001DDA  2401               	addwf	?___wmul^0,w,c
 10843  001DDC  6E07               	movwf	EEPROM_Read@add^0,c
 10844  001DDE  0E00               	movlw	0
 10845  001DE0  2002               	addwfc	(?___wmul+1)^0,w,c
 10846  001DE2  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 10847  001DE4  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 10848  001DE8  6E15               	movwf	Registro_busqueda@datox^0,c
 10849  001DEA  5015               	movf	Registro_busqueda@datox^0,w,c
 10850  001DEC  0100               	movlb	0	; () banked
 10851  001DEE  1989               	xorwf	(_Aux+1)& (0+255),w,b
 10852  001DF0  A4D8               	btfss	status,2,c
 10853  001DF2  EFFD  F00E         	goto	u4601
 10854  001DF6  EFFF  F00E         	goto	u4600
 10855  001DFA                     u4601:
 10856  001DFA  EF5C  F00F         	goto	l4665
 10857  001DFE                     u4600:
 10858  001DFE                     
 10859                           ; BSR set to: 0
 10860  001DFE  C016  F001         	movff	Registro_busqueda@i,___wmul@multiplier
 10861  001E02  C017  F002         	movff	Registro_busqueda@i+1,___wmul@multiplier+1
 10862  001E06  0E00               	movlw	0
 10863  001E08  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10864  001E0A  0E0A               	movlw	10
 10865  001E0C  6E03               	movwf	___wmul@multiplicand^0,c
 10866  001E0E  ECDA  F01C         	call	___wmul	;wreg free
 10867  001E12  0E07               	movlw	7
 10868  001E14  2401               	addwf	?___wmul^0,w,c
 10869  001E16  6E07               	movwf	EEPROM_Read@add^0,c
 10870  001E18  0E00               	movlw	0
 10871  001E1A  2002               	addwfc	(?___wmul+1)^0,w,c
 10872  001E1C  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 10873  001E1E  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 10874  001E22  6E15               	movwf	Registro_busqueda@datox^0,c
 10875  001E24  5015               	movf	Registro_busqueda@datox^0,w,c
 10876  001E26  0100               	movlb	0	; () banked
 10877  001E28  198A               	xorwf	(_Aux+2)& (0+255),w,b
 10878  001E2A  A4D8               	btfss	status,2,c
 10879  001E2C  EF1A  F00F         	goto	u4611
 10880  001E30  EF1C  F00F         	goto	u4610
 10881  001E34                     u4611:
 10882  001E34  EF5C  F00F         	goto	l4665
 10883  001E38                     u4610:
 10884  001E38                     
 10885                           ; BSR set to: 0
 10886  001E38  C016  F001         	movff	Registro_busqueda@i,___wmul@multiplier
 10887  001E3C  C017  F002         	movff	Registro_busqueda@i+1,___wmul@multiplier+1
 10888  001E40  0E00               	movlw	0
 10889  001E42  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10890  001E44  0E0A               	movlw	10
 10891  001E46  6E03               	movwf	___wmul@multiplicand^0,c
 10892  001E48  ECDA  F01C         	call	___wmul	;wreg free
 10893  001E4C  0E08               	movlw	8
 10894  001E4E  2401               	addwf	?___wmul^0,w,c
 10895  001E50  6E07               	movwf	EEPROM_Read@add^0,c
 10896  001E52  0E00               	movlw	0
 10897  001E54  2002               	addwfc	(?___wmul+1)^0,w,c
 10898  001E56  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 10899  001E58  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 10900  001E5C  6E15               	movwf	Registro_busqueda@datox^0,c
 10901  001E5E  5015               	movf	Registro_busqueda@datox^0,w,c
 10902  001E60  0100               	movlb	0	; () banked
 10903  001E62  198B               	xorwf	(_Aux+3)& (0+255),w,b
 10904  001E64  A4D8               	btfss	status,2,c
 10905  001E66  EF37  F00F         	goto	u4621
 10906  001E6A  EF39  F00F         	goto	u4620
 10907  001E6E                     u4621:
 10908  001E6E  EF5C  F00F         	goto	l4665
 10909  001E72                     u4620:
 10910  001E72                     
 10911                           ; BSR set to: 0
 10912  001E72  C016  F001         	movff	Registro_busqueda@i,___wmul@multiplier
 10913  001E76  C017  F002         	movff	Registro_busqueda@i+1,___wmul@multiplier+1
 10914  001E7A  0E00               	movlw	0
 10915  001E7C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10916  001E7E  0E0A               	movlw	10
 10917  001E80  6E03               	movwf	___wmul@multiplicand^0,c
 10918  001E82  ECDA  F01C         	call	___wmul	;wreg free
 10919  001E86  0E09               	movlw	9
 10920  001E88  2401               	addwf	?___wmul^0,w,c
 10921  001E8A  6E07               	movwf	EEPROM_Read@add^0,c
 10922  001E8C  0E00               	movlw	0
 10923  001E8E  2002               	addwfc	(?___wmul+1)^0,w,c
 10924  001E90  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 10925  001E92  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 10926  001E96  6E15               	movwf	Registro_busqueda@datox^0,c
 10927  001E98  5015               	movf	Registro_busqueda@datox^0,w,c
 10928  001E9A  0100               	movlb	0	; () banked
 10929  001E9C  198C               	xorwf	(_Aux+4)& (0+255),w,b
 10930  001E9E  A4D8               	btfss	status,2,c
 10931  001EA0  EF54  F00F         	goto	u4631
 10932  001EA4  EF56  F00F         	goto	u4630
 10933  001EA8                     u4631:
 10934  001EA8  EF5C  F00F         	goto	l661
 10935  001EAC                     u4630:
 10936  001EAC                     
 10937                           ; BSR set to: 0
 10938  001EAC  C016  F011         	movff	Registro_busqueda@i,?_Registro_busqueda
 10939  001EB0  C017  F012         	movff	Registro_busqueda@i+1,?_Registro_busqueda+1
 10940  001EB4  EF6D  F00F         	goto	l665
 10941  001EB8                     l661:
 10942  001EB8                     l4665:
 10943                           
 10944                           ; BSR set to: 0
 10945  001EB8  4A16               	infsnz	Registro_busqueda@i^0,f,c
 10946  001EBA  2A17               	incf	(Registro_busqueda@i+1)^0,f,c
 10947  001EBC                     l4667:
 10948  001EBC  5016               	movf	Registro_busqueda@i^0,w,c
 10949  001EBE  5C13               	subwf	Registro_busqueda@registro^0,w,c
 10950  001EC0  5017               	movf	(Registro_busqueda@i+1)^0,w,c
 10951  001EC2  5814               	subwfb	(Registro_busqueda@registro+1)^0,w,c
 10952  001EC4  B0D8               	btfsc	status,0,c
 10953  001EC6  EF67  F00F         	goto	u4641
 10954  001ECA  EF69  F00F         	goto	u4640
 10955  001ECE                     u4641:
 10956  001ECE  EFC5  F00E         	goto	l4643
 10957  001ED2                     u4640:
 10958  001ED2  0E00               	movlw	0
 10959  001ED4  6E12               	movwf	(?_Registro_busqueda+1)^0,c
 10960  001ED6  0E00               	movlw	0
 10961  001ED8  6E11               	movwf	?_Registro_busqueda^0,c
 10962  001EDA                     l665:
 10963  001EDA  0012               	return		;funcret
 10964  001EDC                     __end_of_Registro_busqueda:
 10965                           	callstack 0
 10966                           
 10967 ;; *************** function _Print_Ticket *****************
 10968 ;; Defined at:
 10969 ;;		line 319 in file "main.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;  valor           2   16[BANK0 ] unsigned int 
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;		None
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  1    wreg      void 
 10976 ;; Registers used:
 10977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10978 ;; Tracked objects:
 10979 ;;		On entry : 0/0
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10983 ;;      Params:         0       2       0       0       0       0       0       0       0
 10984 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10986 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10987 ;;Total ram usage:        2 bytes
 10988 ;; Hardware stack levels used: 1
 10989 ;; Hardware stack levels required when called: 9
 10990 ;; This function calls:
 10991 ;;		_Font_Big
 10992 ;;		_Font_Normal
 10993 ;;		_New_Line
 10994 ;;		_UART_Print
 10995 ;;		_UART_Println
 10996 ;;		_UART_Write
 10997 ;;		___awdiv
 10998 ;;		___awmod
 10999 ;;		_bcd_to_decimal
 11000 ;;		_sprintf
 11001 ;; This function is called by:
 11002 ;;		_CHECK_TAG
 11003 ;; This function uses a non-reentrant model
 11004 ;;
 11005                           
 11006                           	psect	text40
 11007  001762                     __ptext40:
 11008                           	callstack 0
 11009  001762                     _Print_Ticket:
 11010                           	callstack 20
 11011  001762                     
 11012                           ;main.c: 320:     Valores[0] = bcd_to_decimal(Valores[0]);
 11013  001762  0100               	movlb	0	; () banked
 11014  001764  518D               	movf	_Valores& (0+255),w,b
 11015  001766  EC59  F01D         	call	_bcd_to_decimal
 11016  00176A  0100               	movlb	0	; () banked
 11017  00176C  6F8D               	movwf	_Valores& (0+255),b
 11018                           
 11019                           ;main.c: 321:     Valores[1] = bcd_to_decimal(Valores[1]);
 11020  00176E  518E               	movf	(_Valores+1)& (0+255),w,b
 11021  001770  EC59  F01D         	call	_bcd_to_decimal
 11022  001774  0100               	movlb	0	; () banked
 11023  001776  6F8E               	movwf	(_Valores+1)& (0+255),b
 11024                           
 11025                           ;main.c: 322:     Valores[2] = bcd_to_decimal(Valores[2]);
 11026  001778  518F               	movf	(_Valores+2)& (0+255),w,b
 11027  00177A  EC59  F01D         	call	_bcd_to_decimal
 11028  00177E  0100               	movlb	0	; () banked
 11029  001780  6F8F               	movwf	(_Valores+2)& (0+255),b
 11030  001782                     
 11031                           ; BSR set to: 0
 11032                           ;main.c: 323:     New_Line();
 11033  001782  EC93  F01D         	call	_New_Line	;wreg free
 11034  001786                     
 11035                           ;main.c: 324:     sprintf(sms,"%d%d:",Hora/10,Hora%10);
 11036  001786  0EC5               	movlw	low _sms
 11037  001788  0100               	movlb	0	; () banked
 11038  00178A  6FD9               	movwf	sprintf@s& (0+255),b
 11039  00178C  0E00               	movlw	high _sms
 11040  00178E  6FDA               	movwf	(sprintf@s+1)& (0+255),b
 11041  001790  0ED4               	movlw	low STR_4
 11042  001792  6FDB               	movwf	sprintf@fmt& (0+255),b
 11043  001794  0E7F               	movlw	high STR_4
 11044  001796  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
 11045  001798  C0F5  F001         	movff	_Hora,___awdiv@dividend
 11046  00179C  6A02               	clrf	(___awdiv@dividend+1)^0,c
 11047  00179E  0E00               	movlw	0
 11048  0017A0  6E04               	movwf	(___awdiv@divisor+1)^0,c
 11049  0017A2  0E0A               	movlw	10
 11050  0017A4  6E03               	movwf	___awdiv@divisor^0,c
 11051  0017A6  ECE2  F013         	call	___awdiv	;wreg free
 11052  0017AA  C001  F0DD         	movff	?___awdiv,?_sprintf+4
 11053  0017AE  C002  F0DE         	movff	?___awdiv+1,?_sprintf+5
 11054  0017B2  C0F5  F001         	movff	_Hora,___awmod@dividend
 11055  0017B6  6A02               	clrf	(___awmod@dividend+1)^0,c
 11056  0017B8  0E00               	movlw	0
 11057  0017BA  6E04               	movwf	(___awmod@divisor+1)^0,c
 11058  0017BC  0E0A               	movlw	10
 11059  0017BE  6E03               	movwf	___awmod@divisor^0,c
 11060  0017C0  ECFE  F014         	call	___awmod	;wreg free
 11061  0017C4  C001  F0DF         	movff	?___awmod,?_sprintf+6
 11062  0017C8  C002  F0E0         	movff	?___awmod+1,?_sprintf+7
 11063  0017CC  EC74  F01A         	call	_sprintf	;wreg free
 11064  0017D0                     
 11065                           ;main.c: 325:     UART_Print(sms);
 11066  0017D0  0EC5               	movlw	low _sms
 11067  0017D2  6E02               	movwf	UART_Print@buffer^0,c
 11068  0017D4  0E00               	movlw	high _sms
 11069  0017D6  6E03               	movwf	(UART_Print@buffer+1)^0,c
 11070  0017D8  EC6C  F019         	call	_UART_Print	;wreg free
 11071  0017DC                     
 11072                           ;main.c: 326:     sprintf(sms,"%d%d:",Minuto/10,Minuto%10);
 11073  0017DC  0EC5               	movlw	low _sms
 11074  0017DE  0100               	movlb	0	; () banked
 11075  0017E0  6FD9               	movwf	sprintf@s& (0+255),b
 11076  0017E2  0E00               	movlw	high _sms
 11077  0017E4  6FDA               	movwf	(sprintf@s+1)& (0+255),b
 11078  0017E6  0ED4               	movlw	low STR_4
 11079  0017E8  6FDB               	movwf	sprintf@fmt& (0+255),b
 11080  0017EA  0E7F               	movlw	high STR_4
 11081  0017EC  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
 11082  0017EE  C0F4  F001         	movff	_Minuto,___awdiv@dividend
 11083  0017F2  6A02               	clrf	(___awdiv@dividend+1)^0,c
 11084  0017F4  0E00               	movlw	0
 11085  0017F6  6E04               	movwf	(___awdiv@divisor+1)^0,c
 11086  0017F8  0E0A               	movlw	10
 11087  0017FA  6E03               	movwf	___awdiv@divisor^0,c
 11088  0017FC  ECE2  F013         	call	___awdiv	;wreg free
 11089  001800  C001  F0DD         	movff	?___awdiv,?_sprintf+4
 11090  001804  C002  F0DE         	movff	?___awdiv+1,?_sprintf+5
 11091  001808  C0F4  F001         	movff	_Minuto,___awmod@dividend
 11092  00180C  6A02               	clrf	(___awmod@dividend+1)^0,c
 11093  00180E  0E00               	movlw	0
 11094  001810  6E04               	movwf	(___awmod@divisor+1)^0,c
 11095  001812  0E0A               	movlw	10
 11096  001814  6E03               	movwf	___awmod@divisor^0,c
 11097  001816  ECFE  F014         	call	___awmod	;wreg free
 11098  00181A  C001  F0DF         	movff	?___awmod,?_sprintf+6
 11099  00181E  C002  F0E0         	movff	?___awmod+1,?_sprintf+7
 11100  001822  EC74  F01A         	call	_sprintf	;wreg free
 11101  001826                     
 11102                           ;main.c: 327:     UART_Print(sms);
 11103  001826  0EC5               	movlw	low _sms
 11104  001828  6E02               	movwf	UART_Print@buffer^0,c
 11105  00182A  0E00               	movlw	high _sms
 11106  00182C  6E03               	movwf	(UART_Print@buffer+1)^0,c
 11107  00182E  EC6C  F019         	call	_UART_Print	;wreg free
 11108  001832                     
 11109                           ;main.c: 328:     sprintf(sms,"%d%d",Segundo/10,Segundo%10);
 11110  001832  0EC5               	movlw	low _sms
 11111  001834  0100               	movlb	0	; () banked
 11112  001836  6FD9               	movwf	sprintf@s& (0+255),b
 11113  001838  0E00               	movlw	high _sms
 11114  00183A  6FDA               	movwf	(sprintf@s+1)& (0+255),b
 11115  00183C  0EEE               	movlw	low STR_6
 11116  00183E  6FDB               	movwf	sprintf@fmt& (0+255),b
 11117  001840  0E7F               	movlw	high STR_6
 11118  001842  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
 11119  001844  C0F3  F001         	movff	_Segundo,___awdiv@dividend
 11120  001848  6A02               	clrf	(___awdiv@dividend+1)^0,c
 11121  00184A  0E00               	movlw	0
 11122  00184C  6E04               	movwf	(___awdiv@divisor+1)^0,c
 11123  00184E  0E0A               	movlw	10
 11124  001850  6E03               	movwf	___awdiv@divisor^0,c
 11125  001852  ECE2  F013         	call	___awdiv	;wreg free
 11126  001856  C001  F0DD         	movff	?___awdiv,?_sprintf+4
 11127  00185A  C002  F0DE         	movff	?___awdiv+1,?_sprintf+5
 11128  00185E  C0F3  F001         	movff	_Segundo,___awmod@dividend
 11129  001862  6A02               	clrf	(___awmod@dividend+1)^0,c
 11130  001864  0E00               	movlw	0
 11131  001866  6E04               	movwf	(___awmod@divisor+1)^0,c
 11132  001868  0E0A               	movlw	10
 11133  00186A  6E03               	movwf	___awmod@divisor^0,c
 11134  00186C  ECFE  F014         	call	___awmod	;wreg free
 11135  001870  C001  F0DF         	movff	?___awmod,?_sprintf+6
 11136  001874  C002  F0E0         	movff	?___awmod+1,?_sprintf+7
 11137  001878  EC74  F01A         	call	_sprintf	;wreg free
 11138  00187C                     
 11139                           ;main.c: 329:     UART_Println(sms);
 11140  00187C  0EC5               	movlw	low _sms
 11141  00187E  6E02               	movwf	UART_Println@buffer^0,c
 11142  001880  0E00               	movlw	high _sms
 11143  001882  6E03               	movwf	(UART_Println@buffer+1)^0,c
 11144  001884  ECE4  F016         	call	_UART_Println	;wreg free
 11145  001888                     
 11146                           ;main.c: 330:     New_Line();
 11147  001888  EC93  F01D         	call	_New_Line	;wreg free
 11148  00188C                     
 11149                           ;main.c: 331:     Font_Big();
 11150  00188C  ECC7  F01C         	call	_Font_Big	;wreg free
 11151  001890                     
 11152                           ;main.c: 332:     UART_Print("ID: ");
 11153  001890  0EDF               	movlw	low STR_19
 11154  001892  6E02               	movwf	UART_Print@buffer^0,c
 11155  001894  0E7F               	movlw	high STR_19
 11156  001896  6E03               	movwf	(UART_Print@buffer+1)^0,c
 11157  001898  EC6C  F019         	call	_UART_Print	;wreg free
 11158  00189C                     
 11159                           ;main.c: 333:     sprintf(sms,"%d",valor);
 11160  00189C  0EC5               	movlw	low _sms
 11161  00189E  0100               	movlb	0	; () banked
 11162  0018A0  6FD9               	movwf	sprintf@s& (0+255),b
 11163  0018A2  0E00               	movlw	high _sms
 11164  0018A4  6FDA               	movwf	(sprintf@s+1)& (0+255),b
 11165  0018A6  0EF0               	movlw	low (STR_6+2)
 11166  0018A8  6FDB               	movwf	sprintf@fmt& (0+255),b
 11167  0018AA  0E7F               	movlw	high (STR_6+2)
 11168  0018AC  6FDC               	movwf	(sprintf@fmt+1)& (0+255),b
 11169  0018AE  C0E9  F0DD         	movff	Print_Ticket@valor,?_sprintf+4
 11170  0018B2  C0EA  F0DE         	movff	Print_Ticket@valor+1,?_sprintf+5
 11171  0018B6  EC74  F01A         	call	_sprintf	;wreg free
 11172  0018BA                     
 11173                           ;main.c: 334:     UART_Println(sms);
 11174  0018BA  0EC5               	movlw	low _sms
 11175  0018BC  6E02               	movwf	UART_Println@buffer^0,c
 11176  0018BE  0E00               	movlw	high _sms
 11177  0018C0  6E03               	movwf	(UART_Println@buffer+1)^0,c
 11178  0018C2  ECE4  F016         	call	_UART_Println	;wreg free
 11179  0018C6                     
 11180                           ;main.c: 335:     Font_Normal();
 11181  0018C6  EC9B  F019         	call	_Font_Normal	;wreg free
 11182  0018CA                     
 11183                           ;main.c: 336:     UART_Println("Recuerde conservar su ticket");
 11184  0018CA  0E8E               	movlw	low STR_21
 11185  0018CC  6E02               	movwf	UART_Println@buffer^0,c
 11186  0018CE  0E7F               	movlw	high STR_21
 11187  0018D0  6E03               	movwf	(UART_Println@buffer+1)^0,c
 11188  0018D2  ECE4  F016         	call	_UART_Println	;wreg free
 11189  0018D6                     
 11190                           ;main.c: 337:     New_Line();
 11191  0018D6  EC93  F01D         	call	_New_Line	;wreg free
 11192  0018DA                     
 11193                           ;main.c: 338:     New_Line();
 11194  0018DA  EC93  F01D         	call	_New_Line	;wreg free
 11195  0018DE                     
 11196                           ;main.c: 339:     New_Line();
 11197  0018DE  EC93  F01D         	call	_New_Line	;wreg free
 11198  0018E2                     
 11199                           ;main.c: 340:     UART_Write(0x1B);UART_Write(0x6D);
 11200  0018E2  0E1B               	movlw	27
 11201  0018E4  EC64  F01D         	call	_UART_Write
 11202  0018E8  0E6D               	movlw	109
 11203  0018EA  EC64  F01D         	call	_UART_Write
 11204  0018EE  0012               	return		;funcret
 11205  0018F0                     __end_of_Print_Ticket:
 11206                           	callstack 0
 11207                           
 11208 ;; *************** function _sprintf *****************
 11209 ;; Defined at:
 11210 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;  s               2    0[BANK0 ] PTR unsigned char 
 11213 ;;		 -> sms(10), 
 11214 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 11215 ;;		 -> STR_20(3), STR_18(5), STR_17(6), STR_16(6), 
 11216 ;;		 -> STR_9(6), STR_8(6), STR_7(5), STR_6(5), 
 11217 ;;		 -> STR_5(6), STR_4(6), 
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;  f               6   10[BANK0 ] struct _IO_FILE
 11220 ;;  ap              2    8[BANK0 ] PTR void [1]
 11221 ;;		 -> ?_sprintf(2), 
 11222 ;;  ret             2    0        int 
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  2    0[BANK0 ] int 
 11225 ;; Registers used:
 11226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11232 ;;      Params:         0       8       0       0       0       0       0       0       0
 11233 ;;      Locals:         0       8       0       0       0       0       0       0       0
 11234 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11235 ;;      Totals:         0      16       0       0       0       0       0       0       0
 11236 ;;Total ram usage:       16 bytes
 11237 ;; Hardware stack levels used: 1
 11238 ;; Hardware stack levels required when called: 8
 11239 ;; This function calls:
 11240 ;;		_vfprintf
 11241 ;; This function is called by:
 11242 ;;		_Print_Hora
 11243 ;;		_Print_Minuto
 11244 ;;		_Print_Segundo
 11245 ;;		_Print_Dia
 11246 ;;		_Print_Mes
 11247 ;;		_Print_Anio
 11248 ;;		_Print_Ticket
 11249 ;; This function uses a non-reentrant model
 11250 ;;
 11251                           
 11252                           	psect	text41
 11253  0034E8                     __ptext41:
 11254                           	callstack 0
 11255  0034E8                     _sprintf:
 11256                           	callstack 20
 11257  0034E8  0EDD               	movlw	low (?_sprintf+4)
 11258  0034EA  0100               	movlb	0	; () banked
 11259  0034EC  6FE1               	movwf	sprintf@ap& (0+255),b
 11260  0034EE  0E00               	movlw	high (?_sprintf+4)
 11261  0034F0  6FE2               	movwf	(sprintf@ap+1)& (0+255),b
 11262  0034F2  C0D9  F0E3         	movff	sprintf@s,sprintf@f
 11263  0034F6  C0DA  F0E4         	movff	sprintf@s+1,sprintf@f+1
 11264  0034FA                     
 11265                           ; BSR set to: 0
 11266  0034FA  0E00               	movlw	0
 11267  0034FC  6FE6               	movwf	(sprintf@f+3)& (0+255),b
 11268  0034FE  0E00               	movlw	0
 11269  003500  6FE5               	movwf	(sprintf@f+2)& (0+255),b
 11270  003502                     
 11271                           ; BSR set to: 0
 11272  003502  0E00               	movlw	0
 11273  003504  6FE8               	movwf	(sprintf@f+5)& (0+255),b
 11274  003506  0E00               	movlw	0
 11275  003508  6FE7               	movwf	(sprintf@f+4)& (0+255),b
 11276  00350A                     
 11277                           ; BSR set to: 0
 11278  00350A  0EE3               	movlw	low sprintf@f
 11279  00350C  6E50               	movwf	vfprintf@fp^0,c
 11280  00350E  0E00               	movlw	high sprintf@f
 11281  003510  6E51               	movwf	(vfprintf@fp+1)^0,c
 11282  003512  C0DB  F052         	movff	sprintf@fmt,vfprintf@fmt
 11283  003516  C0DC  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 11284  00351A  0EE1               	movlw	low sprintf@ap
 11285  00351C  6E54               	movwf	vfprintf@ap^0,c
 11286  00351E  0E00               	movlw	high sprintf@ap
 11287  003520  6E55               	movwf	(vfprintf@ap+1)^0,c
 11288  003522  EC3B  F019         	call	_vfprintf	;wreg free
 11289  003526  0100               	movlb	0	; () banked
 11290  003528  51E5               	movf	(sprintf@f+2)& (0+255),w,b
 11291  00352A  25D9               	addwf	sprintf@s& (0+255),w,b
 11292  00352C  6ED9               	movwf	fsr2l,c
 11293  00352E  51E6               	movf	(sprintf@f+3)& (0+255),w,b
 11294  003530  21DA               	addwfc	(sprintf@s+1)& (0+255),w,b
 11295  003532  6EDA               	movwf	fsr2h,c
 11296  003534  0E00               	movlw	0
 11297  003536  6EDF               	movwf	indf2,c
 11298  003538                     
 11299                           ; BSR set to: 0
 11300  003538  0012               	return		;funcret
 11301  00353A                     __end_of_sprintf:
 11302                           	callstack 0
 11303                           
 11304 ;; *************** function _vfprintf *****************
 11305 ;; Defined at:
 11306 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 11309 ;;		 -> sprintf@f(6), 
 11310 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 11311 ;;		 -> STR_20(3), STR_18(5), STR_17(6), STR_16(6), 
 11312 ;;		 -> STR_9(6), STR_8(6), STR_7(5), STR_6(5), 
 11313 ;;		 -> STR_5(6), STR_4(6), 
 11314 ;;  ap              2   83[COMRAM] PTR PTR void 
 11315 ;;		 -> sprintf@ap(2), 
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 11318 ;;		 -> STR_20(3), STR_18(5), STR_17(6), STR_16(6), 
 11319 ;;		 -> STR_9(6), STR_8(6), STR_7(5), STR_6(5), 
 11320 ;;		 -> STR_5(6), STR_4(6), 
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  2   79[COMRAM] int 
 11323 ;; Registers used:
 11324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11330 ;;      Params:         6       0       0       0       0       0       0       0       0
 11331 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11332 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11333 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11334 ;;Total ram usage:        8 bytes
 11335 ;; Hardware stack levels used: 1
 11336 ;; Hardware stack levels required when called: 7
 11337 ;; This function calls:
 11338 ;;		_vfpfcnvrt
 11339 ;; This function is called by:
 11340 ;;		_sprintf
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344                           	psect	text42
 11345  003276                     __ptext42:
 11346                           	callstack 0
 11347  003276                     _vfprintf:
 11348                           	callstack 20
 11349  003276                     
 11350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11351  003276  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 11352  00327A  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 11353  00327E                     
 11354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11355  00327E  0E00               	movlw	0
 11356  003280  0100               	movlb	0	; () banked
 11357  003282  6F93               	movwf	(_nout+1)& (0+255),b
 11358  003284  0E00               	movlw	0
 11359  003286  6F92               	movwf	_nout& (0+255),b
 11360                           
 11361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11362  003288  EF59  F019         	goto	l4031
 11363  00328C                     l4029:
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11367  00328C  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 11368  003290  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 11369  003294  0E56               	movlw	low vfprintf@cfmt
 11370  003296  6E42               	movwf	vfpfcnvrt@fmt^0,c
 11371  003298  0E00               	movlw	high vfprintf@cfmt
 11372  00329A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 11373  00329C  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 11374  0032A0  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 11375  0032A4  EC02  F00A         	call	_vfpfcnvrt	;wreg free
 11376  0032A8  5040               	movf	?_vfpfcnvrt^0,w,c
 11377  0032AA  0100               	movlb	0	; () banked
 11378  0032AC  2792               	addwf	_nout& (0+255),f,b
 11379  0032AE  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 11380  0032B0  2393               	addwfc	(_nout+1)& (0+255),f,b
 11381  0032B2                     l4031:
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11385  0032B2  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 11386  0032B6  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 11387  0032BA                     	if	0	;tblptru may be non-zero
 11388  0032BA                     	endif
 11389  0032BA                     	if	0	;tblptru may be non-zero
 11390  0032BA                     	endif
 11391  0032BA  0008               	tblrd		*
 11392  0032BC  50F5               	movf	tablat,w,c
 11393  0032BE  0900               	iorlw	0
 11394  0032C0  A4D8               	btfss	status,2,c
 11395  0032C2  EF65  F019         	goto	u3701
 11396  0032C6  EF67  F019         	goto	u3700
 11397  0032CA                     u3701:
 11398  0032CA  EF46  F019         	goto	l4029
 11399  0032CE                     u3700:
 11400  0032CE                     
 11401                           ; BSR set to: 0
 11402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11403  0032CE  C092  F050         	movff	_nout,?_vfprintf
 11404  0032D2  C093  F051         	movff	_nout+1,?_vfprintf+1
 11405  0032D6                     
 11406                           ; BSR set to: 0
 11407  0032D6  0012               	return		;funcret
 11408  0032D8                     __end_of_vfprintf:
 11409                           	callstack 0
 11410                           
 11411 ;; *************** function _vfpfcnvrt *****************
 11412 ;; Defined at:
 11413 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 11416 ;;		 -> sprintf@f(6), 
 11417 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 11418 ;;		 -> vfprintf@cfmt(2), 
 11419 ;;  ap              2   67[COMRAM] PTR PTR void 
 11420 ;;		 -> sprintf@ap(2), 
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;  ll              8   71[COMRAM] long long 
 11423 ;;  llu             8    0        unsigned long long 
 11424 ;;  f               4    0        unsigned long long 
 11425 ;;  vp              3    0        PTR void 
 11426 ;;  ct              3    0        unsigned char [3]
 11427 ;;  cp              3    0        PTR unsigned char 
 11428 ;;  i               2    0        int 
 11429 ;;  done            2    0        int 
 11430 ;;  c               1    0        unsigned char 
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  2   63[COMRAM] int 
 11433 ;; Registers used:
 11434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11440 ;;      Params:         6       0       0       0       0       0       0       0       0
 11441 ;;      Locals:         8       0       0       0       0       0       0       0       0
 11442 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11443 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11444 ;;Total ram usage:       16 bytes
 11445 ;; Hardware stack levels used: 1
 11446 ;; Hardware stack levels required when called: 6
 11447 ;; This function calls:
 11448 ;;		_dtoa
 11449 ;;		_fputc
 11450 ;; This function is called by:
 11451 ;;		_vfprintf
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           	psect	text43
 11456  001404                     __ptext43:
 11457                           	callstack 0
 11458  001404                     _vfpfcnvrt:
 11459                           	callstack 20
 11460  001404                     
 11461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11462  001404  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11463  001408  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11464  00140C  CFDE FFF6          	movff	postinc2,tblptrl
 11465  001410  CFDD FFF7          	movff	postdec2,tblptrh
 11466  001414                     	if	0	;tblptru may be non-zero
 11467  001414                     	endif
 11468  001414                     	if	0	;tblptru may be non-zero
 11469  001414                     	endif
 11470  001414  0008               	tblrd		*
 11471  001416  50F5               	movf	tablat,w,c
 11472  001418  0A25               	xorlw	37
 11473  00141A  A4D8               	btfss	status,2,c
 11474  00141C  EF12  F00A         	goto	u3341
 11475  001420  EF14  F00A         	goto	u3340
 11476  001424                     u3341:
 11477  001424  EFC0  F00A         	goto	l3783
 11478  001428                     u3340:
 11479  001428                     
 11480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11481  001428  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11482  00142C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11483  001430  2ADE               	incf	postinc2,f,c
 11484  001432  0E00               	movlw	0
 11485  001434  22DD               	addwfc	postdec2,f,c
 11486  001436                     
 11487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11488  001436  0E00               	movlw	0
 11489  001438  0100               	movlb	0	; () banked
 11490  00143A  6F95               	movwf	(_width+1)& (0+255),b
 11491  00143C  0E00               	movlw	0
 11492  00143E  6F94               	movwf	_width& (0+255),b
 11493  001440  C094  F098         	movff	_width,_flags
 11494  001444  C095  F099         	movff	_width+1,_flags+1
 11495  001448                     
 11496                           ; BSR set to: 0
 11497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11498  001448  6996               	setf	_prec& (0+255),b
 11499  00144A  6997               	setf	(_prec+1)& (0+255),b
 11500  00144C                     
 11501                           ; BSR set to: 0
 11502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11503  00144C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11504  001450  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11505  001454  CFDE FFF6          	movff	postinc2,tblptrl
 11506  001458  CFDD FFF7          	movff	postdec2,tblptrh
 11507  00145C                     	if	0	;tblptru may be non-zero
 11508  00145C                     	endif
 11509  00145C                     	if	0	;tblptru may be non-zero
 11510  00145C                     	endif
 11511  00145C  0008               	tblrd		*
 11512  00145E  50F5               	movf	tablat,w,c
 11513  001460  0A64               	xorlw	100
 11514  001462  B4D8               	btfsc	status,2,c
 11515  001464  EF36  F00A         	goto	u3351
 11516  001468  EF38  F00A         	goto	u3350
 11517  00146C                     u3351:
 11518  00146C  EF4A  F00A         	goto	l3761
 11519  001470                     u3350:
 11520  001470                     
 11521                           ; BSR set to: 0
 11522  001470  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11523  001474  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11524  001478  CFDE FFF6          	movff	postinc2,tblptrl
 11525  00147C  CFDD FFF7          	movff	postdec2,tblptrh
 11526  001480                     	if	0	;tblptru may be non-zero
 11527  001480                     	endif
 11528  001480                     	if	0	;tblptru may be non-zero
 11529  001480                     	endif
 11530  001480  0008               	tblrd		*
 11531  001482  50F5               	movf	tablat,w,c
 11532  001484  0A69               	xorlw	105
 11533  001486  A4D8               	btfss	status,2,c
 11534  001488  EF48  F00A         	goto	u3361
 11535  00148C  EF4A  F00A         	goto	u3360
 11536  001490                     u3361:
 11537  001490  EF8A  F00A         	goto	l3767
 11538  001494                     u3360:
 11539  001494                     l3761:
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 11543  001494  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11544  001498  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11545  00149C  2ADE               	incf	postinc2,f,c
 11546  00149E  0E00               	movlw	0
 11547  0014A0  22DD               	addwfc	postdec2,f,c
 11548                           
 11549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11550  0014A2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11551  0014A6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11552  0014AA  CFDF F046          	movff	indf2,??_vfpfcnvrt
 11553  0014AE  0E02               	movlw	2
 11554  0014B0  26DE               	addwf	postinc2,f,c
 11555  0014B2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 11556  0014B6  0E00               	movlw	0
 11557  0014B8  22DD               	addwfc	postdec2,f,c
 11558  0014BA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11559  0014BE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11560  0014C2  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 11561  0014C6  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 11562  0014CA  0E00               	movlw	0
 11563  0014CC  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 11564  0014CE  0EFF               	movlw	-1
 11565  0014D0  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 11566  0014D2  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 11567  0014D4  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 11568  0014D6  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 11569  0014D8  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 11570  0014DA  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 11571  0014DC                     
 11572                           ; BSR set to: 0
 11573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 11574  0014DC  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 11575  0014E0  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11576  0014E4  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 11577  0014E8  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11578  0014EC  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11579  0014F0  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11580  0014F4  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11581  0014F8  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11582  0014FC  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11583  001500  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11584  001504  EC36  F004         	call	_dtoa	;wreg free
 11585  001508  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 11586  00150C  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 11587  001510  EFDB  F00A         	goto	l1412
 11588  001514                     l3767:
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 11592  001514  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11593  001518  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11594  00151C  CFDE FFF6          	movff	postinc2,tblptrl
 11595  001520  CFDD FFF7          	movff	postdec2,tblptrh
 11596  001524                     	if	0	;tblptru may be non-zero
 11597  001524                     	endif
 11598  001524                     	if	0	;tblptru may be non-zero
 11599  001524                     	endif
 11600  001524  0008               	tblrd		*
 11601  001526  50F5               	movf	tablat,w,c
 11602  001528  0A25               	xorlw	37
 11603  00152A  A4D8               	btfss	status,2,c
 11604  00152C  EF9A  F00A         	goto	u3371
 11605  001530  EF9C  F00A         	goto	u3370
 11606  001534                     u3371:
 11607  001534  EFB3  F00A         	goto	l3777
 11608  001538                     u3370:
 11609  001538                     
 11610                           ; BSR set to: 0
 11611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 11612  001538  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11613  00153C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11614  001540  2ADE               	incf	postinc2,f,c
 11615  001542  0E00               	movlw	0
 11616  001544  22DD               	addwfc	postdec2,f,c
 11617  001546                     
 11618                           ; BSR set to: 0
 11619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 11620  001546  0E00               	movlw	0
 11621  001548  6E02               	movwf	(fputc@c+1)^0,c
 11622  00154A  0E25               	movlw	37
 11623  00154C  6E01               	movwf	fputc@c^0,c
 11624  00154E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 11625  001552  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11626  001556  EC1A  F013         	call	_fputc	;wreg free
 11627  00155A                     l3773:
 11628                           
 11629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 11630  00155A  0E00               	movlw	0
 11631  00155C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 11632  00155E  0E01               	movlw	1
 11633  001560  6E40               	movwf	?_vfpfcnvrt^0,c
 11634  001562  EFDB  F00A         	goto	l1412
 11635  001566                     l3777:
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 11639  001566  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11640  00156A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11641  00156E  2ADE               	incf	postinc2,f,c
 11642  001570  0E00               	movlw	0
 11643  001572  22DD               	addwfc	postdec2,f,c
 11644  001574                     
 11645                           ; BSR set to: 0
 11646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 11647  001574  0E00               	movlw	0
 11648  001576  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 11649  001578  0E00               	movlw	0
 11650  00157A  6E40               	movwf	?_vfpfcnvrt^0,c
 11651  00157C  EFDB  F00A         	goto	l1412
 11652  001580                     l3783:
 11653                           
 11654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 11655  001580  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11656  001584  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11657  001588  CFDE FFF6          	movff	postinc2,tblptrl
 11658  00158C  CFDD FFF7          	movff	postdec2,tblptrh
 11659  001590                     	if	0	;tblptru may be non-zero
 11660  001590                     	endif
 11661  001590                     	if	0	;tblptru may be non-zero
 11662  001590                     	endif
 11663  001590  0008               	tblrd		*
 11664  001592  50F5               	movf	tablat,w,c
 11665  001594  6E01               	movwf	fputc@c^0,c
 11666  001596  6A02               	clrf	(fputc@c+1)^0,c
 11667  001598  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 11668  00159C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11669  0015A0  EC1A  F013         	call	_fputc	;wreg free
 11670  0015A4                     
 11671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 11672  0015A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11673  0015A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11674  0015AC  2ADE               	incf	postinc2,f,c
 11675  0015AE  0E00               	movlw	0
 11676  0015B0  22DD               	addwfc	postdec2,f,c
 11677  0015B2  EFAD  F00A         	goto	l3773
 11678  0015B6                     l1412:
 11679  0015B6  0012               	return		;funcret
 11680  0015B8                     __end_of_vfpfcnvrt:
 11681                           	callstack 0
 11682                           
 11683 ;; *************** function _dtoa *****************
 11684 ;; Defined at:
 11685 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11686 ;; Parameters:    Size  Location     Type
 11687 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 11688 ;;		 -> sprintf@f(6), 
 11689 ;;  d               8   29[COMRAM] long long 
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;  n               8   53[COMRAM] long long 
 11692 ;;  i               2   61[COMRAM] int 
 11693 ;;  s               2   51[COMRAM] int 
 11694 ;;  w               2   49[COMRAM] int 
 11695 ;;  p               2   47[COMRAM] int 
 11696 ;; Return value:  Size  Location     Type
 11697 ;;                  2   27[COMRAM] int 
 11698 ;; Registers used:
 11699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11700 ;; Tracked objects:
 11701 ;;		On entry : 0/0
 11702 ;;		On exit  : 0/0
 11703 ;;		Unchanged: 0/0
 11704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11705 ;;      Params:        10       0       0       0       0       0       0       0       0
 11706 ;;      Locals:        18       0       0       0       0       0       0       0       0
 11707 ;;      Temps:          8       0       0       0       0       0       0       0       0
 11708 ;;      Totals:        36       0       0       0       0       0       0       0       0
 11709 ;;Total ram usage:       36 bytes
 11710 ;; Hardware stack levels used: 1
 11711 ;; Hardware stack levels required when called: 5
 11712 ;; This function calls:
 11713 ;;		___aodiv
 11714 ;;		___aomod
 11715 ;;		_abs
 11716 ;;		_pad
 11717 ;; This function is called by:
 11718 ;;		_vfpfcnvrt
 11719 ;; This function uses a non-reentrant model
 11720 ;;
 11721                           
 11722                           	psect	text44
 11723  00086C                     __ptext44:
 11724                           	callstack 0
 11725  00086C                     _dtoa:
 11726                           	callstack 20
 11727  00086C                     
 11728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 11729  00086C  C01E  F036         	movff	dtoa@d,dtoa@n
 11730  000870  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 11731  000874  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 11732  000878  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 11733  00087C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 11734  000880  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 11735  000884  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 11736  000888  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 11737  00088C                     
 11738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 11739  00088C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 11740  00088E  EF4B  F004         	goto	u3161
 11741  000892  EF4E  F004         	goto	u3160
 11742  000896                     u3161:
 11743  000896  0E01               	movlw	1
 11744  000898  EF4F  F004         	goto	u3170
 11745  00089C                     u3160:
 11746  00089C  0E00               	movlw	0
 11747  00089E                     u3170:
 11748  00089E  6E34               	movwf	dtoa@s^0,c
 11749  0008A0  6A35               	clrf	(dtoa@s+1)^0,c
 11750                           
 11751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 11752  0008A2  5034               	movf	dtoa@s^0,w,c
 11753  0008A4  1035               	iorwf	(dtoa@s+1)^0,w,c
 11754  0008A6  B4D8               	btfsc	status,2,c
 11755  0008A8  EF58  F004         	goto	u3181
 11756  0008AC  EF5A  F004         	goto	u3180
 11757  0008B0                     u3181:
 11758  0008B0  EF6A  F004         	goto	l3653
 11759  0008B4                     u3180:
 11760  0008B4                     
 11761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 11762  0008B4  1E3D               	comf	(dtoa@n+7)^0,f,c
 11763  0008B6  1E3C               	comf	(dtoa@n+6)^0,f,c
 11764  0008B8  1E3B               	comf	(dtoa@n+5)^0,f,c
 11765  0008BA  1E3A               	comf	(dtoa@n+4)^0,f,c
 11766  0008BC  1E39               	comf	(dtoa@n+3)^0,f,c
 11767  0008BE  1E38               	comf	(dtoa@n+2)^0,f,c
 11768  0008C0  1E37               	comf	(dtoa@n+1)^0,f,c
 11769  0008C2  6C36               	negf	dtoa@n^0,c
 11770  0008C4  0E00               	movlw	0
 11771  0008C6  2237               	addwfc	(dtoa@n+1)^0,f,c
 11772  0008C8  2238               	addwfc	(dtoa@n+2)^0,f,c
 11773  0008CA  2239               	addwfc	(dtoa@n+3)^0,f,c
 11774  0008CC  223A               	addwfc	(dtoa@n+4)^0,f,c
 11775  0008CE  223B               	addwfc	(dtoa@n+5)^0,f,c
 11776  0008D0  223C               	addwfc	(dtoa@n+6)^0,f,c
 11777  0008D2  223D               	addwfc	(dtoa@n+7)^0,f,c
 11778  0008D4                     l3653:
 11779                           
 11780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 11781  0008D4  0100               	movlb	0	; () banked
 11782  0008D6  BF97               	btfsc	(_prec+1)& (0+255),7,b
 11783  0008D8  EF70  F004         	goto	u3191
 11784  0008DC  EF72  F004         	goto	u3190
 11785  0008E0                     u3191:
 11786  0008E0  EF73  F004         	goto	l3657
 11787  0008E4                     u3190:
 11788  0008E4                     
 11789                           ; BSR set to: 0
 11790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 11791  0008E4  9398               	bcf	_flags& (0+255),1,b
 11792  0008E6                     l3657:
 11793                           
 11794                           ; BSR set to: 0
 11795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 11796  0008E6  BF97               	btfsc	(_prec+1)& (0+255),7,b
 11797  0008E8  EF80  F004         	goto	u3200
 11798  0008EC  5197               	movf	(_prec+1)& (0+255),w,b
 11799  0008EE  E106               	bnz	u3201
 11800  0008F0  0596               	decf	_prec& (0+255),w,b
 11801  0008F2  B0D8               	btfsc	status,0,c
 11802  0008F4  EF7E  F004         	goto	u3201
 11803  0008F8  EF80  F004         	goto	u3200
 11804  0008FC                     u3201:
 11805  0008FC  EF86  F004         	goto	l1385
 11806  000900                     u3200:
 11807  000900                     
 11808                           ; BSR set to: 0
 11809  000900  0E00               	movlw	0
 11810  000902  6E31               	movwf	(dtoa@p+1)^0,c
 11811  000904  0E01               	movlw	1
 11812  000906  6E30               	movwf	dtoa@p^0,c
 11813  000908  EF8A  F004         	goto	l1387
 11814  00090C                     l1385:
 11815                           
 11816                           ; BSR set to: 0
 11817  00090C  C096  F030         	movff	_prec,dtoa@p
 11818  000910  C097  F031         	movff	_prec+1,dtoa@p+1
 11819  000914                     l1387:
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 11823  000914  C094  F032         	movff	_width,dtoa@w
 11824  000918  C095  F033         	movff	_width+1,dtoa@w+1
 11825  00091C                     
 11826                           ; BSR set to: 0
 11827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 11828  00091C  5034               	movf	dtoa@s^0,w,c
 11829  00091E  1035               	iorwf	(dtoa@s+1)^0,w,c
 11830  000920  A4D8               	btfss	status,2,c
 11831  000922  EF95  F004         	goto	u3211
 11832  000926  EF97  F004         	goto	u3210
 11833  00092A                     u3211:
 11834  00092A  EF9E  F004         	goto	l3665
 11835  00092E                     u3210:
 11836  00092E                     
 11837                           ; BSR set to: 0
 11838  00092E  A598               	btfss	_flags& (0+255),2,b
 11839  000930  EF9C  F004         	goto	u3221
 11840  000934  EF9E  F004         	goto	u3220
 11841  000938                     u3221:
 11842  000938  EFA1  F004         	goto	l3667
 11843  00093C                     u3220:
 11844  00093C                     l3665:
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 11848  00093C  0632               	decf	dtoa@w^0,f,c
 11849  00093E  A0D8               	btfss	status,0,c
 11850  000940  0633               	decf	(dtoa@w+1)^0,f,c
 11851  000942                     l3667:
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 11855  000942  0E00               	movlw	0
 11856  000944  6E3F               	movwf	(dtoa@i+1)^0,c
 11857  000946  0E1F               	movlw	31
 11858  000948  6E3E               	movwf	dtoa@i^0,c
 11859  00094A                     
 11860                           ; BSR set to: 0
 11861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 11862  00094A  0E00               	movlw	0
 11863  00094C  6FC4               	movwf	(_dbuf+31)& (0+255),b
 11864                           
 11865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11866  00094E  EF25  F005         	goto	l3681
 11867  000952                     l3671:
 11868                           
 11869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 11870  000952  063E               	decf	dtoa@i^0,f,c
 11871  000954  A0D8               	btfss	status,0,c
 11872  000956  063F               	decf	(dtoa@i+1)^0,f,c
 11873  000958                     
 11874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 11875  000958  0EA5               	movlw	low _dbuf
 11876  00095A  243E               	addwf	dtoa@i^0,w,c
 11877  00095C  6ED9               	movwf	fsr2l,c
 11878  00095E  0E00               	movlw	high _dbuf
 11879  000960  203F               	addwfc	(dtoa@i+1)^0,w,c
 11880  000962  6EDA               	movwf	fsr2h,c
 11881  000964  C036  F001         	movff	dtoa@n,___aomod@dividend
 11882  000968  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 11883  00096C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 11884  000970  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 11885  000974  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 11886  000978  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 11887  00097C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 11888  000980  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 11889  000984  0E0A               	movlw	10
 11890  000986  6E09               	movwf	___aomod@divisor^0,c
 11891  000988  0E00               	movlw	0
 11892  00098A  6E0A               	movwf	(___aomod@divisor+1)^0,c
 11893  00098C  0E00               	movlw	0
 11894  00098E  6E0B               	movwf	(___aomod@divisor+2)^0,c
 11895  000990  0E00               	movlw	0
 11896  000992  6E0C               	movwf	(___aomod@divisor+3)^0,c
 11897  000994  0E00               	movlw	0
 11898  000996  6E0D               	movwf	(___aomod@divisor+4)^0,c
 11899  000998  0E00               	movlw	0
 11900  00099A  6E0E               	movwf	(___aomod@divisor+5)^0,c
 11901  00099C  0E00               	movlw	0
 11902  00099E  6E0F               	movwf	(___aomod@divisor+6)^0,c
 11903  0009A0  0E00               	movlw	0
 11904  0009A2  6E10               	movwf	(___aomod@divisor+7)^0,c
 11905  0009A4  EC6E  F00F         	call	___aomod	;wreg free
 11906  0009A8  C001  F026         	movff	?___aomod,??_dtoa
 11907  0009AC  C002  F027         	movff	?___aomod+1,??_dtoa+1
 11908  0009B0  C003  F028         	movff	?___aomod+2,??_dtoa+2
 11909  0009B4  C004  F029         	movff	?___aomod+3,??_dtoa+3
 11910  0009B8  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 11911  0009BC  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 11912  0009C0  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 11913  0009C4  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 11914  0009C8  C026  F013         	movff	??_dtoa,abs@a
 11915  0009CC  C028  F014         	movff	??_dtoa+2,abs@a+1
 11916  0009D0  EC2A  F01B         	call	_abs	;wreg free
 11917  0009D4  5013               	movf	?_abs^0,w,c
 11918  0009D6  0F30               	addlw	48
 11919  0009D8  6EDF               	movwf	indf2,c
 11920  0009DA                     
 11921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 11922  0009DA  0630               	decf	dtoa@p^0,f,c
 11923  0009DC  A0D8               	btfss	status,0,c
 11924  0009DE  0631               	decf	(dtoa@p+1)^0,f,c
 11925  0009E0                     
 11926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 11927  0009E0  0632               	decf	dtoa@w^0,f,c
 11928  0009E2  A0D8               	btfss	status,0,c
 11929  0009E4  0633               	decf	(dtoa@w+1)^0,f,c
 11930  0009E6                     
 11931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 11932  0009E6  C036  F001         	movff	dtoa@n,___aodiv@dividend
 11933  0009EA  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 11934  0009EE  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 11935  0009F2  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 11936  0009F6  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 11937  0009FA  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 11938  0009FE  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 11939  000A02  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 11940  000A06  0E0A               	movlw	10
 11941  000A08  6E09               	movwf	___aodiv@divisor^0,c
 11942  000A0A  0E00               	movlw	0
 11943  000A0C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 11944  000A0E  0E00               	movlw	0
 11945  000A10  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 11946  000A12  0E00               	movlw	0
 11947  000A14  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 11948  000A16  0E00               	movlw	0
 11949  000A18  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 11950  000A1A  0E00               	movlw	0
 11951  000A1C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 11952  000A1E  0E00               	movlw	0
 11953  000A20  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 11954  000A22  0E00               	movlw	0
 11955  000A24  6E10               	movwf	(___aodiv@divisor+7)^0,c
 11956  000A26  EC3F  F00D         	call	___aodiv	;wreg free
 11957  000A2A  C001  F036         	movff	?___aodiv,dtoa@n
 11958  000A2E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 11959  000A32  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 11960  000A36  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 11961  000A3A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 11962  000A3E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 11963  000A42  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 11964  000A46  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 11965  000A4A                     l3681:
 11966                           
 11967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11968  000A4A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 11969  000A4C  EF30  F005         	goto	u3231
 11970  000A50  503F               	movf	(dtoa@i+1)^0,w,c
 11971  000A52  E108               	bnz	u3230
 11972  000A54  043E               	decf	dtoa@i^0,w,c
 11973  000A56  A0D8               	btfss	status,0,c
 11974  000A58  EF30  F005         	goto	u3231
 11975  000A5C  EF32  F005         	goto	u3230
 11976  000A60                     u3231:
 11977  000A60  EF63  F005         	goto	l3691
 11978  000A64                     u3230:
 11979  000A64  5036               	movf	dtoa@n^0,w,c
 11980  000A66  1037               	iorwf	(dtoa@n+1)^0,w,c
 11981  000A68  1038               	iorwf	(dtoa@n+2)^0,w,c
 11982  000A6A  1039               	iorwf	(dtoa@n+3)^0,w,c
 11983  000A6C  103A               	iorwf	(dtoa@n+4)^0,w,c
 11984  000A6E  103B               	iorwf	(dtoa@n+5)^0,w,c
 11985  000A70  103C               	iorwf	(dtoa@n+6)^0,w,c
 11986  000A72  103D               	iorwf	(dtoa@n+7)^0,w,c
 11987  000A74  A4D8               	btfss	status,2,c
 11988  000A76  EF3F  F005         	goto	u3241
 11989  000A7A  EF41  F005         	goto	u3240
 11990  000A7E                     u3241:
 11991  000A7E  EFA9  F004         	goto	l3671
 11992  000A82                     u3240:
 11993  000A82  BE31               	btfsc	(dtoa@p+1)^0,7,c
 11994  000A84  EF4E  F005         	goto	u3250
 11995  000A88  5031               	movf	(dtoa@p+1)^0,w,c
 11996  000A8A  E106               	bnz	u3251
 11997  000A8C  0430               	decf	dtoa@p^0,w,c
 11998  000A8E  B0D8               	btfsc	status,0,c
 11999  000A90  EF4C  F005         	goto	u3251
 12000  000A94  EF4E  F005         	goto	u3250
 12001  000A98                     u3251:
 12002  000A98  EFA9  F004         	goto	l3671
 12003  000A9C                     u3250:
 12004  000A9C  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12005  000A9E  EF59  F005         	goto	u3261
 12006  000AA2  5033               	movf	(dtoa@w+1)^0,w,c
 12007  000AA4  E108               	bnz	u3260
 12008  000AA6  0432               	decf	dtoa@w^0,w,c
 12009  000AA8  A0D8               	btfss	status,0,c
 12010  000AAA  EF59  F005         	goto	u3261
 12011  000AAE  EF5B  F005         	goto	u3260
 12012  000AB2                     u3261:
 12013  000AB2  EF63  F005         	goto	l3691
 12014  000AB6                     u3260:
 12015  000AB6  0100               	movlb	0	; () banked
 12016  000AB8  B398               	btfsc	_flags& (0+255),1,b
 12017  000ABA  EF61  F005         	goto	u3271
 12018  000ABE  EF63  F005         	goto	u3270
 12019  000AC2                     u3271:
 12020  000AC2  EFA9  F004         	goto	l3671
 12021  000AC6                     u3270:
 12022  000AC6                     l3691:
 12023                           
 12024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12025  000AC6  5034               	movf	dtoa@s^0,w,c
 12026  000AC8  1035               	iorwf	(dtoa@s+1)^0,w,c
 12027  000ACA  A4D8               	btfss	status,2,c
 12028  000ACC  EF6A  F005         	goto	u3281
 12029  000AD0  EF6C  F005         	goto	u3280
 12030  000AD4                     u3281:
 12031  000AD4  EF74  F005         	goto	l3695
 12032  000AD8                     u3280:
 12033  000AD8  0100               	movlb	0	; () banked
 12034  000ADA  A598               	btfss	_flags& (0+255),2,b
 12035  000ADC  EF72  F005         	goto	u3291
 12036  000AE0  EF74  F005         	goto	u3290
 12037  000AE4                     u3291:
 12038  000AE4  EF92  F005         	goto	l3705
 12039  000AE8                     u3290:
 12040  000AE8                     l3695:
 12041                           
 12042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 12043  000AE8  063E               	decf	dtoa@i^0,f,c
 12044  000AEA  A0D8               	btfss	status,0,c
 12045  000AEC  063F               	decf	(dtoa@i+1)^0,f,c
 12046  000AEE                     
 12047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12048  000AEE  5034               	movf	dtoa@s^0,w,c
 12049  000AF0  1035               	iorwf	(dtoa@s+1)^0,w,c
 12050  000AF2  A4D8               	btfss	status,2,c
 12051  000AF4  EF7E  F005         	goto	u3301
 12052  000AF8  EF80  F005         	goto	u3300
 12053  000AFC                     u3301:
 12054  000AFC  EF86  F005         	goto	l3701
 12055  000B00                     u3300:
 12056  000B00  0E00               	movlw	0
 12057  000B02  6E2F               	movwf	(_dtoa$2017+1)^0,c
 12058  000B04  0E2B               	movlw	43
 12059  000B06  6E2E               	movwf	_dtoa$2017^0,c
 12060  000B08  EF8A  F005         	goto	l3703
 12061  000B0C                     l3701:
 12062  000B0C  0E00               	movlw	0
 12063  000B0E  6E2F               	movwf	(_dtoa$2017+1)^0,c
 12064  000B10  0E2D               	movlw	45
 12065  000B12  6E2E               	movwf	_dtoa$2017^0,c
 12066  000B14                     l3703:
 12067  000B14  0EA5               	movlw	low _dbuf
 12068  000B16  243E               	addwf	dtoa@i^0,w,c
 12069  000B18  6ED9               	movwf	fsr2l,c
 12070  000B1A  0E00               	movlw	high _dbuf
 12071  000B1C  203F               	addwfc	(dtoa@i+1)^0,w,c
 12072  000B1E  6EDA               	movwf	fsr2h,c
 12073  000B20  C02E  FFDF         	movff	_dtoa$2017,indf2
 12074  000B24                     l3705:
 12075                           
 12076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12077  000B24  C01C  F011         	movff	dtoa@fp,pad@fp
 12078  000B28  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12079  000B2C  0EA5               	movlw	low _dbuf
 12080  000B2E  243E               	addwf	dtoa@i^0,w,c
 12081  000B30  6E13               	movwf	pad@buf^0,c
 12082  000B32  0E00               	movlw	high _dbuf
 12083  000B34  203F               	addwfc	(dtoa@i+1)^0,w,c
 12084  000B36  6E14               	movwf	(pad@buf+1)^0,c
 12085  000B38  C032  F015         	movff	dtoa@w,pad@p
 12086  000B3C  C033  F016         	movff	dtoa@w+1,pad@p+1
 12087  000B40  EC7F  F013         	call	_pad	;wreg free
 12088  000B44  C011  F01C         	movff	?_pad,?_dtoa
 12089  000B48  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12090  000B4C  0012               	return		;funcret
 12091  000B4E                     __end_of_dtoa:
 12092                           	callstack 0
 12093                           
 12094 ;; *************** function _pad *****************
 12095 ;; Defined at:
 12096 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12099 ;;		 -> sprintf@f(6), 
 12100 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12101 ;;		 -> dbuf(32), 
 12102 ;;  p               2   20[COMRAM] int 
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;  w               2   25[COMRAM] int 
 12105 ;;  i               2   23[COMRAM] int 
 12106 ;; Return value:  Size  Location     Type
 12107 ;;                  2   16[COMRAM] int 
 12108 ;; Registers used:
 12109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12110 ;; Tracked objects:
 12111 ;;		On entry : 0/0
 12112 ;;		On exit  : 0/0
 12113 ;;		Unchanged: 0/0
 12114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12115 ;;      Params:         6       0       0       0       0       0       0       0       0
 12116 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12117 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12118 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12119 ;;Total ram usage:       11 bytes
 12120 ;; Hardware stack levels used: 1
 12121 ;; Hardware stack levels required when called: 4
 12122 ;; This function calls:
 12123 ;;		_fputc
 12124 ;;		_fputs
 12125 ;;		_strlen
 12126 ;; This function is called by:
 12127 ;;		_dtoa
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           	psect	text45
 12132  0026FE                     __ptext45:
 12133                           	callstack 0
 12134  0026FE                     _pad:
 12135                           	callstack 20
 12136  0026FE                     
 12137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12138  0026FE  0100               	movlb	0	; () banked
 12139  002700  A198               	btfss	_flags& (0+255),0,b
 12140  002702  EF85  F013         	goto	u3011
 12141  002706  EF87  F013         	goto	u3010
 12142  00270A                     u3011:
 12143  00270A  EF91  F013         	goto	l3545
 12144  00270E                     u3010:
 12145  00270E                     
 12146                           ; BSR set to: 0
 12147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12148  00270E  C013  F00A         	movff	pad@buf,fputs@s
 12149  002712  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12150  002716  C011  F00C         	movff	pad@fp,fputs@fp
 12151  00271A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12152  00271E  EC08  F01B         	call	_fputs	;wreg free
 12153  002722                     l3545:
 12154                           
 12155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12156  002722  BE16               	btfsc	(pad@p+1)^0,7,c
 12157  002724  EF96  F013         	goto	u3021
 12158  002728  EF98  F013         	goto	u3020
 12159  00272C                     u3021:
 12160  00272C  EF9E  F013         	goto	l3549
 12161  002730                     u3020:
 12162  002730  C015  F01A         	movff	pad@p,pad@w
 12163  002734  C016  F01B         	movff	pad@p+1,pad@w+1
 12164  002738  EFA2  F013         	goto	l1374
 12165  00273C                     l3549:
 12166  00273C  0E00               	movlw	0
 12167  00273E  6E1B               	movwf	(pad@w+1)^0,c
 12168  002740  0E00               	movlw	0
 12169  002742  6E1A               	movwf	pad@w^0,c
 12170  002744                     l1374:
 12171                           
 12172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12173  002744  0E00               	movlw	0
 12174  002746  6E19               	movwf	(pad@i+1)^0,c
 12175  002748  0E00               	movlw	0
 12176  00274A  6E18               	movwf	pad@i^0,c
 12177                           
 12178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12179  00274C  EFB4  F013         	goto	l3555
 12180  002750                     l3551:
 12181                           
 12182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12183  002750  0E00               	movlw	0
 12184  002752  6E02               	movwf	(fputc@c+1)^0,c
 12185  002754  0E20               	movlw	32
 12186  002756  6E01               	movwf	fputc@c^0,c
 12187  002758  C011  F003         	movff	pad@fp,fputc@fp
 12188  00275C  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12189  002760  EC1A  F013         	call	_fputc	;wreg free
 12190  002764                     
 12191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12192  002764  4A18               	infsnz	pad@i^0,f,c
 12193  002766  2A19               	incf	(pad@i+1)^0,f,c
 12194  002768                     l3555:
 12195                           
 12196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12197  002768  501A               	movf	pad@w^0,w,c
 12198  00276A  5C18               	subwf	pad@i^0,w,c
 12199  00276C  5019               	movf	(pad@i+1)^0,w,c
 12200  00276E  0A80               	xorlw	128
 12201  002770  6E17               	movwf	??_pad^0,c
 12202  002772  501B               	movf	(pad@w+1)^0,w,c
 12203  002774  0A80               	xorlw	128
 12204  002776  5817               	subwfb	??_pad^0,w,c
 12205  002778  A0D8               	btfss	status,0,c
 12206  00277A  EFC1  F013         	goto	u3031
 12207  00277E  EFC3  F013         	goto	u3030
 12208  002782                     u3031:
 12209  002782  EFA8  F013         	goto	l3551
 12210  002786                     u3030:
 12211  002786                     
 12212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12213  002786  0100               	movlb	0	; () banked
 12214  002788  B198               	btfsc	_flags& (0+255),0,b
 12215  00278A  EFC9  F013         	goto	u3041
 12216  00278E  EFCB  F013         	goto	u3040
 12217  002792                     u3041:
 12218  002792  EFD5  F013         	goto	l3559
 12219  002796                     u3040:
 12220  002796                     
 12221                           ; BSR set to: 0
 12222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12223  002796  C013  F00A         	movff	pad@buf,fputs@s
 12224  00279A  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12225  00279E  C011  F00C         	movff	pad@fp,fputs@fp
 12226  0027A2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12227  0027A6  EC08  F01B         	call	_fputs	;wreg free
 12228  0027AA                     l3559:
 12229                           
 12230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12231  0027AA  C013  F001         	movff	pad@buf,strlen@s
 12232  0027AE  C014  F002         	movff	pad@buf+1,strlen@s+1
 12233  0027B2  ECD9  F01B         	call	_strlen	;wreg free
 12234  0027B6  501A               	movf	pad@w^0,w,c
 12235  0027B8  2401               	addwf	?_strlen^0,w,c
 12236  0027BA  6E11               	movwf	?_pad^0,c
 12237  0027BC  501B               	movf	(pad@w+1)^0,w,c
 12238  0027BE  2002               	addwfc	(?_strlen+1)^0,w,c
 12239  0027C0  6E12               	movwf	(?_pad+1)^0,c
 12240  0027C2  0012               	return		;funcret
 12241  0027C4                     __end_of_pad:
 12242                           	callstack 0
 12243                           
 12244 ;; *************** function _strlen *****************
 12245 ;; Defined at:
 12246 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12249 ;;		 -> dbuf(32), 
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12252 ;;		 -> dbuf(32), 
 12253 ;; Return value:  Size  Location     Type
 12254 ;;                  2    0[COMRAM] unsigned int 
 12255 ;; Registers used:
 12256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12257 ;; Tracked objects:
 12258 ;;		On entry : 0/0
 12259 ;;		On exit  : 0/0
 12260 ;;		Unchanged: 0/0
 12261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12262 ;;      Params:         2       0       0       0       0       0       0       0       0
 12263 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12264 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12265 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12266 ;;Total ram usage:        4 bytes
 12267 ;; Hardware stack levels used: 1
 12268 ;; Hardware stack levels required when called: 1
 12269 ;; This function calls:
 12270 ;;		Nothing
 12271 ;; This function is called by:
 12272 ;;		_pad
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           	psect	text46
 12277  0037B2                     __ptext46:
 12278                           	callstack 0
 12279  0037B2                     _strlen:
 12280                           	callstack 22
 12281  0037B2  C001  F003         	movff	strlen@s,strlen@a
 12282  0037B6  C002  F004         	movff	strlen@s+1,strlen@a+1
 12283  0037BA  EFE1  F01B         	goto	l3451
 12284  0037BE                     l3449:
 12285  0037BE  4A01               	infsnz	strlen@s^0,f,c
 12286  0037C0  2A02               	incf	(strlen@s+1)^0,f,c
 12287  0037C2                     l3451:
 12288  0037C2  C001  FFD9         	movff	strlen@s,fsr2l
 12289  0037C6  C002  FFDA         	movff	strlen@s+1,fsr2h
 12290  0037CA  50DF               	movf	indf2,w,c
 12291  0037CC  A4D8               	btfss	status,2,c
 12292  0037CE  EFEB  F01B         	goto	u2851
 12293  0037D2  EFED  F01B         	goto	u2850
 12294  0037D6                     u2851:
 12295  0037D6  EFDF  F01B         	goto	l3449
 12296  0037DA                     u2850:
 12297  0037DA  5003               	movf	strlen@a^0,w,c
 12298  0037DC  5C01               	subwf	strlen@s^0,w,c
 12299  0037DE  6E01               	movwf	?_strlen^0,c
 12300  0037E0  5004               	movf	(strlen@a+1)^0,w,c
 12301  0037E2  5802               	subwfb	(strlen@s+1)^0,w,c
 12302  0037E4  6E02               	movwf	(?_strlen+1)^0,c
 12303  0037E6  0012               	return		;funcret
 12304  0037E8                     __end_of_strlen:
 12305                           	callstack 0
 12306                           
 12307 ;; *************** function _fputs *****************
 12308 ;; Defined at:
 12309 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12312 ;;		 -> dbuf(32), 
 12313 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12314 ;;		 -> sprintf@f(6), 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;  i               2   14[COMRAM] int 
 12317 ;;  c               1   13[COMRAM] unsigned char 
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  2    9[COMRAM] int 
 12320 ;; Registers used:
 12321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12327 ;;      Params:         4       0       0       0       0       0       0       0       0
 12328 ;;      Locals:         3       0       0       0       0       0       0       0       0
 12329 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12330 ;;      Totals:         7       0       0       0       0       0       0       0       0
 12331 ;;Total ram usage:        7 bytes
 12332 ;; Hardware stack levels used: 1
 12333 ;; Hardware stack levels required when called: 3
 12334 ;; This function calls:
 12335 ;;		_fputc
 12336 ;; This function is called by:
 12337 ;;		_pad
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341                           	psect	text47
 12342  003610                     __ptext47:
 12343                           	callstack 0
 12344  003610                     _fputs:
 12345                           	callstack 20
 12346  003610  0E00               	movlw	0
 12347  003612  6E10               	movwf	(fputs@i+1)^0,c
 12348  003614  0E00               	movlw	0
 12349  003616  6E0F               	movwf	fputs@i^0,c
 12350  003618  EF19  F01B         	goto	l3445
 12351  00361C                     l3441:
 12352  00361C  C00E  F001         	movff	fputs@c,fputc@c
 12353  003620  6A02               	clrf	(fputc@c+1)^0,c
 12354  003622  C00C  F003         	movff	fputs@fp,fputc@fp
 12355  003626  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12356  00362A  EC1A  F013         	call	_fputc	;wreg free
 12357  00362E  4A0F               	infsnz	fputs@i^0,f,c
 12358  003630  2A10               	incf	(fputs@i+1)^0,f,c
 12359  003632                     l3445:
 12360  003632  500F               	movf	fputs@i^0,w,c
 12361  003634  240A               	addwf	fputs@s^0,w,c
 12362  003636  6ED9               	movwf	fsr2l,c
 12363  003638  5010               	movf	(fputs@i+1)^0,w,c
 12364  00363A  200B               	addwfc	(fputs@s+1)^0,w,c
 12365  00363C  6EDA               	movwf	fsr2h,c
 12366  00363E  50DF               	movf	indf2,w,c
 12367  003640  6E0E               	movwf	fputs@c^0,c
 12368  003642  500E               	movf	fputs@c^0,w,c
 12369  003644  A4D8               	btfss	status,2,c
 12370  003646  EF27  F01B         	goto	u2841
 12371  00364A  EF29  F01B         	goto	u2840
 12372  00364E                     u2841:
 12373  00364E  EF0E  F01B         	goto	l3441
 12374  003652                     u2840:
 12375  003652  0012               	return		;funcret
 12376  003654                     __end_of_fputs:
 12377                           	callstack 0
 12378                           
 12379 ;; *************** function _fputc *****************
 12380 ;; Defined at:
 12381 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 12382 ;; Parameters:    Size  Location     Type
 12383 ;;  c               2    0[COMRAM] int 
 12384 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12385 ;;		 -> sprintf@f(6), 
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;		None
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  2    0[COMRAM] int 
 12390 ;; Registers used:
 12391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12397 ;;      Params:         4       0       0       0       0       0       0       0       0
 12398 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12399 ;;      Temps:          5       0       0       0       0       0       0       0       0
 12400 ;;      Totals:         9       0       0       0       0       0       0       0       0
 12401 ;;Total ram usage:        9 bytes
 12402 ;; Hardware stack levels used: 1
 12403 ;; Hardware stack levels required when called: 2
 12404 ;; This function calls:
 12405 ;;		_putch
 12406 ;; This function is called by:
 12407 ;;		_pad
 12408 ;;		_vfpfcnvrt
 12409 ;;		_fputs
 12410 ;; This function uses a non-reentrant model
 12411 ;;
 12412                           
 12413                           	psect	text48
 12414  002634                     __ptext48:
 12415                           	callstack 0
 12416  002634                     _fputc:
 12417                           	callstack 23
 12418  002634  5003               	movf	fputc@fp^0,w,c
 12419  002636  1004               	iorwf	(fputc@fp+1)^0,w,c
 12420  002638  B4D8               	btfsc	status,2,c
 12421  00263A  EF21  F013         	goto	u2791
 12422  00263E  EF23  F013         	goto	u2790
 12423  002642                     u2791:
 12424  002642  EF2C  F013         	goto	l3427
 12425  002646                     u2790:
 12426  002646  5003               	movf	fputc@fp^0,w,c
 12427  002648  1004               	iorwf	(fputc@fp+1)^0,w,c
 12428  00264A  A4D8               	btfss	status,2,c
 12429  00264C  EF2A  F013         	goto	u2801
 12430  002650  EF2C  F013         	goto	u2800
 12431  002654                     u2801:
 12432  002654  EF31  F013         	goto	l3429
 12433  002658                     u2800:
 12434  002658                     l3427:
 12435  002658  5001               	movf	fputc@c^0,w,c
 12436  00265A  ECA6  F01D         	call	_putch
 12437  00265E  EF7E  F013         	goto	l1438
 12438  002662                     l3429:
 12439  002662  EE20 F004          	lfsr	2,4
 12440  002666  5003               	movf	fputc@fp^0,w,c
 12441  002668  26D9               	addwf	fsr2l,f,c
 12442  00266A  5004               	movf	(fputc@fp+1)^0,w,c
 12443  00266C  22DA               	addwfc	fsr2h,f,c
 12444  00266E  50DE               	movf	postinc2,w,c
 12445  002670  10DE               	iorwf	postinc2,w,c
 12446  002672  B4D8               	btfsc	status,2,c
 12447  002674  EF3E  F013         	goto	u2811
 12448  002678  EF40  F013         	goto	u2810
 12449  00267C                     u2811:
 12450  00267C  EF5B  F013         	goto	l3433
 12451  002680                     u2810:
 12452  002680  EE20 F004          	lfsr	2,4
 12453  002684  5003               	movf	fputc@fp^0,w,c
 12454  002686  26D9               	addwf	fsr2l,f,c
 12455  002688  5004               	movf	(fputc@fp+1)^0,w,c
 12456  00268A  22DA               	addwfc	fsr2h,f,c
 12457  00268C  EE10 F002          	lfsr	1,2
 12458  002690  5003               	movf	fputc@fp^0,w,c
 12459  002692  26E1               	addwf	fsr1l,f,c
 12460  002694  5004               	movf	(fputc@fp+1)^0,w,c
 12461  002696  22E2               	addwfc	fsr1h,f,c
 12462  002698  50DE               	movf	postinc2,w,c
 12463  00269A  5CE6               	subwf	postinc1,w,c
 12464  00269C  50E6               	movf	postinc1,w,c
 12465  00269E  0A80               	xorlw	128
 12466  0026A0  6E09               	movwf	(??_fputc+4)^0,c
 12467  0026A2  50DE               	movf	postinc2,w,c
 12468  0026A4  0A80               	xorlw	128
 12469  0026A6  5809               	subwfb	(??_fputc+4)^0,w,c
 12470  0026A8  B0D8               	btfsc	status,0,c
 12471  0026AA  EF59  F013         	goto	u2821
 12472  0026AE  EF5B  F013         	goto	u2820
 12473  0026B2                     u2821:
 12474  0026B2  EF7E  F013         	goto	l1438
 12475  0026B6                     u2820:
 12476  0026B6                     l3433:
 12477  0026B6  EE20 F002          	lfsr	2,2
 12478  0026BA  5003               	movf	fputc@fp^0,w,c
 12479  0026BC  26D9               	addwf	fsr2l,f,c
 12480  0026BE  5004               	movf	(fputc@fp+1)^0,w,c
 12481  0026C0  22DA               	addwfc	fsr2h,f,c
 12482  0026C2  CFDE F005          	movff	postinc2,??_fputc
 12483  0026C6  CFDD F006          	movff	postdec2,??_fputc+1
 12484  0026CA  C003  FFD9         	movff	fputc@fp,fsr2l
 12485  0026CE  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12486  0026D2  CFDE F007          	movff	postinc2,??_fputc+2
 12487  0026D6  CFDD F008          	movff	postdec2,??_fputc+3
 12488  0026DA  5005               	movf	??_fputc^0,w,c
 12489  0026DC  2407               	addwf	(??_fputc+2)^0,w,c
 12490  0026DE  6ED9               	movwf	fsr2l,c
 12491  0026E0  5006               	movf	(??_fputc+1)^0,w,c
 12492  0026E2  2008               	addwfc	(??_fputc+3)^0,w,c
 12493  0026E4  6EDA               	movwf	fsr2h,c
 12494  0026E6  C001  FFDF         	movff	fputc@c,indf2
 12495  0026EA  EE20 F002          	lfsr	2,2
 12496  0026EE  5003               	movf	fputc@fp^0,w,c
 12497  0026F0  26D9               	addwf	fsr2l,f,c
 12498  0026F2  5004               	movf	(fputc@fp+1)^0,w,c
 12499  0026F4  22DA               	addwfc	fsr2h,f,c
 12500  0026F6  2ADE               	incf	postinc2,f,c
 12501  0026F8  0E00               	movlw	0
 12502  0026FA  22DD               	addwfc	postdec2,f,c
 12503  0026FC                     l1438:
 12504  0026FC  0012               	return		;funcret
 12505  0026FE                     __end_of_fputc:
 12506                           	callstack 0
 12507                           
 12508 ;; *************** function _putch *****************
 12509 ;; Defined at:
 12510 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 12511 ;; Parameters:    Size  Location     Type
 12512 ;;  c               1    wreg     unsigned char 
 12513 ;; Auto vars:     Size  Location     Type
 12514 ;;  c               1    0[COMRAM] unsigned char 
 12515 ;; Return value:  Size  Location     Type
 12516 ;;                  1    wreg      void 
 12517 ;; Registers used:
 12518 ;;		wreg
 12519 ;; Tracked objects:
 12520 ;;		On entry : 0/0
 12521 ;;		On exit  : 0/0
 12522 ;;		Unchanged: 0/0
 12523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12524 ;;      Params:         0       0       0       0       0       0       0       0       0
 12525 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12526 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12527 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12528 ;;Total ram usage:        0 bytes
 12529 ;; Hardware stack levels used: 1
 12530 ;; Hardware stack levels required when called: 1
 12531 ;; This function calls:
 12532 ;;		Nothing
 12533 ;; This function is called by:
 12534 ;;		_fputc
 12535 ;; This function uses a non-reentrant model
 12536 ;;
 12537                           
 12538                           	psect	text49
 12539  003B4C                     __ptext49:
 12540                           	callstack 0
 12541  003B4C                     _putch:
 12542                           	callstack 23
 12543  003B4C  0012               	return		;funcret
 12544  003B4E                     __end_of_putch:
 12545                           	callstack 0
 12546                           
 12547 ;; *************** function _abs *****************
 12548 ;; Defined at:
 12549 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  a               2   18[COMRAM] int 
 12552 ;; Auto vars:     Size  Location     Type
 12553 ;;		None
 12554 ;; Return value:  Size  Location     Type
 12555 ;;                  2   18[COMRAM] int 
 12556 ;; Registers used:
 12557 ;;		wreg, status,2, status,0
 12558 ;; Tracked objects:
 12559 ;;		On entry : 0/0
 12560 ;;		On exit  : 0/0
 12561 ;;		Unchanged: 0/0
 12562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12563 ;;      Params:         2       0       0       0       0       0       0       0       0
 12564 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12565 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12566 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12567 ;;Total ram usage:        4 bytes
 12568 ;; Hardware stack levels used: 1
 12569 ;; Hardware stack levels required when called: 1
 12570 ;; This function calls:
 12571 ;;		Nothing
 12572 ;; This function is called by:
 12573 ;;		_dtoa
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           	psect	text50
 12578  003654                     __ptext50:
 12579                           	callstack 0
 12580  003654                     _abs:
 12581                           	callstack 23
 12582  003654  BE14               	btfsc	(abs@a+1)^0,7,c
 12583  003656  EF37  F01B         	goto	u3050
 12584  00365A  5014               	movf	(abs@a+1)^0,w,c
 12585  00365C  E106               	bnz	u3051
 12586  00365E  0413               	decf	abs@a^0,w,c
 12587  003660  B0D8               	btfsc	status,0,c
 12588  003662  EF35  F01B         	goto	u3051
 12589  003666  EF37  F01B         	goto	u3050
 12590  00366A                     u3051:
 12591  00366A  EF45  F01B         	goto	l1423
 12592  00366E                     u3050:
 12593  00366E  C013  F015         	movff	abs@a,??_abs
 12594  003672  C014  F016         	movff	abs@a+1,??_abs+1
 12595  003676  1E15               	comf	??_abs^0,f,c
 12596  003678  1E16               	comf	(??_abs+1)^0,f,c
 12597  00367A  4A15               	infsnz	??_abs^0,f,c
 12598  00367C  2A16               	incf	(??_abs+1)^0,f,c
 12599  00367E  C015  F013         	movff	??_abs,?_abs
 12600  003682  C016  F014         	movff	??_abs+1,?_abs+1
 12601  003686  EF49  F01B         	goto	l1426
 12602  00368A                     l1423:
 12603  00368A  C013  F013         	movff	abs@a,?_abs
 12604  00368E  C014  F014         	movff	abs@a+1,?_abs+1
 12605  003692                     l1426:
 12606  003692  0012               	return		;funcret
 12607  003694                     __end_of_abs:
 12608                           	callstack 0
 12609                           
 12610 ;; *************** function ___aomod *****************
 12611 ;; Defined at:
 12612 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;  dividend        8    0[COMRAM] long long 
 12615 ;;  divisor         8    8[COMRAM] long long 
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;  sign            1   17[COMRAM] unsigned char 
 12618 ;;  counter         1   16[COMRAM] unsigned char 
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  8    0[COMRAM] long long 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2, status,0
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12628 ;;      Params:        16       0       0       0       0       0       0       0       0
 12629 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12630 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12631 ;;      Totals:        18       0       0       0       0       0       0       0       0
 12632 ;;Total ram usage:       18 bytes
 12633 ;; Hardware stack levels used: 1
 12634 ;; Hardware stack levels required when called: 1
 12635 ;; This function calls:
 12636 ;;		Nothing
 12637 ;; This function is called by:
 12638 ;;		_dtoa
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text51
 12643  001EDC                     __ptext51:
 12644                           	callstack 0
 12645  001EDC                     ___aomod:
 12646                           	callstack 23
 12647  001EDC  0E00               	movlw	0
 12648  001EDE  6E12               	movwf	___aomod@sign^0,c
 12649  001EE0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 12650  001EE2  EF77  F00F         	goto	u2950
 12651  001EE6  EF75  F00F         	goto	u2951
 12652  001EEA                     u2951:
 12653  001EEA  EF89  F00F         	goto	l3513
 12654  001EEE                     u2950:
 12655  001EEE  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12656  001EF0  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12657  001EF2  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12658  001EF4  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12659  001EF6  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12660  001EF8  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12661  001EFA  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12662  001EFC  6C01               	negf	___aomod@dividend^0,c
 12663  001EFE  0E00               	movlw	0
 12664  001F00  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12665  001F02  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12666  001F04  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12667  001F06  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12668  001F08  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12669  001F0A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12670  001F0C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12671  001F0E  0E01               	movlw	1
 12672  001F10  6E12               	movwf	___aomod@sign^0,c
 12673  001F12                     l3513:
 12674  001F12  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 12675  001F14  EF90  F00F         	goto	u2960
 12676  001F18  EF8E  F00F         	goto	u2961
 12677  001F1C                     u2961:
 12678  001F1C  EFA0  F00F         	goto	l3517
 12679  001F20                     u2960:
 12680  001F20  1E10               	comf	(___aomod@divisor+7)^0,f,c
 12681  001F22  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 12682  001F24  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 12683  001F26  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 12684  001F28  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 12685  001F2A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 12686  001F2C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 12687  001F2E  6C09               	negf	___aomod@divisor^0,c
 12688  001F30  0E00               	movlw	0
 12689  001F32  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 12690  001F34  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 12691  001F36  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 12692  001F38  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 12693  001F3A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 12694  001F3C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 12695  001F3E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 12696  001F40                     l3517:
 12697  001F40  5009               	movf	___aomod@divisor^0,w,c
 12698  001F42  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 12699  001F44  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 12700  001F46  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 12701  001F48  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 12702  001F4A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 12703  001F4C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 12704  001F4E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 12705  001F50  B4D8               	btfsc	status,2,c
 12706  001F52  EFAD  F00F         	goto	u2971
 12707  001F56  EFAF  F00F         	goto	u2970
 12708  001F5A                     u2971:
 12709  001F5A  EFF7  F00F         	goto	l3533
 12710  001F5E                     u2970:
 12711  001F5E  0E01               	movlw	1
 12712  001F60  6E11               	movwf	___aomod@counter^0,c
 12713  001F62  EFBD  F00F         	goto	l3523
 12714  001F66                     l3521:
 12715  001F66  90D8               	bcf	status,0,c
 12716  001F68  3609               	rlcf	___aomod@divisor^0,f,c
 12717  001F6A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 12718  001F6C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 12719  001F6E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 12720  001F70  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 12721  001F72  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 12722  001F74  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 12723  001F76  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 12724  001F78  2A11               	incf	___aomod@counter^0,f,c
 12725  001F7A                     l3523:
 12726  001F7A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 12727  001F7C  EFC2  F00F         	goto	u2981
 12728  001F80  EFC4  F00F         	goto	u2980
 12729  001F84                     u2981:
 12730  001F84  EFB3  F00F         	goto	l3521
 12731  001F88                     u2980:
 12732  001F88                     l3525:
 12733  001F88  5009               	movf	___aomod@divisor^0,w,c
 12734  001F8A  5C01               	subwf	___aomod@dividend^0,w,c
 12735  001F8C  500A               	movf	(___aomod@divisor+1)^0,w,c
 12736  001F8E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 12737  001F90  500B               	movf	(___aomod@divisor+2)^0,w,c
 12738  001F92  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 12739  001F94  500C               	movf	(___aomod@divisor+3)^0,w,c
 12740  001F96  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 12741  001F98  500D               	movf	(___aomod@divisor+4)^0,w,c
 12742  001F9A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 12743  001F9C  500E               	movf	(___aomod@divisor+5)^0,w,c
 12744  001F9E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 12745  001FA0  500F               	movf	(___aomod@divisor+6)^0,w,c
 12746  001FA2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 12747  001FA4  5010               	movf	(___aomod@divisor+7)^0,w,c
 12748  001FA6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 12749  001FA8  A0D8               	btfss	status,0,c
 12750  001FAA  EFD9  F00F         	goto	u2991
 12751  001FAE  EFDB  F00F         	goto	u2990
 12752  001FB2                     u2991:
 12753  001FB2  EFEB  F00F         	goto	l3529
 12754  001FB6                     u2990:
 12755  001FB6  5009               	movf	___aomod@divisor^0,w,c
 12756  001FB8  5E01               	subwf	___aomod@dividend^0,f,c
 12757  001FBA  500A               	movf	(___aomod@divisor+1)^0,w,c
 12758  001FBC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 12759  001FBE  500B               	movf	(___aomod@divisor+2)^0,w,c
 12760  001FC0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 12761  001FC2  500C               	movf	(___aomod@divisor+3)^0,w,c
 12762  001FC4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 12763  001FC6  500D               	movf	(___aomod@divisor+4)^0,w,c
 12764  001FC8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 12765  001FCA  500E               	movf	(___aomod@divisor+5)^0,w,c
 12766  001FCC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 12767  001FCE  500F               	movf	(___aomod@divisor+6)^0,w,c
 12768  001FD0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 12769  001FD2  5010               	movf	(___aomod@divisor+7)^0,w,c
 12770  001FD4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 12771  001FD6                     l3529:
 12772  001FD6  90D8               	bcf	status,0,c
 12773  001FD8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 12774  001FDA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 12775  001FDC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 12776  001FDE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 12777  001FE0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 12778  001FE2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 12779  001FE4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 12780  001FE6  3209               	rrcf	___aomod@divisor^0,f,c
 12781  001FE8  2E11               	decfsz	___aomod@counter^0,f,c
 12782  001FEA  EFC4  F00F         	goto	l3525
 12783  001FEE                     l3533:
 12784  001FEE  5012               	movf	___aomod@sign^0,w,c
 12785  001FF0  B4D8               	btfsc	status,2,c
 12786  001FF2  EFFD  F00F         	goto	u3001
 12787  001FF6  EFFF  F00F         	goto	u3000
 12788  001FFA                     u3001:
 12789  001FFA  EF0F  F010         	goto	l3537
 12790  001FFE                     u3000:
 12791  001FFE  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12792  002000  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12793  002002  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12794  002004  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12795  002006  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12796  002008  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12797  00200A  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12798  00200C  6C01               	negf	___aomod@dividend^0,c
 12799  00200E  0E00               	movlw	0
 12800  002010  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12801  002012  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12802  002014  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12803  002016  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12804  002018  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12805  00201A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12806  00201C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12807  00201E                     l3537:
 12808  00201E  C001  F001         	movff	___aomod@dividend,?___aomod
 12809  002022  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 12810  002026  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 12811  00202A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 12812  00202E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 12813  002032  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 12814  002036  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 12815  00203A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 12816  00203E  0012               	return		;funcret
 12817  002040                     __end_of___aomod:
 12818                           	callstack 0
 12819                           
 12820 ;; *************** function ___aodiv *****************
 12821 ;; Defined at:
 12822 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 12823 ;; Parameters:    Size  Location     Type
 12824 ;;  dividend        8    0[COMRAM] long long 
 12825 ;;  divisor         8    8[COMRAM] long long 
 12826 ;; Auto vars:     Size  Location     Type
 12827 ;;  quotient        8   18[COMRAM] long long 
 12828 ;;  sign            1   17[COMRAM] unsigned char 
 12829 ;;  counter         1   16[COMRAM] unsigned char 
 12830 ;; Return value:  Size  Location     Type
 12831 ;;                  8    0[COMRAM] long long 
 12832 ;; Registers used:
 12833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12834 ;; Tracked objects:
 12835 ;;		On entry : 0/0
 12836 ;;		On exit  : 0/0
 12837 ;;		Unchanged: 0/0
 12838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12839 ;;      Params:        16       0       0       0       0       0       0       0       0
 12840 ;;      Locals:        10       0       0       0       0       0       0       0       0
 12841 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12842 ;;      Totals:        26       0       0       0       0       0       0       0       0
 12843 ;;Total ram usage:       26 bytes
 12844 ;; Hardware stack levels used: 1
 12845 ;; Hardware stack levels required when called: 1
 12846 ;; This function calls:
 12847 ;;		Nothing
 12848 ;; This function is called by:
 12849 ;;		_dtoa
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           	psect	text52
 12854  001A7E                     __ptext52:
 12855                           	callstack 0
 12856  001A7E                     ___aodiv:
 12857                           	callstack 23
 12858  001A7E  0E00               	movlw	0
 12859  001A80  6E12               	movwf	___aodiv@sign^0,c
 12860  001A82  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 12861  001A84  EF48  F00D         	goto	u2880
 12862  001A88  EF46  F00D         	goto	u2881
 12863  001A8C                     u2881:
 12864  001A8C  EF5A  F00D         	goto	l3469
 12865  001A90                     u2880:
 12866  001A90  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 12867  001A92  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 12868  001A94  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 12869  001A96  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 12870  001A98  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 12871  001A9A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 12872  001A9C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 12873  001A9E  6C09               	negf	___aodiv@divisor^0,c
 12874  001AA0  0E00               	movlw	0
 12875  001AA2  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 12876  001AA4  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 12877  001AA6  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 12878  001AA8  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 12879  001AAA  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 12880  001AAC  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 12881  001AAE  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 12882  001AB0  0E01               	movlw	1
 12883  001AB2  6E12               	movwf	___aodiv@sign^0,c
 12884  001AB4                     l3469:
 12885  001AB4  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 12886  001AB6  EF61  F00D         	goto	u2890
 12887  001ABA  EF5F  F00D         	goto	u2891
 12888  001ABE                     u2891:
 12889  001ABE  EF73  F00D         	goto	l3475
 12890  001AC2                     u2890:
 12891  001AC2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 12892  001AC4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 12893  001AC6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 12894  001AC8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 12895  001ACA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 12896  001ACC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 12897  001ACE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 12898  001AD0  6C01               	negf	___aodiv@dividend^0,c
 12899  001AD2  0E00               	movlw	0
 12900  001AD4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 12901  001AD6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 12902  001AD8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 12903  001ADA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 12904  001ADC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 12905  001ADE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 12906  001AE0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 12907  001AE2  0E01               	movlw	1
 12908  001AE4  1A12               	xorwf	___aodiv@sign^0,f,c
 12909  001AE6                     l3475:
 12910  001AE6  EE20  F013         	lfsr	2,___aodiv@quotient
 12911  001AEA  0E07               	movlw	7
 12912  001AEC                     u2901:
 12913  001AEC  6ADE               	clrf	postinc2,c
 12914  001AEE  06E8               	decf	wreg,f,c
 12915  001AF0  E2FD               	bc	u2901
 12916  001AF2  5009               	movf	___aodiv@divisor^0,w,c
 12917  001AF4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 12918  001AF6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 12919  001AF8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 12920  001AFA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 12921  001AFC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 12922  001AFE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 12923  001B00  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 12924  001B02  B4D8               	btfsc	status,2,c
 12925  001B04  EF86  F00D         	goto	u2911
 12926  001B08  EF88  F00D         	goto	u2910
 12927  001B0C                     u2911:
 12928  001B0C  EFDA  F00D         	goto	l3497
 12929  001B10                     u2910:
 12930  001B10  0E01               	movlw	1
 12931  001B12  6E11               	movwf	___aodiv@counter^0,c
 12932  001B14  EF96  F00D         	goto	l3483
 12933  001B18                     l3481:
 12934  001B18  90D8               	bcf	status,0,c
 12935  001B1A  3609               	rlcf	___aodiv@divisor^0,f,c
 12936  001B1C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 12937  001B1E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 12938  001B20  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 12939  001B22  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 12940  001B24  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 12941  001B26  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 12942  001B28  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 12943  001B2A  2A11               	incf	___aodiv@counter^0,f,c
 12944  001B2C                     l3483:
 12945  001B2C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 12946  001B2E  EF9B  F00D         	goto	u2921
 12947  001B32  EF9D  F00D         	goto	u2920
 12948  001B36                     u2921:
 12949  001B36  EF8C  F00D         	goto	l3481
 12950  001B3A                     u2920:
 12951  001B3A                     l3485:
 12952  001B3A  90D8               	bcf	status,0,c
 12953  001B3C  3613               	rlcf	___aodiv@quotient^0,f,c
 12954  001B3E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 12955  001B40  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 12956  001B42  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 12957  001B44  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 12958  001B46  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 12959  001B48  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 12960  001B4A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 12961  001B4C  5009               	movf	___aodiv@divisor^0,w,c
 12962  001B4E  5C01               	subwf	___aodiv@dividend^0,w,c
 12963  001B50  500A               	movf	(___aodiv@divisor+1)^0,w,c
 12964  001B52  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 12965  001B54  500B               	movf	(___aodiv@divisor+2)^0,w,c
 12966  001B56  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 12967  001B58  500C               	movf	(___aodiv@divisor+3)^0,w,c
 12968  001B5A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 12969  001B5C  500D               	movf	(___aodiv@divisor+4)^0,w,c
 12970  001B5E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 12971  001B60  500E               	movf	(___aodiv@divisor+5)^0,w,c
 12972  001B62  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 12973  001B64  500F               	movf	(___aodiv@divisor+6)^0,w,c
 12974  001B66  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 12975  001B68  5010               	movf	(___aodiv@divisor+7)^0,w,c
 12976  001B6A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 12977  001B6C  A0D8               	btfss	status,0,c
 12978  001B6E  EFBB  F00D         	goto	u2931
 12979  001B72  EFBD  F00D         	goto	u2930
 12980  001B76                     u2931:
 12981  001B76  EFCE  F00D         	goto	l3493
 12982  001B7A                     u2930:
 12983  001B7A  5009               	movf	___aodiv@divisor^0,w,c
 12984  001B7C  5E01               	subwf	___aodiv@dividend^0,f,c
 12985  001B7E  500A               	movf	(___aodiv@divisor+1)^0,w,c
 12986  001B80  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 12987  001B82  500B               	movf	(___aodiv@divisor+2)^0,w,c
 12988  001B84  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 12989  001B86  500C               	movf	(___aodiv@divisor+3)^0,w,c
 12990  001B88  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 12991  001B8A  500D               	movf	(___aodiv@divisor+4)^0,w,c
 12992  001B8C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 12993  001B8E  500E               	movf	(___aodiv@divisor+5)^0,w,c
 12994  001B90  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 12995  001B92  500F               	movf	(___aodiv@divisor+6)^0,w,c
 12996  001B94  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 12997  001B96  5010               	movf	(___aodiv@divisor+7)^0,w,c
 12998  001B98  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 12999  001B9A  8013               	bsf	___aodiv@quotient^0,0,c
 13000  001B9C                     l3493:
 13001  001B9C  90D8               	bcf	status,0,c
 13002  001B9E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13003  001BA0  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13004  001BA2  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13005  001BA4  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13006  001BA6  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13007  001BA8  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13008  001BAA  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13009  001BAC  3209               	rrcf	___aodiv@divisor^0,f,c
 13010  001BAE  2E11               	decfsz	___aodiv@counter^0,f,c
 13011  001BB0  EF9D  F00D         	goto	l3485
 13012  001BB4                     l3497:
 13013  001BB4  5012               	movf	___aodiv@sign^0,w,c
 13014  001BB6  B4D8               	btfsc	status,2,c
 13015  001BB8  EFE0  F00D         	goto	u2941
 13016  001BBC  EFE2  F00D         	goto	u2940
 13017  001BC0                     u2941:
 13018  001BC0  EFF2  F00D         	goto	l3501
 13019  001BC4                     u2940:
 13020  001BC4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13021  001BC6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13022  001BC8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13023  001BCA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13024  001BCC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13025  001BCE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13026  001BD0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13027  001BD2  6C13               	negf	___aodiv@quotient^0,c
 13028  001BD4  0E00               	movlw	0
 13029  001BD6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13030  001BD8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13031  001BDA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13032  001BDC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13033  001BDE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13034  001BE0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13035  001BE2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13036  001BE4                     l3501:
 13037  001BE4  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13038  001BE8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13039  001BEC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13040  001BF0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13041  001BF4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13042  001BF8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13043  001BFC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13044  001C00  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13045  001C04  0012               	return		;funcret
 13046  001C06                     __end_of___aodiv:
 13047                           	callstack 0
 13048                           
 13049 ;; *************** function _bcd_to_decimal *****************
 13050 ;; Defined at:
 13051 ;;		line 175 in file "main.c"
 13052 ;; Parameters:    Size  Location     Type
 13053 ;;  number          1    wreg     unsigned char 
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;  number          1    1[COMRAM] unsigned char 
 13056 ;; Return value:  Size  Location     Type
 13057 ;;                  1    wreg      unsigned char 
 13058 ;; Registers used:
 13059 ;;		wreg, status,2, status,0, prodl, prodh
 13060 ;; Tracked objects:
 13061 ;;		On entry : 0/0
 13062 ;;		On exit  : 0/0
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13065 ;;      Params:         0       0       0       0       0       0       0       0       0
 13066 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13067 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13068 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13069 ;;Total ram usage:        2 bytes
 13070 ;; Hardware stack levels used: 1
 13071 ;; Hardware stack levels required when called: 1
 13072 ;; This function calls:
 13073 ;;		Nothing
 13074 ;; This function is called by:
 13075 ;;		_Print_Ticket
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           	psect	text53
 13080  003AB2                     __ptext53:
 13081                           	callstack 0
 13082  003AB2                     _bcd_to_decimal:
 13083                           	callstack 27
 13084                           
 13085                           ;incstack = 0
 13086                           ;bcd_to_decimal@number stored from wreg
 13087  003AB2  6E02               	movwf	bcd_to_decimal@number^0,c
 13088  003AB4                     
 13089                           ;main.c: 176:   return((number >> 4) * 10 + (number & 0x0F));
 13090  003AB4  C002  F001         	movff	bcd_to_decimal@number,??_bcd_to_decimal
 13091  003AB8  0E0F               	movlw	15
 13092  003ABA  1601               	andwf	??_bcd_to_decimal^0,f,c
 13093  003ABC  3802               	swapf	bcd_to_decimal@number^0,w,c
 13094  003ABE  0B0F               	andlw	15
 13095  003AC0  0D0A               	mullw	10
 13096  003AC2  50F3               	movf	243,w,c
 13097  003AC4  2401               	addwf	??_bcd_to_decimal^0,w,c
 13098  003AC6  0012               	return		;funcret
 13099  003AC8                     __end_of_bcd_to_decimal:
 13100                           	callstack 0
 13101                           
 13102 ;; *************** function ___awmod *****************
 13103 ;; Defined at:
 13104 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  dividend        2    0[COMRAM] int 
 13107 ;;  divisor         2    2[COMRAM] int 
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;  sign            1    5[COMRAM] unsigned char 
 13110 ;;  counter         1    4[COMRAM] unsigned char 
 13111 ;; Return value:  Size  Location     Type
 13112 ;;                  2    0[COMRAM] int 
 13113 ;; Registers used:
 13114 ;;		wreg, status,2, status,0
 13115 ;; Tracked objects:
 13116 ;;		On entry : 0/0
 13117 ;;		On exit  : 0/0
 13118 ;;		Unchanged: 0/0
 13119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13120 ;;      Params:         4       0       0       0       0       0       0       0       0
 13121 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13122 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13123 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13124 ;;Total ram usage:        6 bytes
 13125 ;; Hardware stack levels used: 1
 13126 ;; Hardware stack levels required when called: 1
 13127 ;; This function calls:
 13128 ;;		Nothing
 13129 ;; This function is called by:
 13130 ;;		_Print_Hora
 13131 ;;		_Print_Minuto
 13132 ;;		_Print_Segundo
 13133 ;;		_Print_Dia
 13134 ;;		_Print_Mes
 13135 ;;		_Print_Anio
 13136 ;;		_decimal_to_bcd
 13137 ;;		_Print_Ticket
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           	psect	text54
 13142  0029FC                     __ptext54:
 13143                           	callstack 0
 13144  0029FC                     ___awmod:
 13145                           	callstack 26
 13146  0029FC  0E00               	movlw	0
 13147  0029FE  6E06               	movwf	___awmod@sign^0,c
 13148  002A00  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 13149  002A02  EF07  F015         	goto	u3580
 13150  002A06  EF05  F015         	goto	u3581
 13151  002A0A                     u3581:
 13152  002A0A  EF0D  F015         	goto	l3959
 13153  002A0E                     u3580:
 13154  002A0E  6C01               	negf	___awmod@dividend^0,c
 13155  002A10  1E02               	comf	(___awmod@dividend+1)^0,f,c
 13156  002A12  B0D8               	btfsc	status,0,c
 13157  002A14  2A02               	incf	(___awmod@dividend+1)^0,f,c
 13158  002A16  0E01               	movlw	1
 13159  002A18  6E06               	movwf	___awmod@sign^0,c
 13160  002A1A                     l3959:
 13161  002A1A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 13162  002A1C  EF14  F015         	goto	u3590
 13163  002A20  EF12  F015         	goto	u3591
 13164  002A24                     u3591:
 13165  002A24  EF18  F015         	goto	l3963
 13166  002A28                     u3590:
 13167  002A28  6C03               	negf	___awmod@divisor^0,c
 13168  002A2A  1E04               	comf	(___awmod@divisor+1)^0,f,c
 13169  002A2C  B0D8               	btfsc	status,0,c
 13170  002A2E  2A04               	incf	(___awmod@divisor+1)^0,f,c
 13171  002A30                     l3963:
 13172  002A30  5003               	movf	___awmod@divisor^0,w,c
 13173  002A32  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 13174  002A34  B4D8               	btfsc	status,2,c
 13175  002A36  EF1F  F015         	goto	u3601
 13176  002A3A  EF21  F015         	goto	u3600
 13177  002A3E                     u3601:
 13178  002A3E  EF45  F015         	goto	l3979
 13179  002A42                     u3600:
 13180  002A42  0E01               	movlw	1
 13181  002A44  6E05               	movwf	___awmod@counter^0,c
 13182  002A46  EF29  F015         	goto	l3969
 13183  002A4A                     l3967:
 13184  002A4A  90D8               	bcf	status,0,c
 13185  002A4C  3603               	rlcf	___awmod@divisor^0,f,c
 13186  002A4E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 13187  002A50  2A05               	incf	___awmod@counter^0,f,c
 13188  002A52                     l3969:
 13189  002A52  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 13190  002A54  EF2E  F015         	goto	u3611
 13191  002A58  EF30  F015         	goto	u3610
 13192  002A5C                     u3611:
 13193  002A5C  EF25  F015         	goto	l3967
 13194  002A60                     u3610:
 13195  002A60                     l3971:
 13196  002A60  5003               	movf	___awmod@divisor^0,w,c
 13197  002A62  5C01               	subwf	___awmod@dividend^0,w,c
 13198  002A64  5004               	movf	(___awmod@divisor+1)^0,w,c
 13199  002A66  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 13200  002A68  A0D8               	btfss	status,0,c
 13201  002A6A  EF39  F015         	goto	u3621
 13202  002A6E  EF3B  F015         	goto	u3620
 13203  002A72                     u3621:
 13204  002A72  EF3F  F015         	goto	l3975
 13205  002A76                     u3620:
 13206  002A76  5003               	movf	___awmod@divisor^0,w,c
 13207  002A78  5E01               	subwf	___awmod@dividend^0,f,c
 13208  002A7A  5004               	movf	(___awmod@divisor+1)^0,w,c
 13209  002A7C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 13210  002A7E                     l3975:
 13211  002A7E  90D8               	bcf	status,0,c
 13212  002A80  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 13213  002A82  3203               	rrcf	___awmod@divisor^0,f,c
 13214  002A84  2E05               	decfsz	___awmod@counter^0,f,c
 13215  002A86  EF30  F015         	goto	l3971
 13216  002A8A                     l3979:
 13217  002A8A  5006               	movf	___awmod@sign^0,w,c
 13218  002A8C  B4D8               	btfsc	status,2,c
 13219  002A8E  EF4B  F015         	goto	u3631
 13220  002A92  EF4D  F015         	goto	u3630
 13221  002A96                     u3631:
 13222  002A96  EF51  F015         	goto	l3983
 13223  002A9A                     u3630:
 13224  002A9A  6C01               	negf	___awmod@dividend^0,c
 13225  002A9C  1E02               	comf	(___awmod@dividend+1)^0,f,c
 13226  002A9E  B0D8               	btfsc	status,0,c
 13227  002AA0  2A02               	incf	(___awmod@dividend+1)^0,f,c
 13228  002AA2                     l3983:
 13229  002AA2  C001  F001         	movff	___awmod@dividend,?___awmod
 13230  002AA6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 13231  002AAA  0012               	return		;funcret
 13232  002AAC                     __end_of___awmod:
 13233                           	callstack 0
 13234                           
 13235 ;; *************** function ___awdiv *****************
 13236 ;; Defined at:
 13237 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 13238 ;; Parameters:    Size  Location     Type
 13239 ;;  dividend        2    0[COMRAM] int 
 13240 ;;  divisor         2    2[COMRAM] int 
 13241 ;; Auto vars:     Size  Location     Type
 13242 ;;  quotient        2    6[COMRAM] int 
 13243 ;;  sign            1    5[COMRAM] unsigned char 
 13244 ;;  counter         1    4[COMRAM] unsigned char 
 13245 ;; Return value:  Size  Location     Type
 13246 ;;                  2    0[COMRAM] int 
 13247 ;; Registers used:
 13248 ;;		wreg, status,2, status,0
 13249 ;; Tracked objects:
 13250 ;;		On entry : 0/0
 13251 ;;		On exit  : 0/0
 13252 ;;		Unchanged: 0/0
 13253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13254 ;;      Params:         4       0       0       0       0       0       0       0       0
 13255 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13256 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13257 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13258 ;;Total ram usage:        8 bytes
 13259 ;; Hardware stack levels used: 1
 13260 ;; Hardware stack levels required when called: 1
 13261 ;; This function calls:
 13262 ;;		Nothing
 13263 ;; This function is called by:
 13264 ;;		_Print_Hora
 13265 ;;		_Print_Minuto
 13266 ;;		_Print_Segundo
 13267 ;;		_Print_Dia
 13268 ;;		_Print_Mes
 13269 ;;		_Print_Anio
 13270 ;;		_decimal_to_bcd
 13271 ;;		_Print_Ticket
 13272 ;; This function uses a non-reentrant model
 13273 ;;
 13274                           
 13275                           	psect	text55
 13276  0027C4                     __ptext55:
 13277                           	callstack 0
 13278  0027C4                     ___awdiv:
 13279                           	callstack 26
 13280  0027C4  0E00               	movlw	0
 13281  0027C6  6E06               	movwf	___awdiv@sign^0,c
 13282  0027C8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 13283  0027CA  EFEB  F013         	goto	u3520
 13284  0027CE  EFE9  F013         	goto	u3521
 13285  0027D2                     u3521:
 13286  0027D2  EFF1  F013         	goto	l3915
 13287  0027D6                     u3520:
 13288  0027D6  6C03               	negf	___awdiv@divisor^0,c
 13289  0027D8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 13290  0027DA  B0D8               	btfsc	status,0,c
 13291  0027DC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 13292  0027DE  0E01               	movlw	1
 13293  0027E0  6E06               	movwf	___awdiv@sign^0,c
 13294  0027E2                     l3915:
 13295  0027E2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 13296  0027E4  EFF8  F013         	goto	u3530
 13297  0027E8  EFF6  F013         	goto	u3531
 13298  0027EC                     u3531:
 13299  0027EC  EFFE  F013         	goto	l3921
 13300  0027F0                     u3530:
 13301  0027F0  6C01               	negf	___awdiv@dividend^0,c
 13302  0027F2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 13303  0027F4  B0D8               	btfsc	status,0,c
 13304  0027F6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 13305  0027F8  0E01               	movlw	1
 13306  0027FA  1A06               	xorwf	___awdiv@sign^0,f,c
 13307  0027FC                     l3921:
 13308  0027FC  0E00               	movlw	0
 13309  0027FE  6E08               	movwf	(___awdiv@quotient+1)^0,c
 13310  002800  0E00               	movlw	0
 13311  002802  6E07               	movwf	___awdiv@quotient^0,c
 13312  002804  5003               	movf	___awdiv@divisor^0,w,c
 13313  002806  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 13314  002808  B4D8               	btfsc	status,2,c
 13315  00280A  EF09  F014         	goto	u3541
 13316  00280E  EF0B  F014         	goto	u3540
 13317  002812                     u3541:
 13318  002812  EF33  F014         	goto	l3943
 13319  002816                     u3540:
 13320  002816  0E01               	movlw	1
 13321  002818  6E05               	movwf	___awdiv@counter^0,c
 13322  00281A  EF13  F014         	goto	l3929
 13323  00281E                     l3927:
 13324  00281E  90D8               	bcf	status,0,c
 13325  002820  3603               	rlcf	___awdiv@divisor^0,f,c
 13326  002822  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 13327  002824  2A05               	incf	___awdiv@counter^0,f,c
 13328  002826                     l3929:
 13329  002826  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 13330  002828  EF18  F014         	goto	u3551
 13331  00282C  EF1A  F014         	goto	u3550
 13332  002830                     u3551:
 13333  002830  EF0F  F014         	goto	l3927
 13334  002834                     u3550:
 13335  002834                     l3931:
 13336  002834  90D8               	bcf	status,0,c
 13337  002836  3607               	rlcf	___awdiv@quotient^0,f,c
 13338  002838  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 13339  00283A  5003               	movf	___awdiv@divisor^0,w,c
 13340  00283C  5C01               	subwf	___awdiv@dividend^0,w,c
 13341  00283E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 13342  002840  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 13343  002842  A0D8               	btfss	status,0,c
 13344  002844  EF26  F014         	goto	u3561
 13345  002848  EF28  F014         	goto	u3560
 13346  00284C                     u3561:
 13347  00284C  EF2D  F014         	goto	l3939
 13348  002850                     u3560:
 13349  002850  5003               	movf	___awdiv@divisor^0,w,c
 13350  002852  5E01               	subwf	___awdiv@dividend^0,f,c
 13351  002854  5004               	movf	(___awdiv@divisor+1)^0,w,c
 13352  002856  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 13353  002858  8007               	bsf	___awdiv@quotient^0,0,c
 13354  00285A                     l3939:
 13355  00285A  90D8               	bcf	status,0,c
 13356  00285C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 13357  00285E  3203               	rrcf	___awdiv@divisor^0,f,c
 13358  002860  2E05               	decfsz	___awdiv@counter^0,f,c
 13359  002862  EF1A  F014         	goto	l3931
 13360  002866                     l3943:
 13361  002866  5006               	movf	___awdiv@sign^0,w,c
 13362  002868  B4D8               	btfsc	status,2,c
 13363  00286A  EF39  F014         	goto	u3571
 13364  00286E  EF3B  F014         	goto	u3570
 13365  002872                     u3571:
 13366  002872  EF3F  F014         	goto	l3947
 13367  002876                     u3570:
 13368  002876  6C07               	negf	___awdiv@quotient^0,c
 13369  002878  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 13370  00287A  B0D8               	btfsc	status,0,c
 13371  00287C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 13372  00287E                     l3947:
 13373  00287E  C007  F001         	movff	___awdiv@quotient,?___awdiv
 13374  002882  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 13375  002886  0012               	return		;funcret
 13376  002888                     __end_of___awdiv:
 13377                           	callstack 0
 13378                           
 13379 ;; *************** function _UART_Println *****************
 13380 ;; Defined at:
 13381 ;;		line 44 in file "UART.c"
 13382 ;; Parameters:    Size  Location     Type
 13383 ;;  buffer          2    1[COMRAM] PTR unsigned char 
 13384 ;;		 -> STR_21(29), sms(10), STR_1(7), 
 13385 ;; Auto vars:     Size  Location     Type
 13386 ;;		None
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  1    wreg      void 
 13389 ;; Registers used:
 13390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13396 ;;      Params:         2       0       0       0       0       0       0       0       0
 13397 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13398 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13399 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13400 ;;Total ram usage:        2 bytes
 13401 ;; Hardware stack levels used: 1
 13402 ;; Hardware stack levels required when called: 2
 13403 ;; This function calls:
 13404 ;;		_UART_Write
 13405 ;; This function is called by:
 13406 ;;		_main
 13407 ;;		_Print_Ticket
 13408 ;; This function uses a non-reentrant model
 13409 ;;
 13410                           
 13411                           	psect	text56
 13412  002DC8                     __ptext56:
 13413                           	callstack 0
 13414  002DC8                     _UART_Println:
 13415                           	callstack 28
 13416  002DC8                     
 13417                           ;UART.c: 45:     while(*buffer){
 13418  002DC8  EFFA  F016         	goto	l4039
 13419  002DCC                     l4035:
 13420                           
 13421                           ;UART.c: 46:         UART_Write(*buffer);
 13422  002DCC  C002  FFF6         	movff	UART_Println@buffer,tblptrl
 13423  002DD0  C003  FFF7         	movff	UART_Println@buffer+1,tblptrh
 13424  002DD4  6AF8               	clrf	tblptru,c
 13425  002DD6  0E07               	movlw	(high __ramtop+-1)
 13426  002DD8  64F7               	cpfsgt	tblptrh,c
 13427  002DDA  D003               	bra	u3717
 13428  002DDC  0008               	tblrd		*
 13429  002DDE  50F5               	movf	tablat,w,c
 13430  002DE0  D005               	bra	u3710
 13431  002DE2                     u3717:
 13432  002DE2  CFF6 FFE1          	movff	tblptrl,fsr1l
 13433  002DE6  CFF7 FFE2          	movff	tblptrh,fsr1h
 13434  002DEA  50E7               	movf	indf1,w,c
 13435  002DEC                     u3710:
 13436  002DEC  EC64  F01D         	call	_UART_Write
 13437  002DF0                     
 13438                           ;UART.c: 47:         buffer++;
 13439  002DF0  4A02               	infsnz	UART_Println@buffer^0,f,c
 13440  002DF2  2A03               	incf	(UART_Println@buffer+1)^0,f,c
 13441  002DF4                     l4039:
 13442                           
 13443                           ;UART.c: 45:     while(*buffer){
 13444  002DF4  C002  FFF6         	movff	UART_Println@buffer,tblptrl
 13445  002DF8  C003  FFF7         	movff	UART_Println@buffer+1,tblptrh
 13446  002DFC  6AF8               	clrf	tblptru,c
 13447  002DFE  0E07               	movlw	(high __ramtop+-1)
 13448  002E00  64F7               	cpfsgt	tblptrh,c
 13449  002E02  D003               	bra	u3727
 13450  002E04  0008               	tblrd		*
 13451  002E06  50F5               	movf	tablat,w,c
 13452  002E08  D005               	bra	u3720
 13453  002E0A                     u3727:
 13454  002E0A  CFF6 FFE1          	movff	tblptrl,fsr1l
 13455  002E0E  CFF7 FFE2          	movff	tblptrh,fsr1h
 13456  002E12  50E7               	movf	indf1,w,c
 13457  002E14                     u3720:
 13458  002E14  0900               	iorlw	0
 13459  002E16  A4D8               	btfss	status,2,c
 13460  002E18  EF10  F017         	goto	u3731
 13461  002E1C  EF12  F017         	goto	u3730
 13462  002E20                     u3731:
 13463  002E20  EFE6  F016         	goto	l4035
 13464  002E24                     u3730:
 13465  002E24                     
 13466                           ;UART.c: 49:     TXREG=10;
 13467  002E24  0E0A               	movlw	10
 13468  002E26  6EAD               	movwf	173,c	;volatile
 13469  002E28                     l477:
 13470  002E28  A2AC               	btfss	172,1,c	;volatile
 13471  002E2A  EF19  F017         	goto	u3741
 13472  002E2E  EF1B  F017         	goto	u3740
 13473  002E32                     u3741:
 13474  002E32  EF14  F017         	goto	l477
 13475  002E36                     u3740:
 13476  002E36                     
 13477                           ;UART.c: 51:     TXREG=13;
 13478  002E36  0E0D               	movlw	13
 13479  002E38  6EAD               	movwf	173,c	;volatile
 13480  002E3A                     l480:
 13481  002E3A  A2AC               	btfss	172,1,c	;volatile
 13482  002E3C  EF22  F017         	goto	u3751
 13483  002E40  EF24  F017         	goto	u3750
 13484  002E44                     u3751:
 13485  002E44  EF1D  F017         	goto	l480
 13486  002E48                     u3750:
 13487  002E48  0012               	return		;funcret
 13488  002E4A                     __end_of_UART_Println:
 13489                           	callstack 0
 13490                           
 13491 ;; *************** function _UART_Print *****************
 13492 ;; Defined at:
 13493 ;;		line 55 in file "UART.c"
 13494 ;; Parameters:    Size  Location     Type
 13495 ;;  buffer          2    1[COMRAM] PTR unsigned char 
 13496 ;;		 -> STR_19(5), sms(10), 
 13497 ;; Auto vars:     Size  Location     Type
 13498 ;;		None
 13499 ;; Return value:  Size  Location     Type
 13500 ;;                  1    wreg      void 
 13501 ;; Registers used:
 13502 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13503 ;; Tracked objects:
 13504 ;;		On entry : 0/0
 13505 ;;		On exit  : 0/0
 13506 ;;		Unchanged: 0/0
 13507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13508 ;;      Params:         2       0       0       0       0       0       0       0       0
 13509 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13510 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13511 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13512 ;;Total ram usage:        2 bytes
 13513 ;; Hardware stack levels used: 1
 13514 ;; Hardware stack levels required when called: 2
 13515 ;; This function calls:
 13516 ;;		_UART_Write
 13517 ;; This function is called by:
 13518 ;;		_Print_Ticket
 13519 ;; This function uses a non-reentrant model
 13520 ;;
 13521                           
 13522                           	psect	text57
 13523  0032D8                     __ptext57:
 13524                           	callstack 0
 13525  0032D8                     _UART_Print:
 13526                           	callstack 26
 13527  0032D8                     
 13528                           ;UART.c: 56:     while(*buffer){
 13529  0032D8  EF82  F019         	goto	l4145
 13530  0032DC                     l4141:
 13531                           
 13532                           ;UART.c: 57:         UART_Write(*buffer);
 13533  0032DC  C002  FFF6         	movff	UART_Print@buffer,tblptrl
 13534  0032E0  C003  FFF7         	movff	UART_Print@buffer+1,tblptrh
 13535  0032E4  6AF8               	clrf	tblptru,c
 13536  0032E6  0E07               	movlw	(high __ramtop+-1)
 13537  0032E8  64F7               	cpfsgt	tblptrh,c
 13538  0032EA  D003               	bra	u3887
 13539  0032EC  0008               	tblrd		*
 13540  0032EE  50F5               	movf	tablat,w,c
 13541  0032F0  D005               	bra	u3880
 13542  0032F2                     u3887:
 13543  0032F2  CFF6 FFE1          	movff	tblptrl,fsr1l
 13544  0032F6  CFF7 FFE2          	movff	tblptrh,fsr1h
 13545  0032FA  50E7               	movf	indf1,w,c
 13546  0032FC                     u3880:
 13547  0032FC  EC64  F01D         	call	_UART_Write
 13548  003300                     
 13549                           ;UART.c: 58:         buffer++;
 13550  003300  4A02               	infsnz	UART_Print@buffer^0,f,c
 13551  003302  2A03               	incf	(UART_Print@buffer+1)^0,f,c
 13552  003304                     l4145:
 13553                           
 13554                           ;UART.c: 56:     while(*buffer){
 13555  003304  C002  FFF6         	movff	UART_Print@buffer,tblptrl
 13556  003308  C003  FFF7         	movff	UART_Print@buffer+1,tblptrh
 13557  00330C  6AF8               	clrf	tblptru,c
 13558  00330E  0E07               	movlw	(high __ramtop+-1)
 13559  003310  64F7               	cpfsgt	tblptrh,c
 13560  003312  D003               	bra	u3897
 13561  003314  0008               	tblrd		*
 13562  003316  50F5               	movf	tablat,w,c
 13563  003318  D005               	bra	u3890
 13564  00331A                     u3897:
 13565  00331A  CFF6 FFE1          	movff	tblptrl,fsr1l
 13566  00331E  CFF7 FFE2          	movff	tblptrh,fsr1h
 13567  003322  50E7               	movf	indf1,w,c
 13568  003324                     u3890:
 13569  003324  0900               	iorlw	0
 13570  003326  A4D8               	btfss	status,2,c
 13571  003328  EF98  F019         	goto	u3901
 13572  00332C  EF9A  F019         	goto	u3900
 13573  003330                     u3901:
 13574  003330  EF6E  F019         	goto	l4141
 13575  003334                     u3900:
 13576  003334  0012               	return		;funcret
 13577  003336                     __end_of_UART_Print:
 13578                           	callstack 0
 13579                           
 13580 ;; *************** function _New_Line *****************
 13581 ;; Defined at:
 13582 ;;		line 371 in file "main.c"
 13583 ;; Parameters:    Size  Location     Type
 13584 ;;		None
 13585 ;; Auto vars:     Size  Location     Type
 13586 ;;		None
 13587 ;; Return value:  Size  Location     Type
 13588 ;;                  1    wreg      void 
 13589 ;; Registers used:
 13590 ;;		wreg, cstack
 13591 ;; Tracked objects:
 13592 ;;		On entry : 0/0
 13593 ;;		On exit  : 0/0
 13594 ;;		Unchanged: 0/0
 13595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13596 ;;      Params:         0       0       0       0       0       0       0       0       0
 13597 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13598 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13599 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13600 ;;Total ram usage:        0 bytes
 13601 ;; Hardware stack levels used: 1
 13602 ;; Hardware stack levels required when called: 2
 13603 ;; This function calls:
 13604 ;;		_UART_Write
 13605 ;; This function is called by:
 13606 ;;		_Print_Ticket
 13607 ;; This function uses a non-reentrant model
 13608 ;;
 13609                           
 13610                           	psect	text58
 13611  003B26                     __ptext58:
 13612                           	callstack 0
 13613  003B26                     _New_Line:
 13614                           	callstack 26
 13615  003B26                     
 13616                           ;main.c: 372:     UART_Write(0x0d);
 13617  003B26  0E0D               	movlw	13
 13618  003B28  EC64  F01D         	call	_UART_Write
 13619                           
 13620                           ;main.c: 373:     UART_Write(0x0a);
 13621  003B2C  0E0A               	movlw	10
 13622  003B2E  EC64  F01D         	call	_UART_Write
 13623  003B32  0012               	return		;funcret
 13624  003B34                     __end_of_New_Line:
 13625                           	callstack 0
 13626                           
 13627 ;; *************** function _Font_Normal *****************
 13628 ;; Defined at:
 13629 ;;		line 385 in file "main.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;		None
 13632 ;; Auto vars:     Size  Location     Type
 13633 ;;		None
 13634 ;; Return value:  Size  Location     Type
 13635 ;;                  1    wreg      void 
 13636 ;; Registers used:
 13637 ;;		wreg, cstack
 13638 ;; Tracked objects:
 13639 ;;		On entry : 0/0
 13640 ;;		On exit  : 0/0
 13641 ;;		Unchanged: 0/0
 13642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13643 ;;      Params:         0       0       0       0       0       0       0       0       0
 13644 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13645 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13646 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13647 ;;Total ram usage:        0 bytes
 13648 ;; Hardware stack levels used: 1
 13649 ;; Hardware stack levels required when called: 2
 13650 ;; This function calls:
 13651 ;;		_UART_Write
 13652 ;; This function is called by:
 13653 ;;		_Print_Ticket
 13654 ;; This function uses a non-reentrant model
 13655 ;;
 13656                           
 13657                           	psect	text59
 13658  003336                     __ptext59:
 13659                           	callstack 0
 13660  003336                     _Font_Normal:
 13661                           	callstack 26
 13662  003336                     
 13663                           ;main.c: 386:     UART_Write(0x1b);
 13664  003336  0E1B               	movlw	27
 13665  003338  EC64  F01D         	call	_UART_Write
 13666                           
 13667                           ;main.c: 387:     UART_Write(0x40);
 13668  00333C  0E40               	movlw	64
 13669  00333E  EC64  F01D         	call	_UART_Write
 13670                           
 13671                           ;main.c: 388:     UART_Write(0x1d);
 13672  003342  0E1D               	movlw	29
 13673  003344  EC64  F01D         	call	_UART_Write
 13674                           
 13675                           ;main.c: 389:     UART_Write(0x21);
 13676  003348  0E21               	movlw	33
 13677  00334A  EC64  F01D         	call	_UART_Write
 13678                           
 13679                           ;main.c: 390:     UART_Write(0x00);
 13680  00334E  0E00               	movlw	0
 13681  003350  EC64  F01D         	call	_UART_Write
 13682                           
 13683                           ;main.c: 391:     UART_Write(0x0d);
 13684  003354  0E0D               	movlw	13
 13685  003356  EC64  F01D         	call	_UART_Write
 13686                           
 13687                           ;main.c: 392:     UART_Write(0x0a);
 13688  00335A  0E0A               	movlw	10
 13689  00335C  EC64  F01D         	call	_UART_Write
 13690                           
 13691                           ;main.c: 393:     UART_Write(0x1B);
 13692  003360  0E1B               	movlw	27
 13693  003362  EC64  F01D         	call	_UART_Write
 13694                           
 13695                           ;main.c: 394:     UART_Write(0x44);
 13696  003366  0E44               	movlw	68
 13697  003368  EC64  F01D         	call	_UART_Write
 13698                           
 13699                           ;main.c: 395:     UART_Write(0x00);
 13700  00336C  0E00               	movlw	0
 13701  00336E  EC64  F01D         	call	_UART_Write
 13702                           
 13703                           ;main.c: 396:     UART_Write(0x1B);
 13704  003372  0E1B               	movlw	27
 13705  003374  EC64  F01D         	call	_UART_Write
 13706                           
 13707                           ;main.c: 397:     UART_Write(0x40);
 13708  003378  0E40               	movlw	64
 13709  00337A  EC64  F01D         	call	_UART_Write
 13710                           
 13711                           ;main.c: 398:     UART_Write(0x1B);
 13712  00337E  0E1B               	movlw	27
 13713  003380  EC64  F01D         	call	_UART_Write
 13714                           
 13715                           ;main.c: 399:     UART_Write(0x2D);
 13716  003384  0E2D               	movlw	45
 13717  003386  EC64  F01D         	call	_UART_Write
 13718                           
 13719                           ;main.c: 400:     UART_Write(0x00);
 13720  00338A  0E00               	movlw	0
 13721  00338C  EC64  F01D         	call	_UART_Write
 13722  003390  0012               	return		;funcret
 13723  003392                     __end_of_Font_Normal:
 13724                           	callstack 0
 13725                           
 13726 ;; *************** function _Font_Big *****************
 13727 ;; Defined at:
 13728 ;;		line 376 in file "main.c"
 13729 ;; Parameters:    Size  Location     Type
 13730 ;;		None
 13731 ;; Auto vars:     Size  Location     Type
 13732 ;;		None
 13733 ;; Return value:  Size  Location     Type
 13734 ;;                  1    wreg      void 
 13735 ;; Registers used:
 13736 ;;		wreg, cstack
 13737 ;; Tracked objects:
 13738 ;;		On entry : 0/0
 13739 ;;		On exit  : 0/0
 13740 ;;		Unchanged: 0/0
 13741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13742 ;;      Params:         0       0       0       0       0       0       0       0       0
 13743 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13745 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13746 ;;Total ram usage:        0 bytes
 13747 ;; Hardware stack levels used: 1
 13748 ;; Hardware stack levels required when called: 2
 13749 ;; This function calls:
 13750 ;;		_UART_Write
 13751 ;; This function is called by:
 13752 ;;		_Print_Ticket
 13753 ;; This function uses a non-reentrant model
 13754 ;;
 13755                           
 13756                           	psect	text60
 13757  00398E                     __ptext60:
 13758                           	callstack 0
 13759  00398E                     _Font_Big:
 13760                           	callstack 26
 13761  00398E                     
 13762                           ;main.c: 377:     UART_Write(0x1b);
 13763  00398E  0E1B               	movlw	27
 13764  003990  EC64  F01D         	call	_UART_Write
 13765                           
 13766                           ;main.c: 378:     UART_Write(0x40);
 13767  003994  0E40               	movlw	64
 13768  003996  EC64  F01D         	call	_UART_Write
 13769                           
 13770                           ;main.c: 379:     UART_Write(0x1d);
 13771  00399A  0E1D               	movlw	29
 13772  00399C  EC64  F01D         	call	_UART_Write
 13773                           
 13774                           ;main.c: 380:     UART_Write(0x21);
 13775  0039A0  0E21               	movlw	33
 13776  0039A2  EC64  F01D         	call	_UART_Write
 13777                           
 13778                           ;main.c: 381:     UART_Write(0x10);
 13779  0039A6  0E10               	movlw	16
 13780  0039A8  EC64  F01D         	call	_UART_Write
 13781                           
 13782                           ;main.c: 382:     UART_Write(0x08);
 13783  0039AC  0E08               	movlw	8
 13784  0039AE  EC64  F01D         	call	_UART_Write
 13785  0039B2  0012               	return		;funcret
 13786  0039B4                     __end_of_Font_Big:
 13787                           	callstack 0
 13788                           
 13789 ;; *************** function _UART_Write *****************
 13790 ;; Defined at:
 13791 ;;		line 39 in file "UART.c"
 13792 ;; Parameters:    Size  Location     Type
 13793 ;;  data            1    wreg     unsigned char 
 13794 ;; Auto vars:     Size  Location     Type
 13795 ;;  data            1    0[COMRAM] unsigned char 
 13796 ;; Return value:  Size  Location     Type
 13797 ;;                  1    wreg      void 
 13798 ;; Registers used:
 13799 ;;		wreg
 13800 ;; Tracked objects:
 13801 ;;		On entry : 0/0
 13802 ;;		On exit  : 0/0
 13803 ;;		Unchanged: 0/0
 13804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13805 ;;      Params:         0       0       0       0       0       0       0       0       0
 13806 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13807 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13808 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13809 ;;Total ram usage:        1 bytes
 13810 ;; Hardware stack levels used: 1
 13811 ;; Hardware stack levels required when called: 1
 13812 ;; This function calls:
 13813 ;;		Nothing
 13814 ;; This function is called by:
 13815 ;;		_Print_Ticket
 13816 ;;		_New_Line
 13817 ;;		_Font_Big
 13818 ;;		_Font_Normal
 13819 ;;		_UART_Println
 13820 ;;		_UART_Print
 13821 ;; This function uses a non-reentrant model
 13822 ;;
 13823                           
 13824                           	psect	text61
 13825  003AC8                     __ptext61:
 13826                           	callstack 0
 13827  003AC8                     _UART_Write:
 13828                           	callstack 28
 13829                           
 13830                           ;incstack = 0
 13831                           ;UART_Write@data stored from wreg
 13832  003AC8  6E01               	movwf	UART_Write@data^0,c
 13833  003ACA                     
 13834                           ;UART.c: 40:     TXREG=data;
 13835  003ACA  C001  FFAD         	movff	UART_Write@data,4013	;volatile
 13836  003ACE                     l468:
 13837  003ACE  A2AC               	btfss	172,1,c	;volatile
 13838  003AD0  EF6C  F01D         	goto	u3381
 13839  003AD4  EF6E  F01D         	goto	u3380
 13840  003AD8                     u3381:
 13841  003AD8  EF67  F01D         	goto	l468
 13842  003ADC                     u3380:
 13843  003ADC  0012               	return		;funcret
 13844  003ADE                     __end_of_UART_Write:
 13845                           	callstack 0
 13846                           
 13847 ;; *************** function _Muestra_ID *****************
 13848 ;; Defined at:
 13849 ;;		line 59 in file "24LC256.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;  valor           2    9[COMRAM] unsigned int 
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;		None
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  1    wreg      void 
 13856 ;; Registers used:
 13857 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13863 ;;      Params:         2       0       0       0       0       0       0       0       0
 13864 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13865 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13866 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13867 ;;Total ram usage:        2 bytes
 13868 ;; Hardware stack levels used: 1
 13869 ;; Hardware stack levels required when called: 5
 13870 ;; This function calls:
 13871 ;;		_EEPROM_Read
 13872 ;;		___wmul
 13873 ;; This function is called by:
 13874 ;;		_CHECK_TAG
 13875 ;; This function uses a non-reentrant model
 13876 ;;
 13877                           
 13878                           	psect	text62
 13879  0018F0                     __ptext62:
 13880                           	callstack 0
 13881  0018F0                     _Muestra_ID:
 13882                           	callstack 24
 13883  0018F0  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 13884  0018F4  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 13885  0018F8  0E00               	movlw	0
 13886  0018FA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13887  0018FC  0E0A               	movlw	10
 13888  0018FE  6E03               	movwf	___wmul@multiplicand^0,c
 13889  001900  ECDA  F01C         	call	___wmul	;wreg free
 13890  001904  C001  F007         	movff	?___wmul,EEPROM_Read@add
 13891  001908  C002  F008         	movff	?___wmul+1,EEPROM_Read@add+1
 13892  00190C  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 13893  001910  0100               	movlb	0	; () banked
 13894  001912  6F8D               	movwf	_Valores& (0+255),b
 13895  001914  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 13896  001918  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 13897  00191C  0E00               	movlw	0
 13898  00191E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13899  001920  0E0A               	movlw	10
 13900  001922  6E03               	movwf	___wmul@multiplicand^0,c
 13901  001924  ECDA  F01C         	call	___wmul	;wreg free
 13902  001928  0E01               	movlw	1
 13903  00192A  2401               	addwf	?___wmul^0,w,c
 13904  00192C  6E07               	movwf	EEPROM_Read@add^0,c
 13905  00192E  0E00               	movlw	0
 13906  001930  2002               	addwfc	(?___wmul+1)^0,w,c
 13907  001932  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 13908  001934  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 13909  001938  0100               	movlb	0	; () banked
 13910  00193A  6F8E               	movwf	(_Valores+1)& (0+255),b
 13911  00193C  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 13912  001940  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 13913  001944  0E00               	movlw	0
 13914  001946  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13915  001948  0E0A               	movlw	10
 13916  00194A  6E03               	movwf	___wmul@multiplicand^0,c
 13917  00194C  ECDA  F01C         	call	___wmul	;wreg free
 13918  001950  0E02               	movlw	2
 13919  001952  2401               	addwf	?___wmul^0,w,c
 13920  001954  6E07               	movwf	EEPROM_Read@add^0,c
 13921  001956  0E00               	movlw	0
 13922  001958  2002               	addwfc	(?___wmul+1)^0,w,c
 13923  00195A  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 13924  00195C  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 13925  001960  0100               	movlb	0	; () banked
 13926  001962  6F8F               	movwf	(_Valores+2)& (0+255),b
 13927  001964  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 13928  001968  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 13929  00196C  0E00               	movlw	0
 13930  00196E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13931  001970  0E0A               	movlw	10
 13932  001972  6E03               	movwf	___wmul@multiplicand^0,c
 13933  001974  ECDA  F01C         	call	___wmul	;wreg free
 13934  001978  0E03               	movlw	3
 13935  00197A  2401               	addwf	?___wmul^0,w,c
 13936  00197C  6E07               	movwf	EEPROM_Read@add^0,c
 13937  00197E  0E00               	movlw	0
 13938  001980  2002               	addwfc	(?___wmul+1)^0,w,c
 13939  001982  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 13940  001984  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 13941  001988  0100               	movlb	0	; () banked
 13942  00198A  6F90               	movwf	(_Valores+3)& (0+255),b
 13943  00198C  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 13944  001990  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 13945  001994  0E00               	movlw	0
 13946  001996  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13947  001998  0E0A               	movlw	10
 13948  00199A  6E03               	movwf	___wmul@multiplicand^0,c
 13949  00199C  ECDA  F01C         	call	___wmul	;wreg free
 13950  0019A0  0E04               	movlw	4
 13951  0019A2  2401               	addwf	?___wmul^0,w,c
 13952  0019A4  6E07               	movwf	EEPROM_Read@add^0,c
 13953  0019A6  0E00               	movlw	0
 13954  0019A8  2002               	addwfc	(?___wmul+1)^0,w,c
 13955  0019AA  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 13956  0019AC  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 13957  0019B0  0100               	movlb	0	; () banked
 13958  0019B2  6F91               	movwf	(_Valores+4)& (0+255),b
 13959  0019B4  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 13960  0019B8  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 13961  0019BC  0E00               	movlw	0
 13962  0019BE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13963  0019C0  0E0A               	movlw	10
 13964  0019C2  6E03               	movwf	___wmul@multiplicand^0,c
 13965  0019C4  ECDA  F01C         	call	___wmul	;wreg free
 13966  0019C8  0E05               	movlw	5
 13967  0019CA  2401               	addwf	?___wmul^0,w,c
 13968  0019CC  6E07               	movwf	EEPROM_Read@add^0,c
 13969  0019CE  0E00               	movlw	0
 13970  0019D0  2002               	addwfc	(?___wmul+1)^0,w,c
 13971  0019D2  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 13972  0019D4  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 13973  0019D8  0100               	movlb	0	; () banked
 13974  0019DA  6F88               	movwf	_Aux& (0+255),b
 13975  0019DC  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 13976  0019E0  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 13977  0019E4  0E00               	movlw	0
 13978  0019E6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13979  0019E8  0E0A               	movlw	10
 13980  0019EA  6E03               	movwf	___wmul@multiplicand^0,c
 13981  0019EC  ECDA  F01C         	call	___wmul	;wreg free
 13982  0019F0  0E06               	movlw	6
 13983  0019F2  2401               	addwf	?___wmul^0,w,c
 13984  0019F4  6E07               	movwf	EEPROM_Read@add^0,c
 13985  0019F6  0E00               	movlw	0
 13986  0019F8  2002               	addwfc	(?___wmul+1)^0,w,c
 13987  0019FA  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 13988  0019FC  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 13989  001A00  0100               	movlb	0	; () banked
 13990  001A02  6F89               	movwf	(_Aux+1)& (0+255),b
 13991  001A04  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 13992  001A08  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 13993  001A0C  0E00               	movlw	0
 13994  001A0E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13995  001A10  0E0A               	movlw	10
 13996  001A12  6E03               	movwf	___wmul@multiplicand^0,c
 13997  001A14  ECDA  F01C         	call	___wmul	;wreg free
 13998  001A18  0E07               	movlw	7
 13999  001A1A  2401               	addwf	?___wmul^0,w,c
 14000  001A1C  6E07               	movwf	EEPROM_Read@add^0,c
 14001  001A1E  0E00               	movlw	0
 14002  001A20  2002               	addwfc	(?___wmul+1)^0,w,c
 14003  001A22  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 14004  001A24  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 14005  001A28  0100               	movlb	0	; () banked
 14006  001A2A  6F8A               	movwf	(_Aux+2)& (0+255),b
 14007  001A2C  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 14008  001A30  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 14009  001A34  0E00               	movlw	0
 14010  001A36  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 14011  001A38  0E0A               	movlw	10
 14012  001A3A  6E03               	movwf	___wmul@multiplicand^0,c
 14013  001A3C  ECDA  F01C         	call	___wmul	;wreg free
 14014  001A40  0E08               	movlw	8
 14015  001A42  2401               	addwf	?___wmul^0,w,c
 14016  001A44  6E07               	movwf	EEPROM_Read@add^0,c
 14017  001A46  0E00               	movlw	0
 14018  001A48  2002               	addwfc	(?___wmul+1)^0,w,c
 14019  001A4A  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 14020  001A4C  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 14021  001A50  0100               	movlb	0	; () banked
 14022  001A52  6F8B               	movwf	(_Aux+3)& (0+255),b
 14023  001A54  C00A  F001         	movff	Muestra_ID@valor,___wmul@multiplier
 14024  001A58  C00B  F002         	movff	Muestra_ID@valor+1,___wmul@multiplier+1
 14025  001A5C  0E00               	movlw	0
 14026  001A5E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 14027  001A60  0E0A               	movlw	10
 14028  001A62  6E03               	movwf	___wmul@multiplicand^0,c
 14029  001A64  ECDA  F01C         	call	___wmul	;wreg free
 14030  001A68  0E09               	movlw	9
 14031  001A6A  2401               	addwf	?___wmul^0,w,c
 14032  001A6C  6E07               	movwf	EEPROM_Read@add^0,c
 14033  001A6E  0E00               	movlw	0
 14034  001A70  2002               	addwfc	(?___wmul+1)^0,w,c
 14035  001A72  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 14036  001A74  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 14037  001A78  0100               	movlb	0	; () banked
 14038  001A7A  6F8C               	movwf	(_Aux+4)& (0+255),b
 14039  001A7C                     
 14040                           ; BSR set to: 0
 14041  001A7C  0012               	return		;funcret
 14042  001A7E                     __end_of_Muestra_ID:
 14043                           	callstack 0
 14044                           
 14045 ;; *************** function _MFRC522_isCard *****************
 14046 ;; Defined at:
 14047 ;;		line 318 in file "RC522.c"
 14048 ;; Parameters:    Size  Location     Type
 14049 ;;  TagType         2   37[COMRAM] PTR unsigned char 
 14050 ;;		 -> NULL(0), 
 14051 ;; Auto vars:     Size  Location     Type
 14052 ;;		None
 14053 ;; Return value:  Size  Location     Type
 14054 ;;                  1    wreg      unsigned char 
 14055 ;; Registers used:
 14056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14057 ;; Tracked objects:
 14058 ;;		On entry : 0/0
 14059 ;;		On exit  : 0/0
 14060 ;;		Unchanged: 0/0
 14061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14062 ;;      Params:         2       0       0       0       0       0       0       0       0
 14063 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14064 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14065 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14066 ;;Total ram usage:        2 bytes
 14067 ;; Hardware stack levels used: 1
 14068 ;; Hardware stack levels required when called: 5
 14069 ;; This function calls:
 14070 ;;		_MFRC522_Request
 14071 ;; This function is called by:
 14072 ;;		_CHECK_TAG
 14073 ;; This function uses a non-reentrant model
 14074 ;;
 14075                           
 14076                           	psect	text63
 14077  003940                     __ptext63:
 14078                           	callstack 0
 14079  003940                     _MFRC522_isCard:
 14080                           	callstack 24
 14081  003940                     
 14082                           ;RC522.c: 318: char MFRC522_isCard( char *TagType );RC522.c: 319: {;RC522.c: 320:     if
      +                           (MFRC522_Request( 0x26, TagType ) == 0)
 14083  003940  C026  F020         	movff	MFRC522_isCard@TagType,MFRC522_Request@TagType
 14084  003944  C027  F021         	movff	MFRC522_isCard@TagType+1,MFRC522_Request@TagType+1
 14085  003948  0E26               	movlw	38
 14086  00394A  ECD5  F018         	call	_MFRC522_Request
 14087  00394E  0900               	iorlw	0
 14088  003950  A4D8               	btfss	status,2,c
 14089  003952  EFAD  F01C         	goto	u4571
 14090  003956  EFAF  F01C         	goto	u4570
 14091  00395A                     u4571:
 14092  00395A  EFB2  F01C         	goto	l4619
 14093  00395E                     u4570:
 14094  00395E                     
 14095                           ;RC522.c: 321:         return 1;
 14096  00395E  0E01               	movlw	1
 14097  003960  EFB3  F01C         	goto	l597
 14098  003964                     l4619:
 14099                           
 14100                           ;RC522.c: 323:         return 0;
 14101  003964  0E00               	movlw	0
 14102  003966                     l597:
 14103  003966  0012               	return		;funcret
 14104  003968                     __end_of_MFRC522_isCard:
 14105                           	callstack 0
 14106                           
 14107 ;; *************** function _MFRC522_Request *****************
 14108 ;; Defined at:
 14109 ;;		line 240 in file "RC522.c"
 14110 ;; Parameters:    Size  Location     Type
 14111 ;;  reqMode         1    wreg     unsigned char 
 14112 ;;  TagType         2   31[COMRAM] PTR unsigned char 
 14113 ;;		 -> NULL(0), 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;  reqMode         1   33[COMRAM] unsigned char 
 14116 ;;  backBits        2   35[COMRAM] unsigned int 
 14117 ;;  _status         1   34[COMRAM] unsigned char 
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  1    wreg      unsigned char 
 14120 ;; Registers used:
 14121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14122 ;; Tracked objects:
 14123 ;;		On entry : 0/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14127 ;;      Params:         2       0       0       0       0       0       0       0       0
 14128 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14130 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14131 ;;Total ram usage:        6 bytes
 14132 ;; Hardware stack levels used: 1
 14133 ;; Hardware stack levels required when called: 4
 14134 ;; This function calls:
 14135 ;;		_MFRC522_ToCard
 14136 ;;		_MFRC522_Wr
 14137 ;; This function is called by:
 14138 ;;		_MFRC522_isCard
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text64
 14143  0031AA                     __ptext64:
 14144                           	callstack 0
 14145  0031AA                     _MFRC522_Request:
 14146                           	callstack 24
 14147                           
 14148                           ;incstack = 0
 14149                           ;MFRC522_Request@reqMode stored from wreg
 14150  0031AA  6E22               	movwf	MFRC522_Request@reqMode^0,c
 14151  0031AC                     
 14152                           ;RC522.c: 240: char MFRC522_Request( char reqMode, char *TagType );RC522.c: 241: {;RC522
      +                          .c: 242:   char _status;;RC522.c: 243:   unsigned backBits;;RC522.c: 244:   MFRC522_Wr( 
      +                          0x0D, 0x07 );
 14153  0031AC  0E07               	movlw	7
 14154  0031AE  6E01               	movwf	MFRC522_Wr@value^0,c
 14155  0031B0  0E0D               	movlw	13
 14156  0031B2  EC25  F017         	call	_MFRC522_Wr
 14157  0031B6                     
 14158                           ;RC522.c: 245:   TagType[0] = reqMode;
 14159  0031B6  C020  FFD9         	movff	MFRC522_Request@TagType,fsr2l
 14160  0031BA  C021  FFDA         	movff	MFRC522_Request@TagType+1,fsr2h
 14161  0031BE  C022  FFDF         	movff	MFRC522_Request@reqMode,indf2
 14162  0031C2                     
 14163                           ;RC522.c: 246:   _status = MFRC522_ToCard( 0x0C, TagType, 1, TagType, &backBits );
 14164  0031C2  C020  F00D         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
 14165  0031C6  C021  F00E         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@sendData+1
 14166  0031CA  0E01               	movlw	1
 14167  0031CC  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
 14168  0031CE  C020  F010         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
 14169  0031D2  C021  F011         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@backData+1
 14170  0031D6  0E24               	movlw	low MFRC522_Request@backBits
 14171  0031D8  6E12               	movwf	MFRC522_ToCard@backLen^0,c
 14172  0031DA  0E00               	movlw	high MFRC522_Request@backBits
 14173  0031DC  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
 14174  0031DE  0E0C               	movlw	12
 14175  0031E0  ECFC  F006         	call	_MFRC522_ToCard
 14176  0031E4  6E23               	movwf	MFRC522_Request@_status^0,c
 14177  0031E6                     
 14178                           ;RC522.c: 247:   if ( (_status != 0) || (backBits != 0x10) )
 14179  0031E6  5023               	movf	MFRC522_Request@_status^0,w,c
 14180  0031E8  A4D8               	btfss	status,2,c
 14181  0031EA  EFF9  F018         	goto	u3911
 14182  0031EE  EFFB  F018         	goto	u3910
 14183  0031F2                     u3911:
 14184  0031F2  EF05  F019         	goto	l4161
 14185  0031F6                     u3910:
 14186  0031F6  0E10               	movlw	16
 14187  0031F8  1824               	xorwf	MFRC522_Request@backBits^0,w,c
 14188  0031FA  1025               	iorwf	(MFRC522_Request@backBits+1)^0,w,c
 14189  0031FC  B4D8               	btfsc	status,2,c
 14190  0031FE  EF03  F019         	goto	u3921
 14191  003202  EF05  F019         	goto	u3920
 14192  003206                     u3921:
 14193  003206  EF07  F019         	goto	l570
 14194  00320A                     u3920:
 14195  00320A                     l4161:
 14196                           
 14197                           ;RC522.c: 248:   {;RC522.c: 249:     _status = 2;
 14198  00320A  0E02               	movlw	2
 14199  00320C  6E23               	movwf	MFRC522_Request@_status^0,c
 14200  00320E                     l570:
 14201                           
 14202                           ;RC522.c: 251:   return _status;
 14203  00320E  5023               	movf	MFRC522_Request@_status^0,w,c
 14204  003210  0012               	return		;funcret
 14205  003212                     __end_of_MFRC522_Request:
 14206                           	callstack 0
 14207                           
 14208 ;; *************** function _MFRC522_ReadCardSerial *****************
 14209 ;; Defined at:
 14210 ;;		line 325 in file "RC522.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;  str             2   39[COMRAM] PTR unsigned char 
 14213 ;;		 -> UID(10), 
 14214 ;; Auto vars:     Size  Location     Type
 14215 ;;  _status         1   41[COMRAM] unsigned char 
 14216 ;; Return value:  Size  Location     Type
 14217 ;;                  1    wreg      unsigned char 
 14218 ;; Registers used:
 14219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14220 ;; Tracked objects:
 14221 ;;		On entry : 0/0
 14222 ;;		On exit  : 0/0
 14223 ;;		Unchanged: 0/0
 14224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14225 ;;      Params:         2       0       0       0       0       0       0       0       0
 14226 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14227 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14228 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14229 ;;Total ram usage:        3 bytes
 14230 ;; Hardware stack levels used: 1
 14231 ;; Hardware stack levels required when called: 5
 14232 ;; This function calls:
 14233 ;;		_MFRC522_AntiColl
 14234 ;; This function is called by:
 14235 ;;		_CHECK_TAG
 14236 ;; This function uses a non-reentrant model
 14237 ;;
 14238                           
 14239                           	psect	text65
 14240  003742                     __ptext65:
 14241                           	callstack 0
 14242  003742                     _MFRC522_ReadCardSerial:
 14243                           	callstack 24
 14244  003742                     
 14245                           ;RC522.c: 325: char MFRC522_ReadCardSerial( char *str );RC522.c: 326: {;RC522.c: 327: ch
      +                          ar _status;;RC522.c: 328: _status = MFRC522_AntiColl( str );
 14246  003742  C028  F020         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
 14247  003746  C029  F021         	movff	MFRC522_ReadCardSerial@str+1,MFRC522_AntiColl@serNum+1
 14248  00374A  ECA4  F014         	call	_MFRC522_AntiColl	;wreg free
 14249  00374E  6E2A               	movwf	MFRC522_ReadCardSerial@_status^0,c
 14250  003750                     
 14251                           ;RC522.c: 329: str[5] = 0;
 14252  003750  EE20 F005          	lfsr	2,5
 14253  003754  5028               	movf	MFRC522_ReadCardSerial@str^0,w,c
 14254  003756  26D9               	addwf	fsr2l,f,c
 14255  003758  5029               	movf	(MFRC522_ReadCardSerial@str+1)^0,w,c
 14256  00375A  22DA               	addwfc	fsr2h,f,c
 14257  00375C  0E00               	movlw	0
 14258  00375E  6EDF               	movwf	indf2,c
 14259  003760                     
 14260                           ;RC522.c: 330: if (_status == 0)
 14261  003760  502A               	movf	MFRC522_ReadCardSerial@_status^0,w,c
 14262  003762  A4D8               	btfss	status,2,c
 14263  003764  EFB6  F01B         	goto	u4581
 14264  003768  EFB8  F01B         	goto	u4580
 14265  00376C                     u4581:
 14266  00376C  EFBB  F01B         	goto	l4635
 14267  003770                     u4580:
 14268  003770                     
 14269                           ;RC522.c: 331:   return 1;
 14270  003770  0E01               	movlw	1
 14271  003772  EFBC  F01B         	goto	l602
 14272  003776                     l4635:
 14273                           
 14274                           ;RC522.c: 333:   return 0;
 14275  003776  0E00               	movlw	0
 14276  003778                     l602:
 14277  003778  0012               	return		;funcret
 14278  00377A                     __end_of_MFRC522_ReadCardSerial:
 14279                           	callstack 0
 14280                           
 14281 ;; *************** function _MFRC522_AntiColl *****************
 14282 ;; Defined at:
 14283 ;;		line 293 in file "RC522.c"
 14284 ;; Parameters:    Size  Location     Type
 14285 ;;  serNum          2   31[COMRAM] PTR unsigned char 
 14286 ;;		 -> UID(10), 
 14287 ;; Auto vars:     Size  Location     Type
 14288 ;;  unLen           2   35[COMRAM] unsigned int 
 14289 ;;  i               1   38[COMRAM] unsigned char 
 14290 ;;  _status         1   37[COMRAM] unsigned char 
 14291 ;;  serNumCheck     1   34[COMRAM] unsigned char 
 14292 ;; Return value:  Size  Location     Type
 14293 ;;                  1    wreg      unsigned char 
 14294 ;; Registers used:
 14295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14296 ;; Tracked objects:
 14297 ;;		On entry : 0/0
 14298 ;;		On exit  : 0/0
 14299 ;;		Unchanged: 0/0
 14300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14301 ;;      Params:         2       0       0       0       0       0       0       0       0
 14302 ;;      Locals:         5       0       0       0       0       0       0       0       0
 14303 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14304 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14305 ;;Total ram usage:        8 bytes
 14306 ;; Hardware stack levels used: 1
 14307 ;; Hardware stack levels required when called: 4
 14308 ;; This function calls:
 14309 ;;		_MFRC522_Clear_Bit
 14310 ;;		_MFRC522_ToCard
 14311 ;;		_MFRC522_Wr
 14312 ;; This function is called by:
 14313 ;;		_MFRC522_ReadCardSerial
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           	psect	text66
 14318  002948                     __ptext66:
 14319                           	callstack 0
 14320  002948                     _MFRC522_AntiColl:
 14321                           	callstack 24
 14322  002948                     
 14323                           ;RC522.c: 293: char MFRC522_AntiColl( char *serNum );RC522.c: 294: {;RC522.c: 295:   cha
      +                          r _status;;RC522.c: 296:   char i;;RC522.c: 297:   char serNumCheck = 0;
 14324  002948  0E00               	movlw	0
 14325  00294A  6E23               	movwf	MFRC522_AntiColl@serNumCheck^0,c
 14326  00294C                     
 14327                           ;RC522.c: 298:   unsigned int unLen;;RC522.c: 299:   MFRC522_Wr( 0x0D, 0x00 );
 14328  00294C  0E00               	movlw	0
 14329  00294E  6E01               	movwf	MFRC522_Wr@value^0,c
 14330  002950  0E0D               	movlw	13
 14331  002952  EC25  F017         	call	_MFRC522_Wr
 14332  002956                     
 14333                           ;RC522.c: 300:   serNum[0] = 0x93;
 14334  002956  C020  FFD9         	movff	MFRC522_AntiColl@serNum,fsr2l
 14335  00295A  C021  FFDA         	movff	MFRC522_AntiColl@serNum+1,fsr2h
 14336  00295E  0E93               	movlw	147
 14337  002960  6EDF               	movwf	indf2,c
 14338  002962                     
 14339                           ;RC522.c: 301:   serNum[1] = 0x20;
 14340  002962  EE20 F001          	lfsr	2,1
 14341  002966  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
 14342  002968  26D9               	addwf	fsr2l,f,c
 14343  00296A  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
 14344  00296C  22DA               	addwfc	fsr2h,f,c
 14345  00296E  0E20               	movlw	32
 14346  002970  6EDF               	movwf	indf2,c
 14347  002972                     
 14348                           ;RC522.c: 302:   MFRC522_Clear_Bit( 0x08, 0x08 );
 14349  002972  0E08               	movlw	8
 14350  002974  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
 14351  002976  0E08               	movlw	8
 14352  002978  EC28  F01D         	call	_MFRC522_Clear_Bit
 14353  00297C                     
 14354                           ;RC522.c: 303:   _status = MFRC522_ToCard( 0x0C, serNum, 2, serNum, &unLen );
 14355  00297C  C020  F00D         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
 14356  002980  C021  F00E         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@sendData+1
 14357  002984  0E02               	movlw	2
 14358  002986  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
 14359  002988  C020  F010         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
 14360  00298C  C021  F011         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@backData+1
 14361  002990  0E24               	movlw	low MFRC522_AntiColl@unLen
 14362  002992  6E12               	movwf	MFRC522_ToCard@backLen^0,c
 14363  002994  0E00               	movlw	high MFRC522_AntiColl@unLen
 14364  002996  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
 14365  002998  0E0C               	movlw	12
 14366  00299A  ECFC  F006         	call	_MFRC522_ToCard
 14367  00299E  6E26               	movwf	MFRC522_AntiColl@_status^0,c
 14368  0029A0                     
 14369                           ;RC522.c: 304:   if (_status == 0)
 14370  0029A0  5026               	movf	MFRC522_AntiColl@_status^0,w,c
 14371  0029A2  A4D8               	btfss	status,2,c
 14372  0029A4  EFD6  F014         	goto	u3961
 14373  0029A8  EFD8  F014         	goto	u3960
 14374  0029AC                     u3961:
 14375  0029AC  EFFC  F014         	goto	l589
 14376  0029B0                     u3960:
 14377  0029B0                     
 14378                           ;RC522.c: 305:   {;RC522.c: 306:     for ( i=0; i < 4; i++ )
 14379  0029B0  0E00               	movlw	0
 14380  0029B2  6E27               	movwf	MFRC522_AntiColl@i^0,c
 14381  0029B4                     l4209:
 14382                           
 14383                           ;RC522.c: 307:     {;RC522.c: 308:       serNumCheck ^= serNum[i];
 14384  0029B4  5027               	movf	MFRC522_AntiColl@i^0,w,c
 14385  0029B6  2420               	addwf	MFRC522_AntiColl@serNum^0,w,c
 14386  0029B8  6ED9               	movwf	fsr2l,c
 14387  0029BA  0E00               	movlw	0
 14388  0029BC  2021               	addwfc	(MFRC522_AntiColl@serNum+1)^0,w,c
 14389  0029BE  6EDA               	movwf	fsr2h,c
 14390  0029C0  50DF               	movf	indf2,w,c
 14391  0029C2  1A23               	xorwf	MFRC522_AntiColl@serNumCheck^0,f,c
 14392  0029C4                     
 14393                           ;RC522.c: 309:     }
 14394  0029C4  2A27               	incf	MFRC522_AntiColl@i^0,f,c
 14395  0029C6  0E03               	movlw	3
 14396  0029C8  6427               	cpfsgt	MFRC522_AntiColl@i^0,c
 14397  0029CA  EFE9  F014         	goto	u3971
 14398  0029CE  EFEB  F014         	goto	u3970
 14399  0029D2                     u3971:
 14400  0029D2  EFDA  F014         	goto	l4209
 14401  0029D6                     u3970:
 14402  0029D6                     
 14403                           ;RC522.c: 311:     if ( serNumCheck != serNum[4] )
 14404  0029D6  EE20 F004          	lfsr	2,4
 14405  0029DA  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
 14406  0029DC  26D9               	addwf	fsr2l,f,c
 14407  0029DE  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
 14408  0029E0  22DA               	addwfc	fsr2h,f,c
 14409  0029E2  5023               	movf	MFRC522_AntiColl@serNumCheck^0,w,c
 14410  0029E4  18DE               	xorwf	postinc2,w,c
 14411  0029E6  B4D8               	btfsc	status,2,c
 14412  0029E8  EFF8  F014         	goto	u3981
 14413  0029EC  EFFA  F014         	goto	u3980
 14414  0029F0                     u3981:
 14415  0029F0  EFFC  F014         	goto	l589
 14416  0029F4                     u3980:
 14417  0029F4                     
 14418                           ;RC522.c: 312:     {;RC522.c: 313:       _status = 2;
 14419  0029F4  0E02               	movlw	2
 14420  0029F6  6E26               	movwf	MFRC522_AntiColl@_status^0,c
 14421  0029F8                     l589:
 14422                           
 14423                           ;RC522.c: 316:   return _status;
 14424  0029F8  5026               	movf	MFRC522_AntiColl@_status^0,w,c
 14425  0029FA  0012               	return		;funcret
 14426  0029FC                     __end_of_MFRC522_AntiColl:
 14427                           	callstack 0
 14428                           
 14429 ;; *************** function _MFRC522_Halt *****************
 14430 ;; Defined at:
 14431 ;;		line 281 in file "RC522.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;		None
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;  buff            4   31[COMRAM] unsigned char [4]
 14436 ;;  unLen           2   35[COMRAM] unsigned int 
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  1    wreg      void 
 14439 ;; Registers used:
 14440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14441 ;; Tracked objects:
 14442 ;;		On entry : 0/0
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14446 ;;      Params:         0       0       0       0       0       0       0       0       0
 14447 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14448 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14449 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14450 ;;Total ram usage:        6 bytes
 14451 ;; Hardware stack levels used: 1
 14452 ;; Hardware stack levels required when called: 4
 14453 ;; This function calls:
 14454 ;;		_MFRC522_CRC
 14455 ;;		_MFRC522_Clear_Bit
 14456 ;;		_MFRC522_ToCard
 14457 ;; This function is called by:
 14458 ;;		_CHECK_TAG
 14459 ;; This function uses a non-reentrant model
 14460 ;;
 14461                           
 14462                           	psect	text67
 14463  0033EA                     __ptext67:
 14464                           	callstack 0
 14465  0033EA                     _MFRC522_Halt:
 14466                           	callstack 25
 14467  0033EA                     
 14468                           ;RC522.c: 283:   unsigned unLen;;RC522.c: 284:   char buff[4];;RC522.c: 286:   buff[0] =
      +                           0x50;
 14469  0033EA  0E50               	movlw	80
 14470  0033EC  6E20               	movwf	MFRC522_Halt@buff^0,c
 14471                           
 14472                           ;RC522.c: 287:   buff[1] = 0;
 14473  0033EE  0E00               	movlw	0
 14474  0033F0  6E21               	movwf	(MFRC522_Halt@buff+1)^0,c
 14475  0033F2                     
 14476                           ;RC522.c: 288:   MFRC522_CRC( buff, 2, &buff[2] );
 14477  0033F2  0E20               	movlw	low MFRC522_Halt@buff
 14478  0033F4  6E0D               	movwf	MFRC522_CRC@dataIn^0,c
 14479  0033F6  0E00               	movlw	high MFRC522_Halt@buff
 14480  0033F8  6E0E               	movwf	(MFRC522_CRC@dataIn+1)^0,c
 14481  0033FA  0E02               	movlw	2
 14482  0033FC  6E0F               	movwf	MFRC522_CRC@length^0,c
 14483  0033FE  0E22               	movlw	low (MFRC522_Halt@buff+2)
 14484  003400  6E10               	movwf	MFRC522_CRC@dataOut^0,c
 14485  003402  0E00               	movlw	high (MFRC522_Halt@buff+2)
 14486  003404  6E11               	movwf	(MFRC522_CRC@dataOut+1)^0,c
 14487  003406  EC00  F016         	call	_MFRC522_CRC	;wreg free
 14488  00340A                     
 14489                           ;RC522.c: 289:   MFRC522_Clear_Bit( 0x08, 0x80 );
 14490  00340A  0E80               	movlw	128
 14491  00340C  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
 14492  00340E  0E08               	movlw	8
 14493  003410  EC28  F01D         	call	_MFRC522_Clear_Bit
 14494  003414                     
 14495                           ;RC522.c: 290:   MFRC522_ToCard( 0x0C, buff, 4, buff, &unLen );
 14496  003414  0E20               	movlw	low MFRC522_Halt@buff
 14497  003416  6E0D               	movwf	MFRC522_ToCard@sendData^0,c
 14498  003418  0E00               	movlw	high MFRC522_Halt@buff
 14499  00341A  6E0E               	movwf	(MFRC522_ToCard@sendData+1)^0,c
 14500  00341C  0E04               	movlw	4
 14501  00341E  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
 14502  003420  0E20               	movlw	low MFRC522_Halt@buff
 14503  003422  6E10               	movwf	MFRC522_ToCard@backData^0,c
 14504  003424  0E00               	movlw	high MFRC522_Halt@buff
 14505  003426  6E11               	movwf	(MFRC522_ToCard@backData+1)^0,c
 14506  003428  0E24               	movlw	low MFRC522_Halt@unLen
 14507  00342A  6E12               	movwf	MFRC522_ToCard@backLen^0,c
 14508  00342C  0E00               	movlw	high MFRC522_Halt@unLen
 14509  00342E  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
 14510  003430  0E0C               	movlw	12
 14511  003432  ECFC  F006         	call	_MFRC522_ToCard
 14512  003436                     
 14513                           ;RC522.c: 291:   MFRC522_Clear_Bit( 0x08, 0x08 );
 14514  003436  0E08               	movlw	8
 14515  003438  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
 14516  00343A  0E08               	movlw	8
 14517  00343C  EC28  F01D         	call	_MFRC522_Clear_Bit
 14518  003440  0012               	return		;funcret
 14519  003442                     __end_of_MFRC522_Halt:
 14520                           	callstack 0
 14521                           
 14522 ;; *************** function _MFRC522_ToCard *****************
 14523 ;; Defined at:
 14524 ;;		line 143 in file "RC522.c"
 14525 ;; Parameters:    Size  Location     Type
 14526 ;;  command         1    wreg     unsigned char 
 14527 ;;  sendData        2   12[COMRAM] PTR unsigned char 
 14528 ;;		 -> NULL(0), MFRC522_Halt@buff(4), UID(10), 
 14529 ;;  sendLen         1   14[COMRAM] unsigned char 
 14530 ;;  backData        2   15[COMRAM] PTR unsigned char 
 14531 ;;		 -> NULL(0), MFRC522_Halt@buff(4), UID(10), 
 14532 ;;  backLen         2   17[COMRAM] PTR unsigned int 
 14533 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Halt@unLen(2), MFRC522_Request@backBits(2), 
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;  command         1   27[COMRAM] unsigned char 
 14536 ;;  i               2   28[COMRAM] unsigned int 
 14537 ;;  n               1   30[COMRAM] unsigned char 
 14538 ;;  irqEn           1   26[COMRAM] unsigned char 
 14539 ;;  lastBits        1   25[COMRAM] unsigned char 
 14540 ;;  _status         1   24[COMRAM] unsigned char 
 14541 ;;  waitIRq         1   23[COMRAM] unsigned char 
 14542 ;; Return value:  Size  Location     Type
 14543 ;;                  1    wreg      unsigned char 
 14544 ;; Registers used:
 14545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14546 ;; Tracked objects:
 14547 ;;		On entry : 0/0
 14548 ;;		On exit  : 0/0
 14549 ;;		Unchanged: 0/0
 14550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14551 ;;      Params:         7       0       0       0       0       0       0       0       0
 14552 ;;      Locals:         8       0       0       0       0       0       0       0       0
 14553 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14554 ;;      Totals:        19       0       0       0       0       0       0       0       0
 14555 ;;Total ram usage:       19 bytes
 14556 ;; Hardware stack levels used: 1
 14557 ;; Hardware stack levels required when called: 3
 14558 ;; This function calls:
 14559 ;;		_MFRC522_Clear_Bit
 14560 ;;		_MFRC522_Rd
 14561 ;;		_MFRC522_Set_Bit
 14562 ;;		_MFRC522_Wr
 14563 ;; This function is called by:
 14564 ;;		_MFRC522_Request
 14565 ;;		_MFRC522_Halt
 14566 ;;		_MFRC522_AntiColl
 14567 ;; This function uses a non-reentrant model
 14568 ;;
 14569                           
 14570                           	psect	text68
 14571  000DF8                     __ptext68:
 14572                           	callstack 0
 14573  000DF8                     _MFRC522_ToCard:
 14574                           	callstack 24
 14575                           
 14576                           ;incstack = 0
 14577                           ;MFRC522_ToCard@command stored from wreg
 14578  000DF8  6E1C               	movwf	MFRC522_ToCard@command^0,c
 14579  000DFA                     
 14580                           ;RC522.c: 143: char MFRC522_ToCard( char command, char *sendData, char sendLen, char *ba
      +                          ckData, unsigned *backLen );RC522.c: 144: {;RC522.c: 145:   char _status = 2;
 14581  000DFA  0E02               	movlw	2
 14582  000DFC  6E19               	movwf	MFRC522_ToCard@_status^0,c
 14583                           
 14584                           ;RC522.c: 146:   char irqEn = 0x00;
 14585  000DFE  0E00               	movlw	0
 14586  000E00  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
 14587                           
 14588                           ;RC522.c: 147:   char waitIRq = 0x00;
 14589  000E02  0E00               	movlw	0
 14590  000E04  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
 14591                           
 14592                           ;RC522.c: 148:   char lastBits;;RC522.c: 149:   char n;;RC522.c: 150:   unsigned int i;;
      +                          RC522.c: 152:   switch (command)
 14593  000E06  EF11  F007         	goto	l3833
 14594  000E0A                     l3827:
 14595                           
 14596                           ;RC522.c: 155:     {;RC522.c: 156:       irqEn = 0x12;
 14597  000E0A  0E12               	movlw	18
 14598  000E0C  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
 14599                           
 14600                           ;RC522.c: 157:       waitIRq = 0x10;
 14601  000E0E  0E10               	movlw	16
 14602  000E10  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
 14603                           
 14604                           ;RC522.c: 158:       break;
 14605  000E12  EF26  F007         	goto	l3835
 14606  000E16                     l3829:
 14607                           
 14608                           ;RC522.c: 161:     {;RC522.c: 162:       irqEn = 0x77;
 14609  000E16  0E77               	movlw	119
 14610  000E18  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
 14611                           
 14612                           ;RC522.c: 163:       waitIRq = 0x30;
 14613  000E1A  0E30               	movlw	48
 14614  000E1C  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
 14615                           
 14616                           ;RC522.c: 164:       break;
 14617  000E1E  EF26  F007         	goto	l3835
 14618  000E22                     l3833:
 14619  000E22  501C               	movf	MFRC522_ToCard@command^0,w,c
 14620  000E24  6E14               	movwf	??_MFRC522_ToCard^0,c
 14621  000E26  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
 14622                           
 14623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14624                           ; Switch size 1, requested type "simple"
 14625                           ; Number of cases is 1, Range of values is 0 to 0
 14626                           ; switch strategies available:
 14627                           ; Name         Instructions Cycles
 14628                           ; simple_byte            4     3 (average)
 14629                           ;	Chosen strategy is simple_byte
 14630  000E28  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
 14631  000E2A  0A00               	xorlw	0	; case 0
 14632  000E2C  B4D8               	btfsc	status,2,c
 14633  000E2E  EF1B  F007         	goto	l5389
 14634  000E32  EF26  F007         	goto	l3835
 14635  000E36                     l5389:
 14636                           
 14637                           ; Switch size 1, requested type "simple"
 14638                           ; Number of cases is 2, Range of values is 12 to 14
 14639                           ; switch strategies available:
 14640                           ; Name         Instructions Cycles
 14641                           ; simple_byte            7     4 (average)
 14642                           ;	Chosen strategy is simple_byte
 14643  000E36  5014               	movf	??_MFRC522_ToCard^0,w,c
 14644  000E38  0A0C               	xorlw	12	; case 12
 14645  000E3A  B4D8               	btfsc	status,2,c
 14646  000E3C  EF0B  F007         	goto	l3829
 14647  000E40  0A02               	xorlw	2	; case 14
 14648  000E42  B4D8               	btfsc	status,2,c
 14649  000E44  EF05  F007         	goto	l3827
 14650  000E48  EF26  F007         	goto	l3835
 14651  000E4C                     l3835:
 14652                           
 14653                           ;RC522.c: 169:   MFRC522_Wr( 0x02, irqEn | 0x80 );
 14654  000E4C  501B               	movf	MFRC522_ToCard@irqEn^0,w,c
 14655  000E4E  0980               	iorlw	128
 14656  000E50  6E01               	movwf	MFRC522_Wr@value^0,c
 14657  000E52  0E02               	movlw	2
 14658  000E54  EC25  F017         	call	_MFRC522_Wr
 14659                           
 14660                           ;RC522.c: 170:   MFRC522_Clear_Bit( 0x04, 0x80 );
 14661  000E58  0E80               	movlw	128
 14662  000E5A  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
 14663  000E5C  0E04               	movlw	4
 14664  000E5E  EC28  F01D         	call	_MFRC522_Clear_Bit
 14665                           
 14666                           ;RC522.c: 171:   MFRC522_Set_Bit( 0x0A, 0x80 );
 14667  000E62  0E80               	movlw	128
 14668  000E64  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
 14669  000E66  0E0A               	movlw	10
 14670  000E68  EC42  F01D         	call	_MFRC522_Set_Bit
 14671                           
 14672                           ;RC522.c: 172:   MFRC522_Wr( 0x01, 0x00 );
 14673  000E6C  0E00               	movlw	0
 14674  000E6E  6E01               	movwf	MFRC522_Wr@value^0,c
 14675  000E70  0E01               	movlw	1
 14676  000E72  EC25  F017         	call	_MFRC522_Wr
 14677  000E76                     
 14678                           ;RC522.c: 174:   for ( i=0; i < sendLen; i++ )
 14679  000E76  0E00               	movlw	0
 14680  000E78  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
 14681  000E7A  0E00               	movlw	0
 14682  000E7C  6E1D               	movwf	MFRC522_ToCard@i^0,c
 14683  000E7E  EF4E  F007         	goto	l3843
 14684  000E82                     l3839:
 14685                           
 14686                           ;RC522.c: 175:   {;RC522.c: 176:     MFRC522_Wr( 0x09, sendData[i] );
 14687  000E82  501D               	movf	MFRC522_ToCard@i^0,w,c
 14688  000E84  240D               	addwf	MFRC522_ToCard@sendData^0,w,c
 14689  000E86  6ED9               	movwf	fsr2l,c
 14690  000E88  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
 14691  000E8A  200E               	addwfc	(MFRC522_ToCard@sendData+1)^0,w,c
 14692  000E8C  6EDA               	movwf	fsr2h,c
 14693  000E8E  50DF               	movf	indf2,w,c
 14694  000E90  6E01               	movwf	MFRC522_Wr@value^0,c
 14695  000E92  0E09               	movlw	9
 14696  000E94  EC25  F017         	call	_MFRC522_Wr
 14697  000E98                     
 14698                           ;RC522.c: 177:   }
 14699  000E98  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
 14700  000E9A  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
 14701  000E9C                     l3843:
 14702  000E9C  500F               	movf	MFRC522_ToCard@sendLen^0,w,c
 14703  000E9E  6E14               	movwf	??_MFRC522_ToCard^0,c
 14704  000EA0  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
 14705  000EA2  5014               	movf	??_MFRC522_ToCard^0,w,c
 14706  000EA4  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
 14707  000EA6  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
 14708  000EA8  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
 14709  000EAA  A0D8               	btfss	status,0,c
 14710  000EAC  EF5A  F007         	goto	u3391
 14711  000EB0  EF5C  F007         	goto	u3390
 14712  000EB4                     u3391:
 14713  000EB4  EF41  F007         	goto	l3839
 14714  000EB8                     u3390:
 14715  000EB8                     
 14716                           ;RC522.c: 179:   MFRC522_Wr( 0x01, command );
 14717  000EB8  C01C  F001         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
 14718  000EBC  0E01               	movlw	1
 14719  000EBE  EC25  F017         	call	_MFRC522_Wr
 14720  000EC2                     
 14721                           ;RC522.c: 180:   if (command == 0x0C )
 14722  000EC2  0E0C               	movlw	12
 14723  000EC4  181C               	xorwf	MFRC522_ToCard@command^0,w,c
 14724  000EC6  A4D8               	btfss	status,2,c
 14725  000EC8  EF68  F007         	goto	u3401
 14726  000ECC  EF6A  F007         	goto	u3400
 14727  000ED0                     u3401:
 14728  000ED0  EF6F  F007         	goto	l3851
 14729  000ED4                     u3400:
 14730  000ED4                     
 14731                           ;RC522.c: 181:   {;RC522.c: 182:     MFRC522_Set_Bit( 0x0D, 0x80 );
 14732  000ED4  0E80               	movlw	128
 14733  000ED6  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
 14734  000ED8  0E0D               	movlw	13
 14735  000EDA  EC42  F01D         	call	_MFRC522_Set_Bit
 14736  000EDE                     l3851:
 14737                           
 14738                           ;RC522.c: 185:   i = 0xFFFF;
 14739  000EDE  681D               	setf	MFRC522_ToCard@i^0,c
 14740  000EE0  681E               	setf	(MFRC522_ToCard@i+1)^0,c
 14741  000EE2                     l551:
 14742                           
 14743                           ;RC522.c: 187:   {;RC522.c: 189:     n = MFRC522_Rd( 0x04 );
 14744  000EE2  0E04               	movlw	4
 14745  000EE4  EC56  F015         	call	_MFRC522_Rd
 14746  000EE8  6E1F               	movwf	MFRC522_ToCard@n^0,c
 14747  000EEA                     
 14748                           ;RC522.c: 190:     i--;
 14749  000EEA  061D               	decf	MFRC522_ToCard@i^0,f,c
 14750  000EEC  A0D8               	btfss	status,0,c
 14751  000EEE  061E               	decf	(MFRC522_ToCard@i+1)^0,f,c
 14752  000EF0                     
 14753                           ;RC522.c: 191:   }
 14754  000EF0  501D               	movf	MFRC522_ToCard@i^0,w,c
 14755  000EF2  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
 14756  000EF4  B4D8               	btfsc	status,2,c
 14757  000EF6  EF7F  F007         	goto	u3411
 14758  000EFA  EF81  F007         	goto	u3410
 14759  000EFE                     u3411:
 14760  000EFE  EF92  F007         	goto	l3861
 14761  000F02                     u3410:
 14762  000F02  B01F               	btfsc	MFRC522_ToCard@n^0,0,c
 14763  000F04  EF86  F007         	goto	u3421
 14764  000F08  EF88  F007         	goto	u3420
 14765  000F0C                     u3421:
 14766  000F0C  EF92  F007         	goto	l3861
 14767  000F10                     u3420:
 14768  000F10  501F               	movf	MFRC522_ToCard@n^0,w,c
 14769  000F12  1418               	andwf	MFRC522_ToCard@waitIRq^0,w,c
 14770  000F14  0900               	iorlw	0
 14771  000F16  B4D8               	btfsc	status,2,c
 14772  000F18  EF90  F007         	goto	u3431
 14773  000F1C  EF92  F007         	goto	u3430
 14774  000F20                     u3431:
 14775  000F20  EF71  F007         	goto	l551
 14776  000F24                     u3430:
 14777  000F24                     l3861:
 14778                           
 14779                           ;RC522.c: 193:   MFRC522_Clear_Bit( 0x0D, 0x80 );
 14780  000F24  0E80               	movlw	128
 14781  000F26  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
 14782  000F28  0E0D               	movlw	13
 14783  000F2A  EC28  F01D         	call	_MFRC522_Clear_Bit
 14784  000F2E                     
 14785                           ;RC522.c: 194:   if (i != 0)
 14786  000F2E  501D               	movf	MFRC522_ToCard@i^0,w,c
 14787  000F30  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
 14788  000F32  B4D8               	btfsc	status,2,c
 14789  000F34  EF9E  F007         	goto	u3441
 14790  000F38  EFA0  F007         	goto	u3440
 14791  000F3C                     u3441:
 14792  000F3C  EF41  F008         	goto	l555
 14793  000F40                     u3440:
 14794  000F40                     
 14795                           ;RC522.c: 195:   {;RC522.c: 196:     if( !( MFRC522_Rd( 0x06 ) & 0x1B ) )
 14796  000F40  0E06               	movlw	6
 14797  000F42  EC56  F015         	call	_MFRC522_Rd
 14798  000F46  6E14               	movwf	??_MFRC522_ToCard^0,c
 14799  000F48  0E1B               	movlw	27
 14800  000F4A  1614               	andwf	??_MFRC522_ToCard^0,f,c
 14801  000F4C  A4D8               	btfss	status,2,c
 14802  000F4E  EFAB  F007         	goto	u3451
 14803  000F52  EFAD  F007         	goto	u3450
 14804  000F56                     u3451:
 14805  000F56  EF3F  F008         	goto	l3899
 14806  000F5A                     u3450:
 14807  000F5A                     
 14808                           ;RC522.c: 197:     {;RC522.c: 198:       _status = 0;
 14809  000F5A  0E00               	movlw	0
 14810  000F5C  6E19               	movwf	MFRC522_ToCard@_status^0,c
 14811  000F5E                     
 14812                           ;RC522.c: 199:       if ( n & irqEn & 0x01 )
 14813  000F5E  501F               	movf	MFRC522_ToCard@n^0,w,c
 14814  000F60  141B               	andwf	MFRC522_ToCard@irqEn^0,w,c
 14815  000F62  6E14               	movwf	??_MFRC522_ToCard^0,c
 14816  000F64  A014               	btfss	??_MFRC522_ToCard^0,0,c
 14817  000F66  EFB7  F007         	goto	u3461
 14818  000F6A  EFB9  F007         	goto	u3460
 14819  000F6E                     u3461:
 14820  000F6E  EFBB  F007         	goto	l3873
 14821  000F72                     u3460:
 14822  000F72                     
 14823                           ;RC522.c: 200:       {;RC522.c: 201:         _status = 1;
 14824  000F72  0E01               	movlw	1
 14825  000F74  6E19               	movwf	MFRC522_ToCard@_status^0,c
 14826  000F76                     l3873:
 14827                           
 14828                           ;RC522.c: 203:       if ( command == 0x0C )
 14829  000F76  0E0C               	movlw	12
 14830  000F78  181C               	xorwf	MFRC522_ToCard@command^0,w,c
 14831  000F7A  A4D8               	btfss	status,2,c
 14832  000F7C  EFC2  F007         	goto	u3471
 14833  000F80  EFC4  F007         	goto	u3470
 14834  000F84                     u3471:
 14835  000F84  EF41  F008         	goto	l555
 14836  000F88                     u3470:
 14837  000F88                     
 14838                           ;RC522.c: 204:       {;RC522.c: 205:         n = MFRC522_Rd( 0x0A );
 14839  000F88  0E0A               	movlw	10
 14840  000F8A  EC56  F015         	call	_MFRC522_Rd
 14841  000F8E  6E1F               	movwf	MFRC522_ToCard@n^0,c
 14842                           
 14843                           ;RC522.c: 206:         lastBits = MFRC522_Rd( 0x0C ) & 0x07;
 14844  000F90  0E0C               	movlw	12
 14845  000F92  EC56  F015         	call	_MFRC522_Rd
 14846  000F96  0B07               	andlw	7
 14847  000F98  6E1A               	movwf	MFRC522_ToCard@lastBits^0,c
 14848  000F9A                     
 14849                           ;RC522.c: 207:         if (lastBits)
 14850  000F9A  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
 14851  000F9C  B4D8               	btfsc	status,2,c
 14852  000F9E  EFD3  F007         	goto	u3481
 14853  000FA2  EFD5  F007         	goto	u3480
 14854  000FA6                     u3481:
 14855  000FA6  EFF7  F007         	goto	l3881
 14856  000FAA                     u3480:
 14857  000FAA                     
 14858                           ;RC522.c: 208:         {;RC522.c: 209:           *backLen = (n-1) * 8 + lastBits;
 14859  000FAA  0EF8               	movlw	248
 14860  000FAC  6E14               	movwf	??_MFRC522_ToCard^0,c
 14861  000FAE  0EFF               	movlw	255
 14862  000FB0  6E15               	movwf	(??_MFRC522_ToCard+1)^0,c
 14863  000FB2  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
 14864  000FB4  C01F  F016         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard+2
 14865  000FB8  6A17               	clrf	(??_MFRC522_ToCard+3)^0,c
 14866  000FBA  90D8               	bcf	status,0,c
 14867  000FBC  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
 14868  000FBE  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
 14869  000FC0  90D8               	bcf	status,0,c
 14870  000FC2  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
 14871  000FC4  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
 14872  000FC6  90D8               	bcf	status,0,c
 14873  000FC8  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
 14874  000FCA  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
 14875  000FCC  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
 14876  000FCE  0E00               	movlw	0
 14877  000FD0  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
 14878  000FD2  5014               	movf	??_MFRC522_ToCard^0,w,c
 14879  000FD4  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
 14880  000FD6  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
 14881  000FD8  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
 14882  000FDA  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
 14883  000FDE  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
 14884  000FE2  C016  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
 14885  000FE6  C017  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
 14886                           
 14887                           ;RC522.c: 210:         }
 14888  000FEA  EF01  F008         	goto	l3883
 14889  000FEE                     l3881:
 14890                           
 14891                           ;RC522.c: 212:         {;RC522.c: 213:           *backLen = n * 8;
 14892  000FEE  501F               	movf	MFRC522_ToCard@n^0,w,c
 14893  000FF0  0D08               	mullw	8
 14894  000FF2  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
 14895  000FF6  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
 14896  000FFA  CFF3 FFDE          	movff	prodl,postinc2
 14897  000FFE  CFF4 FFDD          	movff	prodh,postdec2
 14898  001002                     l3883:
 14899                           
 14900                           ;RC522.c: 215:         if (n == 0)
 14901  001002  501F               	movf	MFRC522_ToCard@n^0,w,c
 14902  001004  A4D8               	btfss	status,2,c
 14903  001006  EF07  F008         	goto	u3491
 14904  00100A  EF09  F008         	goto	u3490
 14905  00100E                     u3491:
 14906  00100E  EF0B  F008         	goto	l3887
 14907  001012                     u3490:
 14908  001012                     
 14909                           ;RC522.c: 216:         {;RC522.c: 217:           n = 1;
 14910  001012  0E01               	movlw	1
 14911  001014  6E1F               	movwf	MFRC522_ToCard@n^0,c
 14912  001016                     l3887:
 14913                           
 14914                           ;RC522.c: 219:         if (n > 16)
 14915  001016  0E10               	movlw	16
 14916  001018  641F               	cpfsgt	MFRC522_ToCard@n^0,c
 14917  00101A  EF11  F008         	goto	u3501
 14918  00101E  EF13  F008         	goto	u3500
 14919  001022                     u3501:
 14920  001022  EF15  F008         	goto	l562
 14921  001026                     u3500:
 14922  001026                     
 14923                           ;RC522.c: 220:         {;RC522.c: 221:           n = 16;
 14924  001026  0E10               	movlw	16
 14925  001028  6E1F               	movwf	MFRC522_ToCard@n^0,c
 14926  00102A                     l562:
 14927                           
 14928                           ;RC522.c: 224:         for (i=0; i < n; i++)
 14929  00102A  0E00               	movlw	0
 14930  00102C  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
 14931  00102E  0E00               	movlw	0
 14932  001030  6E1D               	movwf	MFRC522_ToCard@i^0,c
 14933  001032  EF27  F008         	goto	l3895
 14934  001036                     l3891:
 14935                           
 14936                           ;RC522.c: 225:         {;RC522.c: 226:           backData[i] = MFRC522_Rd( 0x09 );
 14937  001036  501D               	movf	MFRC522_ToCard@i^0,w,c
 14938  001038  2410               	addwf	MFRC522_ToCard@backData^0,w,c
 14939  00103A  6ED9               	movwf	fsr2l,c
 14940  00103C  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
 14941  00103E  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
 14942  001040  6EDA               	movwf	fsr2h,c
 14943  001042  0E09               	movlw	9
 14944  001044  EC56  F015         	call	_MFRC522_Rd
 14945  001048  6EDF               	movwf	indf2,c
 14946  00104A                     
 14947                           ;RC522.c: 227:         }
 14948  00104A  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
 14949  00104C  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
 14950  00104E                     l3895:
 14951  00104E  501F               	movf	MFRC522_ToCard@n^0,w,c
 14952  001050  6E14               	movwf	??_MFRC522_ToCard^0,c
 14953  001052  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
 14954  001054  5014               	movf	??_MFRC522_ToCard^0,w,c
 14955  001056  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
 14956  001058  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
 14957  00105A  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
 14958  00105C  A0D8               	btfss	status,0,c
 14959  00105E  EF33  F008         	goto	u3511
 14960  001062  EF35  F008         	goto	u3510
 14961  001066                     u3511:
 14962  001066  EF1B  F008         	goto	l3891
 14963  00106A                     u3510:
 14964  00106A                     
 14965                           ;RC522.c: 229:   backData[i] = 0;
 14966  00106A  501D               	movf	MFRC522_ToCard@i^0,w,c
 14967  00106C  2410               	addwf	MFRC522_ToCard@backData^0,w,c
 14968  00106E  6ED9               	movwf	fsr2l,c
 14969  001070  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
 14970  001072  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
 14971  001074  6EDA               	movwf	fsr2h,c
 14972  001076  0E00               	movlw	0
 14973  001078  6EDF               	movwf	indf2,c
 14974  00107A  EF41  F008         	goto	l555
 14975  00107E                     l3899:
 14976                           
 14977                           ;RC522.c: 233:     {;RC522.c: 234:       _status = 2;
 14978  00107E  0E02               	movlw	2
 14979  001080  6E19               	movwf	MFRC522_ToCard@_status^0,c
 14980  001082                     l555:
 14981                           
 14982                           ;RC522.c: 238:   return _status;
 14983  001082  5019               	movf	MFRC522_ToCard@_status^0,w,c
 14984  001084  0012               	return		;funcret
 14985  001086                     __end_of_MFRC522_ToCard:
 14986                           	callstack 0
 14987                           
 14988 ;; *************** function _MFRC522_CRC *****************
 14989 ;; Defined at:
 14990 ;;		line 253 in file "RC522.c"
 14991 ;; Parameters:    Size  Location     Type
 14992 ;;  dataIn          2   12[COMRAM] PTR unsigned char 
 14993 ;;		 -> MFRC522_Halt@buff(4), 
 14994 ;;  length          1   14[COMRAM] unsigned char 
 14995 ;;  dataOut         2   15[COMRAM] PTR unsigned char 
 14996 ;;		 -> MFRC522_Halt@buff(4), 
 14997 ;; Auto vars:     Size  Location     Type
 14998 ;;  i               1   18[COMRAM] unsigned char 
 14999 ;;  n               1   17[COMRAM] unsigned char 
 15000 ;; Return value:  Size  Location     Type
 15001 ;;                  1    wreg      void 
 15002 ;; Registers used:
 15003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15004 ;; Tracked objects:
 15005 ;;		On entry : 0/0
 15006 ;;		On exit  : 0/0
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15009 ;;      Params:         5       0       0       0       0       0       0       0       0
 15010 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15011 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15012 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15013 ;;Total ram usage:        7 bytes
 15014 ;; Hardware stack levels used: 1
 15015 ;; Hardware stack levels required when called: 3
 15016 ;; This function calls:
 15017 ;;		_MFRC522_Clear_Bit
 15018 ;;		_MFRC522_Rd
 15019 ;;		_MFRC522_Set_Bit
 15020 ;;		_MFRC522_Wr
 15021 ;; This function is called by:
 15022 ;;		_MFRC522_Halt
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           	psect	text69
 15027  002C00                     __ptext69:
 15028                           	callstack 0
 15029  002C00                     _MFRC522_CRC:
 15030                           	callstack 25
 15031  002C00                     
 15032                           ;RC522.c: 253: void MFRC522_CRC( char *dataIn, char length, char *dataOut );RC522.c: 254
      +                          : {;RC522.c: 255: char i, n;;RC522.c: 256:     MFRC522_Clear_Bit( 0x05, 0x04 );
 15033  002C00  0E04               	movlw	4
 15034  002C02  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
 15035  002C04  0E05               	movlw	5
 15036  002C06  EC28  F01D         	call	_MFRC522_Clear_Bit
 15037                           
 15038                           ;RC522.c: 257:     MFRC522_Set_Bit( 0x0A, 0x80 );
 15039  002C0A  0E80               	movlw	128
 15040  002C0C  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
 15041  002C0E  0E0A               	movlw	10
 15042  002C10  EC42  F01D         	call	_MFRC522_Set_Bit
 15043  002C14                     
 15044                           ;RC522.c: 260:     for ( i = 0; i < length; i++ )
 15045  002C14  0E00               	movlw	0
 15046  002C16  6E13               	movwf	MFRC522_CRC@i^0,c
 15047  002C18  EF1A  F016         	goto	l4175
 15048  002C1C                     l4169:
 15049                           
 15050                           ;RC522.c: 261:     {;RC522.c: 262:         MFRC522_Wr( 0x09, *dataIn++ );
 15051  002C1C  C00D  FFD9         	movff	MFRC522_CRC@dataIn,fsr2l
 15052  002C20  C00E  FFDA         	movff	MFRC522_CRC@dataIn+1,fsr2h
 15053  002C24  50DF               	movf	indf2,w,c
 15054  002C26  6E01               	movwf	MFRC522_Wr@value^0,c
 15055  002C28  0E09               	movlw	9
 15056  002C2A  EC25  F017         	call	_MFRC522_Wr
 15057  002C2E  4A0D               	infsnz	MFRC522_CRC@dataIn^0,f,c
 15058  002C30  2A0E               	incf	(MFRC522_CRC@dataIn+1)^0,f,c
 15059  002C32                     
 15060                           ;RC522.c: 263:     }
 15061  002C32  2A13               	incf	MFRC522_CRC@i^0,f,c
 15062  002C34                     l4175:
 15063  002C34  500F               	movf	MFRC522_CRC@length^0,w,c
 15064  002C36  5C13               	subwf	MFRC522_CRC@i^0,w,c
 15065  002C38  A0D8               	btfss	status,0,c
 15066  002C3A  EF21  F016         	goto	u3931
 15067  002C3E  EF23  F016         	goto	u3930
 15068  002C42                     u3931:
 15069  002C42  EF0E  F016         	goto	l4169
 15070  002C46                     u3930:
 15071  002C46                     
 15072                           ;RC522.c: 265:     MFRC522_Wr( 0x01, 0x03 );
 15073  002C46  0E03               	movlw	3
 15074  002C48  6E01               	movwf	MFRC522_Wr@value^0,c
 15075  002C4A  0E01               	movlw	1
 15076  002C4C  EC25  F017         	call	_MFRC522_Wr
 15077  002C50                     
 15078                           ;RC522.c: 267:     i = 0xFF;
 15079  002C50  6813               	setf	MFRC522_CRC@i^0,c
 15080  002C52                     l579:
 15081                           
 15082                           ;RC522.c: 270:     {;RC522.c: 271:         n = MFRC522_Rd( 0x05 );
 15083  002C52  0E05               	movlw	5
 15084  002C54  EC56  F015         	call	_MFRC522_Rd
 15085  002C58  6E12               	movwf	MFRC522_CRC@n^0,c
 15086  002C5A                     
 15087                           ;RC522.c: 272:         i--;
 15088  002C5A  0613               	decf	MFRC522_CRC@i^0,f,c
 15089  002C5C                     
 15090                           ;RC522.c: 273:     }
 15091  002C5C  5013               	movf	MFRC522_CRC@i^0,w,c
 15092  002C5E  B4D8               	btfsc	status,2,c
 15093  002C60  EF34  F016         	goto	u3941
 15094  002C64  EF36  F016         	goto	u3940
 15095  002C68                     u3941:
 15096  002C68  EF3D  F016         	goto	l4187
 15097  002C6C                     u3940:
 15098  002C6C  A412               	btfss	MFRC522_CRC@n^0,2,c
 15099  002C6E  EF3B  F016         	goto	u3951
 15100  002C72  EF3D  F016         	goto	u3950
 15101  002C76                     u3951:
 15102  002C76  EF29  F016         	goto	l579
 15103  002C7A                     u3950:
 15104  002C7A                     l4187:
 15105                           
 15106                           ;RC522.c: 276:     dataOut[0] = MFRC522_Rd( 0x22 );
 15107  002C7A  0E22               	movlw	34
 15108  002C7C  EC56  F015         	call	_MFRC522_Rd
 15109  002C80  C010  FFD9         	movff	MFRC522_CRC@dataOut,fsr2l
 15110  002C84  C011  FFDA         	movff	MFRC522_CRC@dataOut+1,fsr2h
 15111  002C88  6EDF               	movwf	indf2,c
 15112                           
 15113                           ;RC522.c: 277:     dataOut[1] = MFRC522_Rd( 0x21 );
 15114  002C8A  EE20 F001          	lfsr	2,1
 15115  002C8E  5010               	movf	MFRC522_CRC@dataOut^0,w,c
 15116  002C90  26D9               	addwf	fsr2l,f,c
 15117  002C92  5011               	movf	(MFRC522_CRC@dataOut+1)^0,w,c
 15118  002C94  22DA               	addwfc	fsr2h,f,c
 15119  002C96  0E21               	movlw	33
 15120  002C98  EC56  F015         	call	_MFRC522_Rd
 15121  002C9C  6EDF               	movwf	indf2,c
 15122  002C9E  0012               	return		;funcret
 15123  002CA0                     __end_of_MFRC522_CRC:
 15124                           	callstack 0
 15125                           
 15126 ;; *************** function _MFRC522_Set_Bit *****************
 15127 ;; Defined at:
 15128 ;;		line 88 in file "RC522.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;  addr            1    wreg     unsigned char 
 15131 ;;  mask            1    9[COMRAM] unsigned char 
 15132 ;; Auto vars:     Size  Location     Type
 15133 ;;  addr            1   11[COMRAM] unsigned char 
 15134 ;;  tmp             1   10[COMRAM] unsigned char 
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  1    wreg      void 
 15137 ;; Registers used:
 15138 ;;		wreg, status,2, status,0, cstack
 15139 ;; Tracked objects:
 15140 ;;		On entry : 0/0
 15141 ;;		On exit  : 0/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15144 ;;      Params:         1       0       0       0       0       0       0       0       0
 15145 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15146 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15147 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15148 ;;Total ram usage:        3 bytes
 15149 ;; Hardware stack levels used: 1
 15150 ;; Hardware stack levels required when called: 2
 15151 ;; This function calls:
 15152 ;;		_MFRC522_Rd
 15153 ;;		_MFRC522_Wr
 15154 ;; This function is called by:
 15155 ;;		_MFRC522_AntennaOn
 15156 ;;		_MFRC522_ToCard
 15157 ;;		_MFRC522_CRC
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           	psect	text70
 15162  003A84                     __ptext70:
 15163                           	callstack 0
 15164  003A84                     _MFRC522_Set_Bit:
 15165                           	callstack 26
 15166                           
 15167                           ;incstack = 0
 15168                           ;MFRC522_Set_Bit@addr stored from wreg
 15169  003A84  6E0C               	movwf	MFRC522_Set_Bit@addr^0,c
 15170  003A86                     
 15171                           ;RC522.c: 90:       tmp=MFRC522_Rd( addr ) ;
 15172  003A86  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
 15173  003A88  EC56  F015         	call	_MFRC522_Rd
 15174  003A8C  6E0B               	movwf	MFRC522_Set_Bit@tmp^0,c
 15175  003A8E                     
 15176                           ;RC522.c: 91:      MFRC522_Wr( addr, tmp|mask );
 15177  003A8E  500B               	movf	MFRC522_Set_Bit@tmp^0,w,c
 15178  003A90  100A               	iorwf	MFRC522_Set_Bit@mask^0,w,c
 15179  003A92  6E01               	movwf	MFRC522_Wr@value^0,c
 15180  003A94  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
 15181  003A96  EC25  F017         	call	_MFRC522_Wr
 15182  003A9A  0012               	return		;funcret
 15183  003A9C                     __end_of_MFRC522_Set_Bit:
 15184                           	callstack 0
 15185                           
 15186 ;; *************** function _MFRC522_Clear_Bit *****************
 15187 ;; Defined at:
 15188 ;;		line 83 in file "RC522.c"
 15189 ;; Parameters:    Size  Location     Type
 15190 ;;  addr            1    wreg     unsigned char 
 15191 ;;  mask            1    9[COMRAM] unsigned char 
 15192 ;; Auto vars:     Size  Location     Type
 15193 ;;  addr            1   11[COMRAM] unsigned char 
 15194 ;;  tmp             1   10[COMRAM] unsigned char 
 15195 ;; Return value:  Size  Location     Type
 15196 ;;                  1    wreg      void 
 15197 ;; Registers used:
 15198 ;;		wreg, status,2, status,0, cstack
 15199 ;; Tracked objects:
 15200 ;;		On entry : 0/0
 15201 ;;		On exit  : 0/0
 15202 ;;		Unchanged: 0/0
 15203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15204 ;;      Params:         1       0       0       0       0       0       0       0       0
 15205 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15206 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15207 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15208 ;;Total ram usage:        3 bytes
 15209 ;; Hardware stack levels used: 1
 15210 ;; Hardware stack levels required when called: 2
 15211 ;; This function calls:
 15212 ;;		_MFRC522_Rd
 15213 ;;		_MFRC522_Wr
 15214 ;; This function is called by:
 15215 ;;		_MFRC522_AntennaOff
 15216 ;;		_MFRC522_ToCard
 15217 ;;		_MFRC522_CRC
 15218 ;;		_MFRC522_Halt
 15219 ;;		_MFRC522_AntiColl
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text71
 15224  003A50                     __ptext71:
 15225                           	callstack 0
 15226  003A50                     _MFRC522_Clear_Bit:
 15227                           	callstack 26
 15228                           
 15229                           ;incstack = 0
 15230                           ;MFRC522_Clear_Bit@addr stored from wreg
 15231  003A50  6E0C               	movwf	MFRC522_Clear_Bit@addr^0,c
 15232  003A52                     
 15233                           ;RC522.c: 85:       tmp=MFRC522_Rd( addr ) ;
 15234  003A52  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
 15235  003A54  EC56  F015         	call	_MFRC522_Rd
 15236  003A58  6E0B               	movwf	MFRC522_Clear_Bit@tmp^0,c
 15237  003A5A                     
 15238                           ;RC522.c: 86:      MFRC522_Wr( addr, tmp&~mask );
 15239  003A5A  500A               	movf	MFRC522_Clear_Bit@mask^0,w,c
 15240  003A5C  0AFF               	xorlw	255
 15241  003A5E  140B               	andwf	MFRC522_Clear_Bit@tmp^0,w,c
 15242  003A60  6E01               	movwf	MFRC522_Wr@value^0,c
 15243  003A62  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
 15244  003A64  EC25  F017         	call	_MFRC522_Wr
 15245  003A68  0012               	return		;funcret
 15246  003A6A                     __end_of_MFRC522_Clear_Bit:
 15247                           	callstack 0
 15248                           
 15249 ;; *************** function _MFRC522_Wr *****************
 15250 ;; Defined at:
 15251 ;;		line 48 in file "RC522.c"
 15252 ;; Parameters:    Size  Location     Type
 15253 ;;  Address         1    wreg     unsigned char 
 15254 ;;  value           1    0[COMRAM] unsigned char 
 15255 ;; Auto vars:     Size  Location     Type
 15256 ;;  Address         1    1[COMRAM] unsigned char 
 15257 ;;  i               1    3[COMRAM] unsigned char 
 15258 ;;  ucAddr          1    2[COMRAM] unsigned char 
 15259 ;; Return value:  Size  Location     Type
 15260 ;;                  1    wreg      void 
 15261 ;; Registers used:
 15262 ;;		wreg, status,2, status,0
 15263 ;; Tracked objects:
 15264 ;;		On entry : 0/0
 15265 ;;		On exit  : 0/0
 15266 ;;		Unchanged: 0/0
 15267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15268 ;;      Params:         1       0       0       0       0       0       0       0       0
 15269 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15270 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15271 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15272 ;;Total ram usage:        4 bytes
 15273 ;; Hardware stack levels used: 1
 15274 ;; Hardware stack levels required when called: 1
 15275 ;; This function calls:
 15276 ;;		Nothing
 15277 ;; This function is called by:
 15278 ;;		_MFRC522_Clear_Bit
 15279 ;;		_MFRC522_Set_Bit
 15280 ;;		_MFRC522_Reset
 15281 ;;		_MFRC522_Init
 15282 ;;		_MFRC522_ToCard
 15283 ;;		_MFRC522_Request
 15284 ;;		_MFRC522_CRC
 15285 ;;		_MFRC522_AntiColl
 15286 ;; This function uses a non-reentrant model
 15287 ;;
 15288                           
 15289                           	psect	text72
 15290  002E4A                     __ptext72:
 15291                           	callstack 0
 15292  002E4A                     _MFRC522_Wr:
 15293                           	callstack 28
 15294                           
 15295                           ;incstack = 0
 15296                           ;MFRC522_Wr@Address stored from wreg
 15297  002E4A  6E02               	movwf	MFRC522_Wr@Address^0,c
 15298  002E4C                     
 15299                           ;RC522.c: 48: void MFRC522_Wr(unsigned char Address, unsigned char value);RC522.c: 49: {
      +                          ;RC522.c: 51:    unsigned char i, ucAddr;;RC522.c: 53:    LATCbits.LATC2 = 0;
 15300  002E4C  948B               	bcf	139,2,c	;volatile
 15301                           
 15302                           ;RC522.c: 55:    LATCbits.LATC1 = 0;
 15303  002E4E  928B               	bcf	139,1,c	;volatile
 15304  002E50                     
 15305                           ;RC522.c: 56:    ucAddr = ( (Address<<1)&0x7E);
 15306  002E50  5002               	movf	MFRC522_Wr@Address^0,w,c
 15307  002E52  2402               	addwf	MFRC522_Wr@Address^0,w,c
 15308  002E54  0B7E               	andlw	126
 15309  002E56  6E03               	movwf	MFRC522_Wr@ucAddr^0,c
 15310  002E58                     
 15311                           ;RC522.c: 57:    for(i = 8; i > 0; i--){
 15312  002E58  0E08               	movlw	8
 15313  002E5A  6E04               	movwf	MFRC522_Wr@i^0,c
 15314  002E5C                     l513:
 15315                           
 15316                           ;RC522.c: 59:         if((ucAddr&0x80) == 0x80) LATDbits.LATD0 = 1;
 15317  002E5C  AE03               	btfss	MFRC522_Wr@ucAddr^0,7,c
 15318  002E5E  EF33  F017         	goto	u3121
 15319  002E62  EF35  F017         	goto	u3120
 15320  002E66                     u3121:
 15321  002E66  EF38  F017         	goto	l515
 15322  002E6A                     u3120:
 15323  002E6A  808C               	bsf	140,0,c	;volatile
 15324  002E6C  EF39  F017         	goto	l516
 15325  002E70                     l515:
 15326  002E70  908C               	bcf	140,0,c	;volatile
 15327  002E72                     l516:
 15328                           
 15329                           ;RC522.c: 62:         LATCbits.LATC2 = 1;
 15330  002E72  848B               	bsf	139,2,c	;volatile
 15331  002E74                     
 15332                           ;RC522.c: 63:         ucAddr <<= 1;
 15333  002E74  90D8               	bcf	status,0,c
 15334  002E76  3603               	rlcf	MFRC522_Wr@ucAddr^0,f,c
 15335  002E78                     
 15336                           ;RC522.c: 65:         LATCbits.LATC2 = 0;
 15337  002E78  948B               	bcf	139,2,c	;volatile
 15338  002E7A                     
 15339                           ;RC522.c: 66:    }
 15340  002E7A  0604               	decf	MFRC522_Wr@i^0,f,c
 15341  002E7C  5004               	movf	MFRC522_Wr@i^0,w,c
 15342  002E7E  A4D8               	btfss	status,2,c
 15343  002E80  EF44  F017         	goto	u3131
 15344  002E84  EF46  F017         	goto	u3130
 15345  002E88                     u3131:
 15346  002E88  EF2E  F017         	goto	l513
 15347  002E8C                     u3130:
 15348  002E8C                     
 15349                           ;RC522.c: 67:    for(i = 8; i > 0; i--)
 15350  002E8C  0E08               	movlw	8
 15351  002E8E  6E04               	movwf	MFRC522_Wr@i^0,c
 15352  002E90                     l517:
 15353                           
 15354                           ;RC522.c: 68:    {;RC522.c: 70:        if((value&0x80) == 0x80) LATDbits.LATD0 = 1;
 15355  002E90  AE01               	btfss	MFRC522_Wr@value^0,7,c
 15356  002E92  EF4D  F017         	goto	u3141
 15357  002E96  EF4F  F017         	goto	u3140
 15358  002E9A                     u3141:
 15359  002E9A  EF52  F017         	goto	l519
 15360  002E9E                     u3140:
 15361  002E9E  808C               	bsf	140,0,c	;volatile
 15362  002EA0  EF53  F017         	goto	l520
 15363  002EA4                     l519:
 15364  002EA4  908C               	bcf	140,0,c	;volatile
 15365  002EA6                     l520:
 15366                           
 15367                           ;RC522.c: 73:        LATCbits.LATC2 = 1;
 15368  002EA6  848B               	bsf	139,2,c	;volatile
 15369  002EA8                     
 15370                           ;RC522.c: 74:        value <<= 1;
 15371  002EA8  90D8               	bcf	status,0,c
 15372  002EAA  3601               	rlcf	MFRC522_Wr@value^0,f,c
 15373  002EAC                     
 15374                           ;RC522.c: 76:        LATCbits.LATC2 = 0;
 15375  002EAC  948B               	bcf	139,2,c	;volatile
 15376  002EAE                     
 15377                           ;RC522.c: 77:    }
 15378  002EAE  0604               	decf	MFRC522_Wr@i^0,f,c
 15379  002EB0  5004               	movf	MFRC522_Wr@i^0,w,c
 15380  002EB2  A4D8               	btfss	status,2,c
 15381  002EB4  EF5E  F017         	goto	u3151
 15382  002EB8  EF60  F017         	goto	u3150
 15383  002EBC                     u3151:
 15384  002EBC  EF48  F017         	goto	l517
 15385  002EC0                     u3150:
 15386  002EC0                     
 15387                           ;RC522.c: 79:    LATCbits.LATC1 = 1;
 15388  002EC0  828B               	bsf	139,1,c	;volatile
 15389                           
 15390                           ;RC522.c: 81:    LATCbits.LATC2 = 1;
 15391  002EC2  848B               	bsf	139,2,c	;volatile
 15392  002EC4  0012               	return		;funcret
 15393  002EC6                     __end_of_MFRC522_Wr:
 15394                           	callstack 0
 15395                           
 15396 ;; *************** function _MFRC522_Rd *****************
 15397 ;; Defined at:
 15398 ;;		line 4 in file "RC522.c"
 15399 ;; Parameters:    Size  Location     Type
 15400 ;;  Address         1    wreg     unsigned char 
 15401 ;; Auto vars:     Size  Location     Type
 15402 ;;  Address         1    2[COMRAM] unsigned char 
 15403 ;;  i               2    7[COMRAM] unsigned int 
 15404 ;;  ucResult        2    5[COMRAM] unsigned int 
 15405 ;;  ucAddr          2    3[COMRAM] unsigned int 
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      unsigned char 
 15408 ;; Registers used:
 15409 ;;		wreg, status,2, status,0
 15410 ;; Tracked objects:
 15411 ;;		On entry : 0/0
 15412 ;;		On exit  : 0/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15415 ;;      Params:         0       0       0       0       0       0       0       0       0
 15416 ;;      Locals:         7       0       0       0       0       0       0       0       0
 15417 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15418 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15419 ;;Total ram usage:        9 bytes
 15420 ;; Hardware stack levels used: 1
 15421 ;; Hardware stack levels required when called: 1
 15422 ;; This function calls:
 15423 ;;		Nothing
 15424 ;; This function is called by:
 15425 ;;		_MFRC522_Clear_Bit
 15426 ;;		_MFRC522_Set_Bit
 15427 ;;		_MFRC522_AntennaOn
 15428 ;;		_MFRC522_ToCard
 15429 ;;		_MFRC522_CRC
 15430 ;; This function uses a non-reentrant model
 15431 ;;
 15432                           
 15433                           	psect	text73
 15434  002AAC                     __ptext73:
 15435                           	callstack 0
 15436  002AAC                     _MFRC522_Rd:
 15437                           	callstack 26
 15438                           
 15439                           ;incstack = 0
 15440                           ;MFRC522_Rd@Address stored from wreg
 15441  002AAC  6E03               	movwf	MFRC522_Rd@Address^0,c
 15442  002AAE                     
 15443                           ;RC522.c: 4: unsigned char MFRC522_Rd(unsigned char Address);RC522.c: 5: {;RC522.c: 6:  
      +                            unsigned int i, ucAddr;;RC522.c: 7:    unsigned int ucResult = 0;
 15444  002AAE  0E00               	movlw	0
 15445  002AB0  6E07               	movwf	(MFRC522_Rd@ucResult+1)^0,c
 15446  002AB2  0E00               	movlw	0
 15447  002AB4  6E06               	movwf	MFRC522_Rd@ucResult^0,c
 15448  002AB6                     
 15449                           ;RC522.c: 11:    LATCbits.LATC2 = 0;
 15450  002AB6  948B               	bcf	139,2,c	;volatile
 15451  002AB8                     
 15452                           ;RC522.c: 12:    LATCbits.LATC1 = 0;
 15453  002AB8  928B               	bcf	139,1,c	;volatile
 15454  002ABA                     
 15455                           ;RC522.c: 13:    ucAddr = ( (Address<<1)&0x7E)|0x80;
 15456  002ABA  5003               	movf	MFRC522_Rd@Address^0,w,c
 15457  002ABC  2403               	addwf	MFRC522_Rd@Address^0,w,c
 15458  002ABE  0B7E               	andlw	126
 15459  002AC0  6E01               	movwf	??_MFRC522_Rd^0,c
 15460  002AC2  6A02               	clrf	(??_MFRC522_Rd+1)^0,c
 15461  002AC4  0E80               	movlw	128
 15462  002AC6  1001               	iorwf	??_MFRC522_Rd^0,w,c
 15463  002AC8  6E04               	movwf	MFRC522_Rd@ucAddr^0,c
 15464  002ACA  5002               	movf	(??_MFRC522_Rd+1)^0,w,c
 15465  002ACC  6E05               	movwf	(MFRC522_Rd@ucAddr+1)^0,c
 15466  002ACE                     
 15467                           ;RC522.c: 15:    for (i = 8; i > 0; i--)
 15468  002ACE  0E00               	movlw	0
 15469  002AD0  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
 15470  002AD2  0E08               	movlw	8
 15471  002AD4  6E08               	movwf	MFRC522_Rd@i^0,c
 15472  002AD6                     l504:
 15473                           
 15474                           ;RC522.c: 16:    {;RC522.c: 19:        if((ucAddr&0x80) == 0x80){
 15475  002AD6  AE04               	btfss	MFRC522_Rd@ucAddr^0,7,c
 15476  002AD8  EF70  F015         	goto	u3081
 15477  002ADC  EF72  F015         	goto	u3080
 15478  002AE0                     u3081:
 15479  002AE0  EF75  F015         	goto	l506
 15480  002AE4                     u3080:
 15481  002AE4                     
 15482                           ;RC522.c: 20:            LATDbits.LATD0 = 1;
 15483  002AE4  808C               	bsf	140,0,c	;volatile
 15484                           
 15485                           ;RC522.c: 21:        }
 15486  002AE6  EF76  F015         	goto	l507
 15487  002AEA                     l506:
 15488                           
 15489                           ;RC522.c: 23:            LATDbits.LATD0 = 0;
 15490  002AEA  908C               	bcf	140,0,c	;volatile
 15491  002AEC                     l507:
 15492                           
 15493                           ;RC522.c: 25:        LATCbits.LATC2 = 1;
 15494  002AEC  848B               	bsf	139,2,c	;volatile
 15495  002AEE                     
 15496                           ;RC522.c: 26:        ucAddr <<= 1;
 15497  002AEE  90D8               	bcf	status,0,c
 15498  002AF0  3604               	rlcf	MFRC522_Rd@ucAddr^0,f,c
 15499  002AF2  3605               	rlcf	(MFRC522_Rd@ucAddr+1)^0,f,c
 15500  002AF4                     
 15501                           ;RC522.c: 28:        LATCbits.LATC2 = 0;
 15502  002AF4  948B               	bcf	139,2,c	;volatile
 15503                           
 15504                           ;RC522.c: 29:    }
 15505  002AF6  0608               	decf	MFRC522_Rd@i^0,f,c
 15506  002AF8  A0D8               	btfss	status,0,c
 15507  002AFA  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
 15508  002AFC  5008               	movf	MFRC522_Rd@i^0,w,c
 15509  002AFE  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
 15510  002B00  A4D8               	btfss	status,2,c
 15511  002B02  EF85  F015         	goto	u3091
 15512  002B06  EF87  F015         	goto	u3090
 15513  002B0A                     u3091:
 15514  002B0A  EF6B  F015         	goto	l504
 15515  002B0E                     u3090:
 15516  002B0E                     
 15517                           ;RC522.c: 31:    for (i = 8; i > 0; i--)
 15518  002B0E  0E00               	movlw	0
 15519  002B10  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
 15520  002B12  0E08               	movlw	8
 15521  002B14  6E08               	movwf	MFRC522_Rd@i^0,c
 15522  002B16                     l508:
 15523                           
 15524                           ;RC522.c: 32:    {;RC522.c: 34:       LATCbits.LATC2 = 1;
 15525  002B16  848B               	bsf	139,2,c	;volatile
 15526  002B18                     
 15527                           ;RC522.c: 35:       ucResult <<= 1;
 15528  002B18  90D8               	bcf	status,0,c
 15529  002B1A  3606               	rlcf	MFRC522_Rd@ucResult^0,f,c
 15530  002B1C  3607               	rlcf	(MFRC522_Rd@ucResult+1)^0,f,c
 15531  002B1E                     
 15532                           ;RC522.c: 36:       ucResult|= PORTDbits.RD1;
 15533  002B1E  B283               	btfsc	131,1,c	;volatile
 15534  002B20  EF94  F015         	goto	u3101
 15535  002B24  EF98  F015         	goto	u3100
 15536  002B28                     u3101:
 15537  002B28  6A01               	clrf	??_MFRC522_Rd^0,c
 15538  002B2A  2A01               	incf	??_MFRC522_Rd^0,f,c
 15539  002B2C  EF99  F015         	goto	u3108
 15540  002B30                     u3100:
 15541  002B30  6A01               	clrf	??_MFRC522_Rd^0,c
 15542  002B32                     u3108:
 15543  002B32  5001               	movf	??_MFRC522_Rd^0,w,c
 15544  002B34  1206               	iorwf	MFRC522_Rd@ucResult^0,f,c
 15545  002B36                     
 15546                           ;RC522.c: 38:       LATCbits.LATC2 = 0;
 15547  002B36  948B               	bcf	139,2,c	;volatile
 15548  002B38                     
 15549                           ;RC522.c: 39:    }
 15550  002B38  0608               	decf	MFRC522_Rd@i^0,f,c
 15551  002B3A  A0D8               	btfss	status,0,c
 15552  002B3C  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
 15553  002B3E  5008               	movf	MFRC522_Rd@i^0,w,c
 15554  002B40  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
 15555  002B42  A4D8               	btfss	status,2,c
 15556  002B44  EFA6  F015         	goto	u3111
 15557  002B48  EFA8  F015         	goto	u3110
 15558  002B4C                     u3111:
 15559  002B4C  EF8B  F015         	goto	l508
 15560  002B50                     u3110:
 15561  002B50                     
 15562                           ;RC522.c: 43:    LATCbits.LATC1 = 1;
 15563  002B50  828B               	bsf	139,1,c	;volatile
 15564                           
 15565                           ;RC522.c: 45:    LATCbits.LATC2 = 1;
 15566  002B52  848B               	bsf	139,2,c	;volatile
 15567  002B54                     
 15568                           ;RC522.c: 46:    return (unsigned char)ucResult;
 15569  002B54  5006               	movf	MFRC522_Rd@ucResult^0,w,c
 15570  002B56  0012               	return		;funcret
 15571  002B58                     __end_of_MFRC522_Rd:
 15572                           	callstack 0
 15573                           
 15574 ;; *************** function _MFRC522_Clear_UID *****************
 15575 ;; Defined at:
 15576 ;;		line 336 in file "RC522.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;  u_i             2    0[COMRAM] PTR unsigned char 
 15579 ;;		 -> UID(10), 
 15580 ;; Auto vars:     Size  Location     Type
 15581 ;;  j               2    2[COMRAM] int 
 15582 ;; Return value:  Size  Location     Type
 15583 ;;                  1    wreg      void 
 15584 ;; Registers used:
 15585 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15586 ;; Tracked objects:
 15587 ;;		On entry : 0/0
 15588 ;;		On exit  : 0/0
 15589 ;;		Unchanged: 0/0
 15590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15591 ;;      Params:         2       0       0       0       0       0       0       0       0
 15592 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15593 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15594 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15595 ;;Total ram usage:        4 bytes
 15596 ;; Hardware stack levels used: 1
 15597 ;; Hardware stack levels required when called: 1
 15598 ;; This function calls:
 15599 ;;		Nothing
 15600 ;; This function is called by:
 15601 ;;		_CHECK_TAG
 15602 ;; This function uses a non-reentrant model
 15603 ;;
 15604                           
 15605                           	psect	text74
 15606  0036D0                     __ptext74:
 15607                           	callstack 0
 15608  0036D0                     _MFRC522_Clear_UID:
 15609                           	callstack 28
 15610  0036D0                     
 15611                           ;RC522.c: 336: void MFRC522_Clear_UID(char* u_i);RC522.c: 337: {;RC522.c: 338:   for(int
      +                           j=0; j<10; j++)
 15612  0036D0  0E00               	movlw	0
 15613  0036D2  6E04               	movwf	(MFRC522_Clear_UID@j+1)^0,c
 15614  0036D4  0E00               	movlw	0
 15615  0036D6  6E03               	movwf	MFRC522_Clear_UID@j^0,c
 15616  0036D8                     l4707:
 15617                           
 15618                           ;RC522.c: 339:   {;RC522.c: 340:     u_i[j] = 0;
 15619  0036D8  5003               	movf	MFRC522_Clear_UID@j^0,w,c
 15620  0036DA  2401               	addwf	MFRC522_Clear_UID@u_i^0,w,c
 15621  0036DC  6ED9               	movwf	fsr2l,c
 15622  0036DE  5004               	movf	(MFRC522_Clear_UID@j+1)^0,w,c
 15623  0036E0  2002               	addwfc	(MFRC522_Clear_UID@u_i+1)^0,w,c
 15624  0036E2  6EDA               	movwf	fsr2h,c
 15625  0036E4  0E00               	movlw	0
 15626  0036E6  6EDF               	movwf	indf2,c
 15627  0036E8                     
 15628                           ;RC522.c: 341:   }
 15629  0036E8  4A03               	infsnz	MFRC522_Clear_UID@j^0,f,c
 15630  0036EA  2A04               	incf	(MFRC522_Clear_UID@j+1)^0,f,c
 15631  0036EC  BE04               	btfsc	(MFRC522_Clear_UID@j+1)^0,7,c
 15632  0036EE  EF82  F01B         	goto	u4651
 15633  0036F2  5004               	movf	(MFRC522_Clear_UID@j+1)^0,w,c
 15634  0036F4  E109               	bnz	u4650
 15635  0036F6  0E0A               	movlw	10
 15636  0036F8  5C03               	subwf	MFRC522_Clear_UID@j^0,w,c
 15637  0036FA  A0D8               	btfss	status,0,c
 15638  0036FC  EF82  F01B         	goto	u4651
 15639  003700  EF84  F01B         	goto	u4650
 15640  003704                     u4651:
 15641  003704  EF6C  F01B         	goto	l4707
 15642  003708                     u4650:
 15643  003708  0012               	return		;funcret
 15644  00370A                     __end_of_MFRC522_Clear_UID:
 15645                           	callstack 0
 15646                           
 15647 ;; *************** function _Guarda_ID *****************
 15648 ;; Defined at:
 15649 ;;		line 43 in file "24LC256.c"
 15650 ;; Parameters:    Size  Location     Type
 15651 ;;		None
 15652 ;; Auto vars:     Size  Location     Type
 15653 ;;  registro        2   16[COMRAM] unsigned int 
 15654 ;; Return value:  Size  Location     Type
 15655 ;;                  1    wreg      void 
 15656 ;; Registers used:
 15657 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15658 ;; Tracked objects:
 15659 ;;		On entry : 0/0
 15660 ;;		On exit  : 0/0
 15661 ;;		Unchanged: 0/0
 15662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15663 ;;      Params:         0       0       0       0       0       0       0       0       0
 15664 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15666 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15667 ;;Total ram usage:        2 bytes
 15668 ;; Hardware stack levels used: 1
 15669 ;; Hardware stack levels required when called: 6
 15670 ;; This function calls:
 15671 ;;		_EEPROM_Write
 15672 ;;		_EEPROM_getRegistro
 15673 ;;		_EEPROM_setRegistro
 15674 ;;		___wmul
 15675 ;; This function is called by:
 15676 ;;		_CHECK_TAG
 15677 ;; This function uses a non-reentrant model
 15678 ;;
 15679                           
 15680                           	psect	text75
 15681  0015B8                     __ptext75:
 15682                           	callstack 0
 15683  0015B8                     _Guarda_ID:
 15684                           	callstack 23
 15685  0015B8  ECBD  F01B         	call	_EEPROM_getRegistro	;wreg free
 15686  0015BC  C00A  F011         	movff	?_EEPROM_getRegistro,Guarda_ID@registro
 15687  0015C0  C00B  F012         	movff	?_EEPROM_getRegistro+1,Guarda_ID@registro+1
 15688  0015C4  4A11               	infsnz	Guarda_ID@registro^0,f,c
 15689  0015C6  2A12               	incf	(Guarda_ID@registro+1)^0,f,c
 15690  0015C8  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15691  0015CC  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15692  0015D0  0E00               	movlw	0
 15693  0015D2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15694  0015D4  0E0A               	movlw	10
 15695  0015D6  6E03               	movwf	___wmul@multiplicand^0,c
 15696  0015D8  ECDA  F01C         	call	___wmul	;wreg free
 15697  0015DC  C001  F008         	movff	?___wmul,EEPROM_Write@add
 15698  0015E0  C002  F009         	movff	?___wmul+1,EEPROM_Write@add+1
 15699  0015E4  C08D  F00A         	movff	_Valores,EEPROM_Write@data
 15700  0015E8  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15701  0015EC  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15702  0015F0  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15703  0015F4  0E00               	movlw	0
 15704  0015F6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15705  0015F8  0E0A               	movlw	10
 15706  0015FA  6E03               	movwf	___wmul@multiplicand^0,c
 15707  0015FC  ECDA  F01C         	call	___wmul	;wreg free
 15708  001600  0E01               	movlw	1
 15709  001602  2401               	addwf	?___wmul^0,w,c
 15710  001604  6E08               	movwf	EEPROM_Write@add^0,c
 15711  001606  0E00               	movlw	0
 15712  001608  2002               	addwfc	(?___wmul+1)^0,w,c
 15713  00160A  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15714  00160C  C08E  F00A         	movff	_Valores+1,EEPROM_Write@data
 15715  001610  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15716  001614  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15717  001618  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15718  00161C  0E00               	movlw	0
 15719  00161E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15720  001620  0E0A               	movlw	10
 15721  001622  6E03               	movwf	___wmul@multiplicand^0,c
 15722  001624  ECDA  F01C         	call	___wmul	;wreg free
 15723  001628  0E02               	movlw	2
 15724  00162A  2401               	addwf	?___wmul^0,w,c
 15725  00162C  6E08               	movwf	EEPROM_Write@add^0,c
 15726  00162E  0E00               	movlw	0
 15727  001630  2002               	addwfc	(?___wmul+1)^0,w,c
 15728  001632  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15729  001634  C08F  F00A         	movff	_Valores+2,EEPROM_Write@data
 15730  001638  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15731  00163C  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15732  001640  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15733  001644  0E00               	movlw	0
 15734  001646  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15735  001648  0E0A               	movlw	10
 15736  00164A  6E03               	movwf	___wmul@multiplicand^0,c
 15737  00164C  ECDA  F01C         	call	___wmul	;wreg free
 15738  001650  0E03               	movlw	3
 15739  001652  2401               	addwf	?___wmul^0,w,c
 15740  001654  6E08               	movwf	EEPROM_Write@add^0,c
 15741  001656  0E00               	movlw	0
 15742  001658  2002               	addwfc	(?___wmul+1)^0,w,c
 15743  00165A  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15744  00165C  C090  F00A         	movff	_Valores+3,EEPROM_Write@data
 15745  001660  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15746  001664  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15747  001668  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15748  00166C  0E00               	movlw	0
 15749  00166E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15750  001670  0E0A               	movlw	10
 15751  001672  6E03               	movwf	___wmul@multiplicand^0,c
 15752  001674  ECDA  F01C         	call	___wmul	;wreg free
 15753  001678  0E04               	movlw	4
 15754  00167A  2401               	addwf	?___wmul^0,w,c
 15755  00167C  6E08               	movwf	EEPROM_Write@add^0,c
 15756  00167E  0E00               	movlw	0
 15757  001680  2002               	addwfc	(?___wmul+1)^0,w,c
 15758  001682  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15759  001684  C091  F00A         	movff	_Valores+4,EEPROM_Write@data
 15760  001688  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15761  00168C  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15762  001690  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15763  001694  0E00               	movlw	0
 15764  001696  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15765  001698  0E0A               	movlw	10
 15766  00169A  6E03               	movwf	___wmul@multiplicand^0,c
 15767  00169C  ECDA  F01C         	call	___wmul	;wreg free
 15768  0016A0  0E05               	movlw	5
 15769  0016A2  2401               	addwf	?___wmul^0,w,c
 15770  0016A4  6E08               	movwf	EEPROM_Write@add^0,c
 15771  0016A6  0E00               	movlw	0
 15772  0016A8  2002               	addwfc	(?___wmul+1)^0,w,c
 15773  0016AA  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15774  0016AC  C088  F00A         	movff	_Aux,EEPROM_Write@data
 15775  0016B0  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15776  0016B4  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15777  0016B8  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15778  0016BC  0E00               	movlw	0
 15779  0016BE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15780  0016C0  0E0A               	movlw	10
 15781  0016C2  6E03               	movwf	___wmul@multiplicand^0,c
 15782  0016C4  ECDA  F01C         	call	___wmul	;wreg free
 15783  0016C8  0E06               	movlw	6
 15784  0016CA  2401               	addwf	?___wmul^0,w,c
 15785  0016CC  6E08               	movwf	EEPROM_Write@add^0,c
 15786  0016CE  0E00               	movlw	0
 15787  0016D0  2002               	addwfc	(?___wmul+1)^0,w,c
 15788  0016D2  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15789  0016D4  C088  F00A         	movff	_Aux,EEPROM_Write@data
 15790  0016D8  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15791  0016DC  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15792  0016E0  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15793  0016E4  0E00               	movlw	0
 15794  0016E6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15795  0016E8  0E0A               	movlw	10
 15796  0016EA  6E03               	movwf	___wmul@multiplicand^0,c
 15797  0016EC  ECDA  F01C         	call	___wmul	;wreg free
 15798  0016F0  0E07               	movlw	7
 15799  0016F2  2401               	addwf	?___wmul^0,w,c
 15800  0016F4  6E08               	movwf	EEPROM_Write@add^0,c
 15801  0016F6  0E00               	movlw	0
 15802  0016F8  2002               	addwfc	(?___wmul+1)^0,w,c
 15803  0016FA  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15804  0016FC  C088  F00A         	movff	_Aux,EEPROM_Write@data
 15805  001700  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15806  001704  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15807  001708  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15808  00170C  0E00               	movlw	0
 15809  00170E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15810  001710  0E0A               	movlw	10
 15811  001712  6E03               	movwf	___wmul@multiplicand^0,c
 15812  001714  ECDA  F01C         	call	___wmul	;wreg free
 15813  001718  0E08               	movlw	8
 15814  00171A  2401               	addwf	?___wmul^0,w,c
 15815  00171C  6E08               	movwf	EEPROM_Write@add^0,c
 15816  00171E  0E00               	movlw	0
 15817  001720  2002               	addwfc	(?___wmul+1)^0,w,c
 15818  001722  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15819  001724  C088  F00A         	movff	_Aux,EEPROM_Write@data
 15820  001728  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15821  00172C  C011  F001         	movff	Guarda_ID@registro,___wmul@multiplier
 15822  001730  C012  F002         	movff	Guarda_ID@registro+1,___wmul@multiplier+1
 15823  001734  0E00               	movlw	0
 15824  001736  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 15825  001738  0E0A               	movlw	10
 15826  00173A  6E03               	movwf	___wmul@multiplicand^0,c
 15827  00173C  ECDA  F01C         	call	___wmul	;wreg free
 15828  001740  0E09               	movlw	9
 15829  001742  2401               	addwf	?___wmul^0,w,c
 15830  001744  6E08               	movwf	EEPROM_Write@add^0,c
 15831  001746  0E00               	movlw	0
 15832  001748  2002               	addwfc	(?___wmul+1)^0,w,c
 15833  00174A  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15834  00174C  C088  F00A         	movff	_Aux,EEPROM_Write@data
 15835  001750  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15836  001754  C011  F00C         	movff	Guarda_ID@registro,EEPROM_setRegistro@registro
 15837  001758  C012  F00D         	movff	Guarda_ID@registro+1,EEPROM_setRegistro@registro+1
 15838  00175C  EC9D  F01A         	call	_EEPROM_setRegistro	;wreg free
 15839  001760  0012               	return		;funcret
 15840  001762                     __end_of_Guarda_ID:
 15841                           	callstack 0
 15842                           
 15843 ;; *************** function ___wmul *****************
 15844 ;; Defined at:
 15845 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 15846 ;; Parameters:    Size  Location     Type
 15847 ;;  multiplier      2    0[COMRAM] unsigned int 
 15848 ;;  multiplicand    2    2[COMRAM] unsigned int 
 15849 ;; Auto vars:     Size  Location     Type
 15850 ;;  product         2    4[COMRAM] unsigned int 
 15851 ;; Return value:  Size  Location     Type
 15852 ;;                  2    0[COMRAM] unsigned int 
 15853 ;; Registers used:
 15854 ;;		wreg, status,2, status,0, prodl, prodh
 15855 ;; Tracked objects:
 15856 ;;		On entry : 0/0
 15857 ;;		On exit  : 0/0
 15858 ;;		Unchanged: 0/0
 15859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15860 ;;      Params:         4       0       0       0       0       0       0       0       0
 15861 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15862 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15863 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15864 ;;Total ram usage:        6 bytes
 15865 ;; Hardware stack levels used: 1
 15866 ;; Hardware stack levels required when called: 1
 15867 ;; This function calls:
 15868 ;;		Nothing
 15869 ;; This function is called by:
 15870 ;;		_OLED_NPuts
 15871 ;;		_Guarda_ID
 15872 ;;		_Muestra_ID
 15873 ;;		_Registro_busqueda
 15874 ;; This function uses a non-reentrant model
 15875 ;;
 15876                           
 15877                           	psect	text76
 15878  0039B4                     __ptext76:
 15879                           	callstack 0
 15880  0039B4                     ___wmul:
 15881                           	callstack 27
 15882  0039B4  5001               	movf	___wmul@multiplier^0,w,c
 15883  0039B6  0203               	mulwf	___wmul@multiplicand^0,c
 15884  0039B8  CFF3 F005          	movff	prodl,___wmul@product
 15885  0039BC  CFF4 F006          	movff	prodh,___wmul@product+1
 15886  0039C0  5001               	movf	___wmul@multiplier^0,w,c
 15887  0039C2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 15888  0039C4  50F3               	movf	243,w,c
 15889  0039C6  2606               	addwf	(___wmul@product+1)^0,f,c
 15890  0039C8  5002               	movf	(___wmul@multiplier+1)^0,w,c
 15891  0039CA  0203               	mulwf	___wmul@multiplicand^0,c
 15892  0039CC  50F3               	movf	243,w,c
 15893  0039CE  2606               	addwf	(___wmul@product+1)^0,f,c
 15894  0039D0  C005  F001         	movff	___wmul@product,?___wmul
 15895  0039D4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 15896  0039D8  0012               	return		;funcret
 15897  0039DA                     __end_of___wmul:
 15898                           	callstack 0
 15899                           
 15900 ;; *************** function _EEPROM_setRegistro *****************
 15901 ;; Defined at:
 15902 ;;		line 38 in file "24LC256.c"
 15903 ;; Parameters:    Size  Location     Type
 15904 ;;  registro        2   11[COMRAM] unsigned int 
 15905 ;; Auto vars:     Size  Location     Type
 15906 ;;		None
 15907 ;; Return value:  Size  Location     Type
 15908 ;;                  1    wreg      void 
 15909 ;; Registers used:
 15910 ;;		wreg, status,2, status,0, cstack
 15911 ;; Tracked objects:
 15912 ;;		On entry : 0/0
 15913 ;;		On exit  : 0/0
 15914 ;;		Unchanged: 0/0
 15915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15916 ;;      Params:         2       0       0       0       0       0       0       0       0
 15917 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15918 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15919 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15920 ;;Total ram usage:        2 bytes
 15921 ;; Hardware stack levels used: 1
 15922 ;; Hardware stack levels required when called: 5
 15923 ;; This function calls:
 15924 ;;		_EEPROM_Write
 15925 ;;		___lwdiv
 15926 ;;		___lwmod
 15927 ;; This function is called by:
 15928 ;;		_main
 15929 ;;		_Guarda_ID
 15930 ;; This function uses a non-reentrant model
 15931 ;;
 15932                           
 15933                           	psect	text77
 15934  00353A                     __ptext77:
 15935                           	callstack 0
 15936  00353A                     _EEPROM_setRegistro:
 15937                           	callstack 25
 15938  00353A  0E00               	movlw	0
 15939  00353C  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15940  00353E  0E02               	movlw	2
 15941  003540  6E08               	movwf	EEPROM_Write@add^0,c
 15942  003542  C00C  F001         	movff	EEPROM_setRegistro@registro,___lwdiv@dividend
 15943  003546  C00D  F002         	movff	EEPROM_setRegistro@registro+1,___lwdiv@dividend+1
 15944  00354A  0E00               	movlw	0
 15945  00354C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 15946  00354E  0E64               	movlw	100
 15947  003550  6E03               	movwf	___lwdiv@divisor^0,c
 15948  003552  EC63  F017         	call	___lwdiv	;wreg free
 15949  003556  5001               	movf	?___lwdiv^0,w,c
 15950  003558  6E0A               	movwf	EEPROM_Write@data^0,c
 15951  00355A  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15952  00355E  0E00               	movlw	0
 15953  003560  6E09               	movwf	(EEPROM_Write@add+1)^0,c
 15954  003562  0E03               	movlw	3
 15955  003564  6E08               	movwf	EEPROM_Write@add^0,c
 15956  003566  C00C  F001         	movff	EEPROM_setRegistro@registro,___lwmod@dividend
 15957  00356A  C00D  F002         	movff	EEPROM_setRegistro@registro+1,___lwmod@dividend+1
 15958  00356E  0E00               	movlw	0
 15959  003570  6E04               	movwf	(___lwmod@divisor+1)^0,c
 15960  003572  0E64               	movlw	100
 15961  003574  6E03               	movwf	___lwmod@divisor^0,c
 15962  003576  EC09  F019         	call	___lwmod	;wreg free
 15963  00357A  5001               	movf	?___lwmod^0,w,c
 15964  00357C  6E0A               	movwf	EEPROM_Write@data^0,c
 15965  00357E  EC0D  F01C         	call	_EEPROM_Write	;wreg free
 15966  003582  0012               	return		;funcret
 15967  003584                     __end_of_EEPROM_setRegistro:
 15968                           	callstack 0
 15969                           
 15970 ;; *************** function ___lwmod *****************
 15971 ;; Defined at:
 15972 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 15973 ;; Parameters:    Size  Location     Type
 15974 ;;  dividend        2    0[COMRAM] unsigned int 
 15975 ;;  divisor         2    2[COMRAM] unsigned int 
 15976 ;; Auto vars:     Size  Location     Type
 15977 ;;  counter         1    4[COMRAM] unsigned char 
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  2    0[COMRAM] unsigned int 
 15980 ;; Registers used:
 15981 ;;		wreg, status,2, status,0
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15987 ;;      Params:         4       0       0       0       0       0       0       0       0
 15988 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15990 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15991 ;;Total ram usage:        5 bytes
 15992 ;; Hardware stack levels used: 1
 15993 ;; Hardware stack levels required when called: 1
 15994 ;; This function calls:
 15995 ;;		Nothing
 15996 ;; This function is called by:
 15997 ;;		_EEPROM_setRegistro
 15998 ;; This function uses a non-reentrant model
 15999 ;;
 16000                           
 16001                           	psect	text78
 16002  003212                     __ptext78:
 16003                           	callstack 0
 16004  003212                     ___lwmod:
 16005                           	callstack 28
 16006  003212  5003               	movf	___lwmod@divisor^0,w,c
 16007  003214  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
 16008  003216  B4D8               	btfsc	status,2,c
 16009  003218  EF10  F019         	goto	u3671
 16010  00321C  EF12  F019         	goto	u3670
 16011  003220                     u3671:
 16012  003220  EF36  F019         	goto	l1170
 16013  003224                     u3670:
 16014  003224  0E01               	movlw	1
 16015  003226  6E05               	movwf	___lwmod@counter^0,c
 16016  003228  EF1A  F019         	goto	l4015
 16017  00322C                     l4013:
 16018  00322C  90D8               	bcf	status,0,c
 16019  00322E  3603               	rlcf	___lwmod@divisor^0,f,c
 16020  003230  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
 16021  003232  2A05               	incf	___lwmod@counter^0,f,c
 16022  003234                     l4015:
 16023  003234  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
 16024  003236  EF1F  F019         	goto	u3681
 16025  00323A  EF21  F019         	goto	u3680
 16026  00323E                     u3681:
 16027  00323E  EF16  F019         	goto	l4013
 16028  003242                     u3680:
 16029  003242                     l4017:
 16030  003242  5003               	movf	___lwmod@divisor^0,w,c
 16031  003244  5C01               	subwf	___lwmod@dividend^0,w,c
 16032  003246  5004               	movf	(___lwmod@divisor+1)^0,w,c
 16033  003248  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
 16034  00324A  A0D8               	btfss	status,0,c
 16035  00324C  EF2A  F019         	goto	u3691
 16036  003250  EF2C  F019         	goto	u3690
 16037  003254                     u3691:
 16038  003254  EF30  F019         	goto	l4021
 16039  003258                     u3690:
 16040  003258  5003               	movf	___lwmod@divisor^0,w,c
 16041  00325A  5E01               	subwf	___lwmod@dividend^0,f,c
 16042  00325C  5004               	movf	(___lwmod@divisor+1)^0,w,c
 16043  00325E  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
 16044  003260                     l4021:
 16045  003260  90D8               	bcf	status,0,c
 16046  003262  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
 16047  003264  3203               	rrcf	___lwmod@divisor^0,f,c
 16048  003266  2E05               	decfsz	___lwmod@counter^0,f,c
 16049  003268  EF21  F019         	goto	l4017
 16050  00326C                     l1170:
 16051  00326C  C001  F001         	movff	___lwmod@dividend,?___lwmod
 16052  003270  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 16053  003274  0012               	return		;funcret
 16054  003276                     __end_of___lwmod:
 16055                           	callstack 0
 16056                           
 16057 ;; *************** function ___lwdiv *****************
 16058 ;; Defined at:
 16059 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;  dividend        2    0[COMRAM] unsigned int 
 16062 ;;  divisor         2    2[COMRAM] unsigned int 
 16063 ;; Auto vars:     Size  Location     Type
 16064 ;;  quotient        2    4[COMRAM] unsigned int 
 16065 ;;  counter         1    6[COMRAM] unsigned char 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  2    0[COMRAM] unsigned int 
 16068 ;; Registers used:
 16069 ;;		wreg, status,2, status,0
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16075 ;;      Params:         4       0       0       0       0       0       0       0       0
 16076 ;;      Locals:         3       0       0       0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16078 ;;      Totals:         7       0       0       0       0       0       0       0       0
 16079 ;;Total ram usage:        7 bytes
 16080 ;; Hardware stack levels used: 1
 16081 ;; Hardware stack levels required when called: 1
 16082 ;; This function calls:
 16083 ;;		Nothing
 16084 ;; This function is called by:
 16085 ;;		_EEPROM_setRegistro
 16086 ;; This function uses a non-reentrant model
 16087 ;;
 16088                           
 16089                           	psect	text79
 16090  002EC6                     __ptext79:
 16091                           	callstack 0
 16092  002EC6                     ___lwdiv:
 16093                           	callstack 28
 16094  002EC6  0E00               	movlw	0
 16095  002EC8  6E06               	movwf	(___lwdiv@quotient+1)^0,c
 16096  002ECA  0E00               	movlw	0
 16097  002ECC  6E05               	movwf	___lwdiv@quotient^0,c
 16098  002ECE  5003               	movf	___lwdiv@divisor^0,w,c
 16099  002ED0  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 16100  002ED2  B4D8               	btfsc	status,2,c
 16101  002ED4  EF6E  F017         	goto	u3641
 16102  002ED8  EF70  F017         	goto	u3640
 16103  002EDC                     u3641:
 16104  002EDC  EF98  F017         	goto	l1160
 16105  002EE0                     u3640:
 16106  002EE0  0E01               	movlw	1
 16107  002EE2  6E07               	movwf	___lwdiv@counter^0,c
 16108  002EE4  EF78  F017         	goto	l3995
 16109  002EE8                     l3993:
 16110  002EE8  90D8               	bcf	status,0,c
 16111  002EEA  3603               	rlcf	___lwdiv@divisor^0,f,c
 16112  002EEC  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 16113  002EEE  2A07               	incf	___lwdiv@counter^0,f,c
 16114  002EF0                     l3995:
 16115  002EF0  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 16116  002EF2  EF7D  F017         	goto	u3651
 16117  002EF6  EF7F  F017         	goto	u3650
 16118  002EFA                     u3651:
 16119  002EFA  EF74  F017         	goto	l3993
 16120  002EFE                     u3650:
 16121  002EFE                     l3997:
 16122  002EFE  90D8               	bcf	status,0,c
 16123  002F00  3605               	rlcf	___lwdiv@quotient^0,f,c
 16124  002F02  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
 16125  002F04  5003               	movf	___lwdiv@divisor^0,w,c
 16126  002F06  5C01               	subwf	___lwdiv@dividend^0,w,c
 16127  002F08  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 16128  002F0A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 16129  002F0C  A0D8               	btfss	status,0,c
 16130  002F0E  EF8B  F017         	goto	u3661
 16131  002F12  EF8D  F017         	goto	u3660
 16132  002F16                     u3661:
 16133  002F16  EF92  F017         	goto	l4005
 16134  002F1A                     u3660:
 16135  002F1A  5003               	movf	___lwdiv@divisor^0,w,c
 16136  002F1C  5E01               	subwf	___lwdiv@dividend^0,f,c
 16137  002F1E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 16138  002F20  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 16139  002F22  8005               	bsf	___lwdiv@quotient^0,0,c
 16140  002F24                     l4005:
 16141  002F24  90D8               	bcf	status,0,c
 16142  002F26  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 16143  002F28  3203               	rrcf	___lwdiv@divisor^0,f,c
 16144  002F2A  2E07               	decfsz	___lwdiv@counter^0,f,c
 16145  002F2C  EF7F  F017         	goto	l3997
 16146  002F30                     l1160:
 16147  002F30  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 16148  002F34  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16149  002F38  0012               	return		;funcret
 16150  002F3A                     __end_of___lwdiv:
 16151                           	callstack 0
 16152                           
 16153 ;; *************** function _EEPROM_Write *****************
 16154 ;; Defined at:
 16155 ;;		line 9 in file "24LC256.c"
 16156 ;; Parameters:    Size  Location     Type
 16157 ;;  add             2    7[COMRAM] unsigned int 
 16158 ;;  data            1    9[COMRAM] unsigned char 
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;		None
 16161 ;; Return value:  Size  Location     Type
 16162 ;;                  1    wreg      void 
 16163 ;; Registers used:
 16164 ;;		wreg, status,2, cstack
 16165 ;; Tracked objects:
 16166 ;;		On entry : 0/0
 16167 ;;		On exit  : 0/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16170 ;;      Params:         3       0       0       0       0       0       0       0       0
 16171 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16172 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16173 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16174 ;;Total ram usage:        4 bytes
 16175 ;; Hardware stack levels used: 1
 16176 ;; Hardware stack levels required when called: 4
 16177 ;; This function calls:
 16178 ;;		_I2C_Send
 16179 ;;		_I2C_Start
 16180 ;;		_I2C_Stop
 16181 ;; This function is called by:
 16182 ;;		_main
 16183 ;;		_EEPROM_setRegistro
 16184 ;;		_Guarda_ID
 16185 ;; This function uses a non-reentrant model
 16186 ;;
 16187                           
 16188                           	psect	text80
 16189  00381A                     __ptext80:
 16190                           	callstack 0
 16191  00381A                     _EEPROM_Write:
 16192                           	callstack 25
 16193  00381A  EC78  F01D         	call	_I2C_Start	;wreg free
 16194  00381E  0EA0               	movlw	160
 16195  003820  EC35  F01D         	call	_I2C_Send
 16196  003824  5009               	movf	(EEPROM_Write@add+1)^0,w,c
 16197  003826  EC35  F01D         	call	_I2C_Send
 16198  00382A  5008               	movf	EEPROM_Write@add^0,w,c
 16199  00382C  EC35  F01D         	call	_I2C_Send
 16200  003830  500A               	movf	EEPROM_Write@data^0,w,c
 16201  003832  EC35  F01D         	call	_I2C_Send
 16202  003836  EC8A  F01D         	call	_I2C_Stop	;wreg free
 16203  00383A  0E0D               	movlw	13
 16204  00383C  6E0B               	movwf	??_EEPROM_Write^0,c
 16205  00383E  0EFC               	movlw	252
 16206  003840                     u5637:
 16207  003840  2EE8               	decfsz	wreg,f,c
 16208  003842  D7FE               	bra	u5637
 16209  003844  2E0B               	decfsz	??_EEPROM_Write^0,f,c
 16210  003846  D7FC               	bra	u5637
 16211  003848  0012               	return		;funcret
 16212  00384A                     __end_of_EEPROM_Write:
 16213                           	callstack 0
 16214                           
 16215 ;; *************** function _EEPROM_getRegistro *****************
 16216 ;; Defined at:
 16217 ;;		line 31 in file "24LC256.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;		None
 16220 ;; Auto vars:     Size  Location     Type
 16221 ;;  registro        2   14[COMRAM] unsigned int 
 16222 ;; Return value:  Size  Location     Type
 16223 ;;                  2    9[COMRAM] unsigned int 
 16224 ;; Registers used:
 16225 ;;		wreg, status,2, status,0, cstack
 16226 ;; Tracked objects:
 16227 ;;		On entry : 0/0
 16228 ;;		On exit  : 0/0
 16229 ;;		Unchanged: 0/0
 16230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16231 ;;      Params:         2       0       0       0       0       0       0       0       0
 16232 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16233 ;;      Temps:          3       0       0       0       0       0       0       0       0
 16234 ;;      Totals:         7       0       0       0       0       0       0       0       0
 16235 ;;Total ram usage:        7 bytes
 16236 ;; Hardware stack levels used: 1
 16237 ;; Hardware stack levels required when called: 5
 16238 ;; This function calls:
 16239 ;;		_EEPROM_Read
 16240 ;; This function is called by:
 16241 ;;		_main
 16242 ;;		_CHECK_TAG
 16243 ;;		_Guarda_ID
 16244 ;;		_Registro_busqueda
 16245 ;; This function uses a non-reentrant model
 16246 ;;
 16247                           
 16248                           	psect	text81
 16249  00377A                     __ptext81:
 16250                           	callstack 0
 16251  00377A                     _EEPROM_getRegistro:
 16252                           	callstack 25
 16253  00377A  0E00               	movlw	0
 16254  00377C  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 16255  00377E  0E02               	movlw	2
 16256  003780  6E07               	movwf	EEPROM_Read@add^0,c
 16257  003782  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 16258  003786  6E0C               	movwf	??_EEPROM_getRegistro^0,c
 16259  003788  500C               	movf	??_EEPROM_getRegistro^0,w,c
 16260  00378A  6E0F               	movwf	EEPROM_getRegistro@registro^0,c
 16261  00378C  6A10               	clrf	(EEPROM_getRegistro@registro+1)^0,c
 16262  00378E  0E00               	movlw	0
 16263  003790  6E08               	movwf	(EEPROM_Read@add+1)^0,c
 16264  003792  0E03               	movlw	3
 16265  003794  6E07               	movwf	EEPROM_Read@add^0,c
 16266  003796  EC3B  F01C         	call	_EEPROM_Read	;wreg free
 16267  00379A  6E0C               	movwf	??_EEPROM_getRegistro^0,c
 16268  00379C  500F               	movf	EEPROM_getRegistro@registro^0,w,c
 16269  00379E  6E0D               	movwf	(??_EEPROM_getRegistro+1)^0,c
 16270  0037A0  500C               	movf	??_EEPROM_getRegistro^0,w,c
 16271  0037A2  6E0F               	movwf	EEPROM_getRegistro@registro^0,c
 16272  0037A4  C00D  F010         	movff	??_EEPROM_getRegistro+1,EEPROM_getRegistro@registro+1
 16273  0037A8  C00F  F00A         	movff	EEPROM_getRegistro@registro,?_EEPROM_getRegistro
 16274  0037AC  C010  F00B         	movff	EEPROM_getRegistro@registro+1,?_EEPROM_getRegistro+1
 16275  0037B0  0012               	return		;funcret
 16276  0037B2                     __end_of_EEPROM_getRegistro:
 16277                           	callstack 0
 16278                           
 16279 ;; *************** function _EEPROM_Read *****************
 16280 ;; Defined at:
 16281 ;;		line 19 in file "24LC256.c"
 16282 ;; Parameters:    Size  Location     Type
 16283 ;;  add             2    6[COMRAM] unsigned int 
 16284 ;; Auto vars:     Size  Location     Type
 16285 ;;  temp            1    8[COMRAM] unsigned char 
 16286 ;; Return value:  Size  Location     Type
 16287 ;;                  1    wreg      unsigned char 
 16288 ;; Registers used:
 16289 ;;		wreg, status,2, cstack
 16290 ;; Tracked objects:
 16291 ;;		On entry : 0/0
 16292 ;;		On exit  : 0/0
 16293 ;;		Unchanged: 0/0
 16294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16295 ;;      Params:         2       0       0       0       0       0       0       0       0
 16296 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16297 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16298 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16299 ;;Total ram usage:        3 bytes
 16300 ;; Hardware stack levels used: 1
 16301 ;; Hardware stack levels required when called: 4
 16302 ;; This function calls:
 16303 ;;		_I2C_Read
 16304 ;;		_I2C_Restart
 16305 ;;		_I2C_Send
 16306 ;;		_I2C_Start
 16307 ;; This function is called by:
 16308 ;;		_main
 16309 ;;		_EEPROM_getRegistro
 16310 ;;		_Muestra_ID
 16311 ;;		_Registro_busqueda
 16312 ;; This function uses a non-reentrant model
 16313 ;;
 16314                           
 16315                           	psect	text82
 16316  003876                     __ptext82:
 16317                           	callstack 0
 16318  003876                     _EEPROM_Read:
 16319                           	callstack 25
 16320  003876  EC78  F01D         	call	_I2C_Start	;wreg free
 16321  00387A  0EA0               	movlw	160
 16322  00387C  EC35  F01D         	call	_I2C_Send
 16323  003880  5008               	movf	(EEPROM_Read@add+1)^0,w,c
 16324  003882  EC35  F01D         	call	_I2C_Send
 16325  003886  5007               	movf	EEPROM_Read@add^0,w,c
 16326  003888  EC35  F01D         	call	_I2C_Send
 16327  00388C  EC81  F01D         	call	_I2C_Restart	;wreg free
 16328  003890  0EA1               	movlw	161
 16329  003892  EC35  F01D         	call	_I2C_Send
 16330  003896  ECF4  F01B         	call	_I2C_Read	;wreg free
 16331  00389A  6E09               	movwf	EEPROM_Read@temp^0,c
 16332  00389C  5009               	movf	EEPROM_Read@temp^0,w,c
 16333  00389E  0012               	return		;funcret
 16334  0038A0                     __end_of_EEPROM_Read:
 16335                           	callstack 0
 16336                           
 16337 ;; *************** function _I2C_Start *****************
 16338 ;; Defined at:
 16339 ;;		line 37 in file "i2c.c"
 16340 ;; Parameters:    Size  Location     Type
 16341 ;;		None
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;		None
 16344 ;; Return value:  Size  Location     Type
 16345 ;;                  1    wreg      void 
 16346 ;; Registers used:
 16347 ;;		None
 16348 ;; Tracked objects:
 16349 ;;		On entry : 0/0
 16350 ;;		On exit  : 0/0
 16351 ;;		Unchanged: 0/0
 16352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16353 ;;      Params:         0       0       0       0       0       0       0       0       0
 16354 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16355 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16356 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16357 ;;Total ram usage:        0 bytes
 16358 ;; Hardware stack levels used: 1
 16359 ;; Hardware stack levels required when called: 1
 16360 ;; This function calls:
 16361 ;;		Nothing
 16362 ;; This function is called by:
 16363 ;;		_ssd1306_command
 16364 ;;		_OLED_NPuts
 16365 ;;		_OLED_SPuts
 16366 ;;		_OLEDClear
 16367 ;;		_EEPROM_Write
 16368 ;;		_EEPROM_Read
 16369 ;; This function uses a non-reentrant model
 16370 ;;
 16371                           
 16372                           	psect	text83
 16373  003AF0                     __ptext83:
 16374                           	callstack 0
 16375  003AF0                     _I2C_Start:
 16376                           	callstack 24
 16377  003AF0                     
 16378                           ;i2c.c: 40:   SSPCON2bits.SEN = 1;
 16379  003AF0  80C5               	bsf	197,0,c	;volatile
 16380  003AF2                     l349:
 16381                           
 16382                           ;i2c.c: 42:   while (SSPCON2bits.SEN == 1)
 16383  003AF2  B0C5               	btfsc	197,0,c	;volatile
 16384  003AF4  EF7E  F01D         	goto	u3061
 16385  003AF8  EF80  F01D         	goto	u3060
 16386  003AFC                     u3061:
 16387  003AFC  EF79  F01D         	goto	l349
 16388  003B00                     u3060:
 16389  003B00  0012               	return		;funcret
 16390  003B02                     __end_of_I2C_Start:
 16391                           	callstack 0
 16392                           
 16393 ;; *************** function _I2C_Send *****************
 16394 ;; Defined at:
 16395 ;;		line 88 in file "i2c.c"
 16396 ;; Parameters:    Size  Location     Type
 16397 ;;  data            1    wreg     unsigned char 
 16398 ;; Auto vars:     Size  Location     Type
 16399 ;;  data            1    0[COMRAM] unsigned char 
 16400 ;; Return value:  Size  Location     Type
 16401 ;;                  1    wreg      void 
 16402 ;; Registers used:
 16403 ;;		wreg, cstack
 16404 ;; Tracked objects:
 16405 ;;		On entry : 0/0
 16406 ;;		On exit  : 0/0
 16407 ;;		Unchanged: 0/0
 16408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16409 ;;      Params:         0       0       0       0       0       0       0       0       0
 16410 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16411 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16412 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16413 ;;Total ram usage:        1 bytes
 16414 ;; Hardware stack levels used: 1
 16415 ;; Hardware stack levels required when called: 3
 16416 ;; This function calls:
 16417 ;;		_I2C_Wait
 16418 ;; This function is called by:
 16419 ;;		_ssd1306_command
 16420 ;;		_OLED_NPuts
 16421 ;;		_OLED_SPuts
 16422 ;;		_OLEDClear
 16423 ;;		_EEPROM_Write
 16424 ;;		_EEPROM_Read
 16425 ;; This function uses a non-reentrant model
 16426 ;;
 16427                           
 16428                           	psect	text84
 16429  003A6A                     __ptext84:
 16430                           	callstack 0
 16431  003A6A                     _I2C_Send:
 16432                           	callstack 22
 16433                           
 16434                           ;incstack = 0
 16435                           ;I2C_Send@data stored from wreg
 16436  003A6A  6E01               	movwf	I2C_Send@data^0,c
 16437  003A6C                     
 16438                           ;i2c.c: 88: void I2C_Send( unsigned char data );i2c.c: 89: {;i2c.c: 90:   SSPBUF = data;
 16439  003A6C  C001  FFC9         	movff	I2C_Send@data,4041	;volatile
 16440  003A70                     l374:
 16441  003A70  B0C7               	btfsc	199,0,c	;volatile
 16442  003A72  EF3D  F01D         	goto	u3071
 16443  003A76  EF3F  F01D         	goto	u3070
 16444  003A7A                     u3071:
 16445  003A7A  EF38  F01D         	goto	l374
 16446  003A7E                     u3070:
 16447  003A7E                     
 16448                           ;i2c.c: 92:   I2C_Wait();
 16449  003A7E  ECED  F01C         	call	_I2C_Wait	;wreg free
 16450  003A82  0012               	return		;funcret
 16451  003A84                     __end_of_I2C_Send:
 16452                           	callstack 0
 16453                           
 16454 ;; *************** function _I2C_Restart *****************
 16455 ;; Defined at:
 16456 ;;		line 49 in file "i2c.c"
 16457 ;; Parameters:    Size  Location     Type
 16458 ;;		None
 16459 ;; Auto vars:     Size  Location     Type
 16460 ;;		None
 16461 ;; Return value:  Size  Location     Type
 16462 ;;                  1    wreg      void 
 16463 ;; Registers used:
 16464 ;;		None
 16465 ;; Tracked objects:
 16466 ;;		On entry : 0/0
 16467 ;;		On exit  : 0/0
 16468 ;;		Unchanged: 0/0
 16469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16470 ;;      Params:         0       0       0       0       0       0       0       0       0
 16471 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16472 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16473 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16474 ;;Total ram usage:        0 bytes
 16475 ;; Hardware stack levels used: 1
 16476 ;; Hardware stack levels required when called: 1
 16477 ;; This function calls:
 16478 ;;		Nothing
 16479 ;; This function is called by:
 16480 ;;		_EEPROM_Read
 16481 ;; This function uses a non-reentrant model
 16482 ;;
 16483                           
 16484                           	psect	text85
 16485  003B02                     __ptext85:
 16486                           	callstack 0
 16487  003B02                     _I2C_Restart:
 16488                           	callstack 27
 16489  003B02                     
 16490                           ;i2c.c: 52:   SSPCON2bits.RSEN = 1;
 16491  003B02  82C5               	bsf	197,1,c	;volatile
 16492  003B04                     l355:
 16493                           
 16494                           ;i2c.c: 54:   while (SSPCON2bits.RSEN == 1)
 16495  003B04  B2C5               	btfsc	197,1,c	;volatile
 16496  003B06  EF87  F01D         	goto	u3311
 16497  003B0A  EF89  F01D         	goto	u3310
 16498  003B0E                     u3311:
 16499  003B0E  EF82  F01D         	goto	l355
 16500  003B12                     u3310:
 16501  003B12  0012               	return		;funcret
 16502  003B14                     __end_of_I2C_Restart:
 16503                           	callstack 0
 16504                           
 16505 ;; *************** function _I2C_Read *****************
 16506 ;; Defined at:
 16507 ;;		line 99 in file "i2c.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;		None
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;  temp            1    0[COMRAM] unsigned char 
 16512 ;; Return value:  Size  Location     Type
 16513 ;;                  1    wreg      unsigned char 
 16514 ;; Registers used:
 16515 ;;		wreg, status,2, cstack
 16516 ;; Tracked objects:
 16517 ;;		On entry : 0/0
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16521 ;;      Params:         0       0       0       0       0       0       0       0       0
 16522 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16523 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16524 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16525 ;;Total ram usage:        1 bytes
 16526 ;; Hardware stack levels used: 1
 16527 ;; Hardware stack levels required when called: 3
 16528 ;; This function calls:
 16529 ;;		_I2C_Stop
 16530 ;;		_I2C_Wait
 16531 ;; This function is called by:
 16532 ;;		_EEPROM_Read
 16533 ;; This function uses a non-reentrant model
 16534 ;;
 16535                           
 16536                           	psect	text86
 16537  0037E8                     __ptext86:
 16538                           	callstack 0
 16539  0037E8                     _I2C_Read:
 16540                           	callstack 25
 16541  0037E8                     
 16542                           ;i2c.c: 101:   unsigned char temp;;i2c.c: 102:   SSPCON2bits.RCEN = 1;
 16543  0037E8  86C5               	bsf	197,3,c	;volatile
 16544  0037EA                     l380:
 16545                           
 16546                           ;i2c.c: 103:   while(SSPSTATbits.BF == 0)
 16547  0037EA  A0C7               	btfss	199,0,c	;volatile
 16548  0037EC  EFFA  F01B         	goto	u3321
 16549  0037F0  EFFC  F01B         	goto	u3320
 16550  0037F4                     u3321:
 16551  0037F4  EFF5  F01B         	goto	l380
 16552  0037F8                     u3320:
 16553  0037F8                     
 16554                           ;i2c.c: 105:   temp = SSPBUF;
 16555  0037F8  CFC9 F001          	movff	4041,I2C_Read@temp	;volatile
 16556  0037FC                     
 16557                           ;i2c.c: 106:   I2C_Wait();
 16558  0037FC  ECED  F01C         	call	_I2C_Wait	;wreg free
 16559  003800                     
 16560                           ;i2c.c: 107:   SSPCON2bits.ACKDT=1;
 16561  003800  8AC5               	bsf	197,5,c	;volatile
 16562  003802                     
 16563                           ;i2c.c: 108:   SSPCON2bits.ACKEN=1;
 16564  003802  88C5               	bsf	197,4,c	;volatile
 16565  003804                     l383:
 16566                           
 16567                           ;i2c.c: 109:   while(SSPCON2bits.ACKEN == 1)
 16568  003804  B8C5               	btfsc	197,4,c	;volatile
 16569  003806  EF07  F01C         	goto	u3331
 16570  00380A  EF09  F01C         	goto	u3330
 16571  00380E                     u3331:
 16572  00380E  EF02  F01C         	goto	l383
 16573  003812                     u3330:
 16574  003812                     
 16575                           ;i2c.c: 111:   I2C_Stop();
 16576  003812  EC8A  F01D         	call	_I2C_Stop	;wreg free
 16577  003816                     
 16578                           ;i2c.c: 112:   return temp;
 16579  003816  5001               	movf	I2C_Read@temp^0,w,c
 16580  003818  0012               	return		;funcret
 16581  00381A                     __end_of_I2C_Read:
 16582                           	callstack 0
 16583                           
 16584 ;; *************** function _I2C_Wait *****************
 16585 ;; Defined at:
 16586 ;;		line 72 in file "i2c.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;		None
 16589 ;; Auto vars:     Size  Location     Type
 16590 ;;		None
 16591 ;; Return value:  Size  Location     Type
 16592 ;;                  1    wreg      void 
 16593 ;; Registers used:
 16594 ;;		cstack
 16595 ;; Tracked objects:
 16596 ;;		On entry : 0/0
 16597 ;;		On exit  : 0/0
 16598 ;;		Unchanged: 0/0
 16599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16600 ;;      Params:         0       0       0       0       0       0       0       0       0
 16601 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16603 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16604 ;;Total ram usage:        0 bytes
 16605 ;; Hardware stack levels used: 1
 16606 ;; Hardware stack levels required when called: 2
 16607 ;; This function calls:
 16608 ;;		_I2C_Stop
 16609 ;; This function is called by:
 16610 ;;		_I2C_Send
 16611 ;;		_I2C_Read
 16612 ;; This function uses a non-reentrant model
 16613 ;;
 16614                           
 16615                           	psect	text87
 16616  0039DA                     __ptext87:
 16617                           	callstack 0
 16618  0039DA                     _I2C_Wait:
 16619                           	callstack 22
 16620  0039DA                     l367:
 16621                           
 16622                           ;i2c.c: 75:   while( SSPSTATbits.R_NOT_W == 1 )
 16623  0039DA  B4C7               	btfsc	199,2,c	;volatile
 16624  0039DC  EFF2  F01C         	goto	u2861
 16625  0039E0  EFF4  F01C         	goto	u2860
 16626  0039E4                     u2861:
 16627  0039E4  EFED  F01C         	goto	l367
 16628  0039E8                     u2860:
 16629  0039E8                     
 16630                           ;i2c.c: 78:   if( SSPCON2bits.ACKSTAT == 1 )
 16631  0039E8  ACC5               	btfss	197,6,c	;volatile
 16632  0039EA  EFF9  F01C         	goto	u2871
 16633  0039EE  EFFB  F01C         	goto	u2870
 16634  0039F2                     u2871:
 16635  0039F2  EFFD  F01C         	goto	l371
 16636  0039F6                     u2870:
 16637  0039F6                     
 16638                           ;i2c.c: 79:   {;i2c.c: 80:     I2C_Stop();
 16639  0039F6  EC8A  F01D         	call	_I2C_Stop	;wreg free
 16640  0039FA                     l371:
 16641  0039FA  0012               	return		;funcret
 16642  0039FC                     __end_of_I2C_Wait:
 16643                           	callstack 0
 16644                           
 16645 ;; *************** function _I2C_Stop *****************
 16646 ;; Defined at:
 16647 ;;		line 61 in file "i2c.c"
 16648 ;; Parameters:    Size  Location     Type
 16649 ;;		None
 16650 ;; Auto vars:     Size  Location     Type
 16651 ;;		None
 16652 ;; Return value:  Size  Location     Type
 16653 ;;                  1    wreg      void 
 16654 ;; Registers used:
 16655 ;;		None
 16656 ;; Tracked objects:
 16657 ;;		On entry : 0/0
 16658 ;;		On exit  : 0/0
 16659 ;;		Unchanged: 0/0
 16660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16661 ;;      Params:         0       0       0       0       0       0       0       0       0
 16662 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16663 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16664 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16665 ;;Total ram usage:        0 bytes
 16666 ;; Hardware stack levels used: 1
 16667 ;; Hardware stack levels required when called: 1
 16668 ;; This function calls:
 16669 ;;		Nothing
 16670 ;; This function is called by:
 16671 ;;		_ssd1306_command
 16672 ;;		_OLED_Init
 16673 ;;		_OLED_NPuts
 16674 ;;		_OLED_SPuts
 16675 ;;		_OLEDClear
 16676 ;;		_I2C_Wait
 16677 ;;		_I2C_Read
 16678 ;;		_EEPROM_Write
 16679 ;; This function uses a non-reentrant model
 16680 ;;
 16681                           
 16682                           	psect	text88
 16683  003B14                     __ptext88:
 16684                           	callstack 0
 16685  003B14                     _I2C_Stop:
 16686                           	callstack 24
 16687  003B14                     
 16688                           ;i2c.c: 64:   SSPCON2bits.PEN=1;
 16689  003B14  84C5               	bsf	197,2,c	;volatile
 16690  003B16                     l361:
 16691                           
 16692                           ;i2c.c: 65:   while(SSPCON2bits.PEN==1)
 16693  003B16  B4C5               	btfsc	197,2,c	;volatile
 16694  003B18  EF90  F01D         	goto	u2831
 16695  003B1C  EF92  F01D         	goto	u2830
 16696  003B20                     u2831:
 16697  003B20  EF8B  F01D         	goto	l361
 16698  003B24                     u2830:
 16699  003B24  0012               	return		;funcret
 16700  003B26                     __end_of_I2C_Stop:
 16701                           	callstack 0
 16702                           
 16703 ;; *************** function _scr *****************
 16704 ;; Defined at:
 16705 ;;		line 71 in file "main.c"
 16706 ;; Parameters:    Size  Location     Type
 16707 ;;		None
 16708 ;; Auto vars:     Size  Location     Type
 16709 ;;		None
 16710 ;; Return value:  Size  Location     Type
 16711 ;;                  1    wreg      void 
 16712 ;; Registers used:
 16713 ;;		wreg, status,2, status,0
 16714 ;; Tracked objects:
 16715 ;;		On entry : 0/0
 16716 ;;		On exit  : 0/0
 16717 ;;		Unchanged: 0/0
 16718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16719 ;;      Params:         0       0       0       0       0       0       0       0       0
 16720 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16721 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16722 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16723 ;;Total ram usage:        0 bytes
 16724 ;; Hardware stack levels used: 1
 16725 ;; This function calls:
 16726 ;;		Nothing
 16727 ;; This function is called by:
 16728 ;;		Interrupt level 2
 16729 ;; This function uses a non-reentrant model
 16730 ;;
 16731                           
 16732                           	psect	intcode
 16733  000008                     __pintcode:
 16734                           	callstack 0
 16735  000008                     _scr:
 16736                           	callstack 20
 16737                           
 16738                           ;incstack = 0
 16739  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16740  00000A  EDE5  F01A         	call	int_func,f	;refresh shadow registers
 16741                           
 16742                           	psect	intcode_body
 16743  0035CA                     __pintcode_body:
 16744                           	callstack 20
 16745  0035CA                     int_func:
 16746                           	callstack 20
 16747  0035CA  0006               	pop		; remove dummy address from shadow register refresh
 16748  0035CC                     
 16749                           ;main.c: 72:     if(PIR1bits.TMR1IF){
 16750  0035CC  A09E               	btfss	158,0,c	;volatile
 16751  0035CE  EFEB  F01A         	goto	i2u552_41
 16752  0035D2  EFED  F01A         	goto	i2u552_40
 16753  0035D6                     i2u552_41:
 16754  0035D6  EF06  F01B         	goto	i2l159
 16755  0035DA                     i2u552_40:
 16756  0035DA                     
 16757                           ;main.c: 73:         contador_t1++;
 16758  0035DA  0100               	movlb	0	; () banked
 16759  0035DC  4B9C               	infsnz	_contador_t1& (0+255),f,b
 16760  0035DE  2B9D               	incf	(_contador_t1+1)& (0+255),f,b
 16761  0035E0                     
 16762                           ; BSR set to: 0
 16763                           ;main.c: 74:         if(contador_t1>=2){
 16764  0035E0  519D               	movf	(_contador_t1+1)& (0+255),w,b
 16765  0035E2  E109               	bnz	i2u553_40
 16766  0035E4  0E02               	movlw	2
 16767  0035E6  5D9C               	subwf	_contador_t1& (0+255),w,b
 16768  0035E8  A0D8               	btfss	status,0,c
 16769  0035EA  EFF9  F01A         	goto	i2u553_41
 16770  0035EE  EFFB  F01A         	goto	i2u553_40
 16771  0035F2                     i2u553_41:
 16772  0035F2  EF01  F01B         	goto	i2l158
 16773  0035F6                     i2u553_40:
 16774  0035F6                     
 16775                           ; BSR set to: 0
 16776                           ;main.c: 75:             flag_t1 = 1;
 16777  0035F6  0E01               	movlw	1
 16778  0035F8  6FA0               	movwf	_flag_t1& (0+255),b
 16779                           
 16780                           ;main.c: 76:             contador_t1 = 0;
 16781  0035FA  0E00               	movlw	0
 16782  0035FC  6F9D               	movwf	(_contador_t1+1)& (0+255),b
 16783  0035FE  0E00               	movlw	0
 16784  003600  6F9C               	movwf	_contador_t1& (0+255),b
 16785  003602                     i2l158:
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;main.c: 78:         TMR1 = 5553;
 16789  003602  0E15               	movlw	21
 16790  003604  6ECF               	movwf	207,c	;volatile
 16791  003606  0EB1               	movlw	177
 16792  003608  6ECE               	movwf	206,c	;volatile
 16793  00360A                     
 16794                           ; BSR set to: 0
 16795                           ;main.c: 79:         PIR1bits.TMR1IF = 0;
 16796  00360A  909E               	bcf	158,0,c	;volatile
 16797  00360C                     i2l159:
 16798  00360C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16799  00360E  0011               	retfie		f
 16800  003610                     __end_of_scr:
 16801                           	callstack 0
 16802                           
 16803                           	psect	rparam
 16804  0000                     
 16805                           	psect	temp
 16806  00005F                     btemp:
 16807                           	callstack 0
 16808  00005F                     	ds	1
 16809  0000                     int$flags	set	btemp
 16810  0000                     wtemp8	set	btemp+1
 16811  0000                     ttemp5	set	btemp+1
 16812  0000                     ttemp6	set	btemp+4
 16813  0000                     ttemp7	set	btemp+8
 16814                           
 16815                           	psect	idloc
 16816                           
 16817                           ;Config register IDLOC0 @ 0x200000
 16818                           ;	unspecified, using default values
 16819  200000                     	org	2097152
 16820  200000  FF                 	db	255
 16821                           
 16822                           ;Config register IDLOC1 @ 0x200001
 16823                           ;	unspecified, using default values
 16824  200001                     	org	2097153
 16825  200001  FF                 	db	255
 16826                           
 16827                           ;Config register IDLOC2 @ 0x200002
 16828                           ;	unspecified, using default values
 16829  200002                     	org	2097154
 16830  200002  FF                 	db	255
 16831                           
 16832                           ;Config register IDLOC3 @ 0x200003
 16833                           ;	unspecified, using default values
 16834  200003                     	org	2097155
 16835  200003  FF                 	db	255
 16836                           
 16837                           ;Config register IDLOC4 @ 0x200004
 16838                           ;	unspecified, using default values
 16839  200004                     	org	2097156
 16840  200004  FF                 	db	255
 16841                           
 16842                           ;Config register IDLOC5 @ 0x200005
 16843                           ;	unspecified, using default values
 16844  200005                     	org	2097157
 16845  200005  FF                 	db	255
 16846                           
 16847                           ;Config register IDLOC6 @ 0x200006
 16848                           ;	unspecified, using default values
 16849  200006                     	org	2097158
 16850  200006  FF                 	db	255
 16851                           
 16852                           ;Config register IDLOC7 @ 0x200007
 16853                           ;	unspecified, using default values
 16854  200007                     	org	2097159
 16855  200007  FF                 	db	255
 16856                           
 16857                           	psect	config
 16858                           
 16859                           ;Config register CONFIG1L @ 0x300000
 16860                           ;	PLL Prescaler Selection bits
 16861                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
 16862                           ;	System Clock Postscaler Selection bits
 16863                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 16864                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 16865                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 16866  300000                     	org	3145728
 16867  300000  01                 	db	1
 16868                           
 16869                           ;Config register CONFIG1H @ 0x300001
 16870                           ;	Oscillator Selection bits
 16871                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
 16872                           ;	Fail-Safe Clock Monitor Enable bit
 16873                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16874                           ;	Internal/External Oscillator Switchover bit
 16875                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16876  300001                     	org	3145729
 16877  300001  0E                 	db	14
 16878                           
 16879                           ;Config register CONFIG2L @ 0x300002
 16880                           ;	Power-up Timer Enable bit
 16881                           ;	PWRT = OFF, PWRT disabled
 16882                           ;	Brown-out Reset Enable bits
 16883                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 16884                           ;	Brown-out Reset Voltage bits
 16885                           ;	BORV = 3, Minimum setting 2.05V
 16886                           ;	USB Voltage Regulator Enable bit
 16887                           ;	VREGEN = OFF, USB voltage regulator disabled
 16888  300002                     	org	3145730
 16889  300002  19                 	db	25
 16890                           
 16891                           ;Config register CONFIG2H @ 0x300003
 16892                           ;	Watchdog Timer Enable bit
 16893                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16894                           ;	Watchdog Timer Postscale Select bits
 16895                           ;	WDTPS = 32768, 1:32768
 16896  300003                     	org	3145731
 16897  300003  1E                 	db	30
 16898                           
 16899                           ; Padding undefined space
 16900  300004                     	org	3145732
 16901  300004  FF                 	db	255
 16902                           
 16903                           ;Config register CONFIG3H @ 0x300005
 16904                           ;	CCP2 MUX bit
 16905                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
 16906                           ;	PORTB A/D Enable bit
 16907                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 16908                           ;	Low-Power Timer 1 Oscillator Enable bit
 16909                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 16910                           ;	MCLR Pin Enable bit
 16911                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
 16912  300005                     	org	3145733
 16913  300005  00                 	db	0
 16914                           
 16915                           ;Config register CONFIG4L @ 0x300006
 16916                           ;	Stack Full/Underflow Reset Enable bit
 16917                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 16918                           ;	Single-Supply ICSP Enable bit
 16919                           ;	LVP = OFF, Single-Supply ICSP disabled
 16920                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 16921                           ;	ICPRT = OFF, ICPORT disabled
 16922                           ;	Extended Instruction Set Enable bit
 16923                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16924                           ;	Background Debugger Enable bit
 16925                           ;	DEBUG = 0x1, unprogrammed default
 16926  300006                     	org	3145734
 16927  300006  80                 	db	128
 16928                           
 16929                           ; Padding undefined space
 16930  300007                     	org	3145735
 16931  300007  FF                 	db	255
 16932                           
 16933                           ;Config register CONFIG5L @ 0x300008
 16934                           ;	Code Protection bit
 16935                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 16936                           ;	Code Protection bit
 16937                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 16938                           ;	Code Protection bit
 16939                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 16940                           ;	Code Protection bit
 16941                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 16942  300008                     	org	3145736
 16943  300008  0F                 	db	15
 16944                           
 16945                           ;Config register CONFIG5H @ 0x300009
 16946                           ;	Boot Block Code Protection bit
 16947                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 16948                           ;	Data EEPROM Code Protection bit
 16949                           ;	CPD = OFF, Data EEPROM is not code-protected
 16950  300009                     	org	3145737
 16951  300009  C0                 	db	192
 16952                           
 16953                           ;Config register CONFIG6L @ 0x30000A
 16954                           ;	Write Protection bit
 16955                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 16956                           ;	Write Protection bit
 16957                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 16958                           ;	Write Protection bit
 16959                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 16960                           ;	Write Protection bit
 16961                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 16962  30000A                     	org	3145738
 16963  30000A  0F                 	db	15
 16964                           
 16965                           ;Config register CONFIG6H @ 0x30000B
 16966                           ;	Configuration Register Write Protection bit
 16967                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 16968                           ;	Boot Block Write Protection bit
 16969                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 16970                           ;	Data EEPROM Write Protection bit
 16971                           ;	WRTD = OFF, Data EEPROM is not write-protected
 16972  30000B                     	org	3145739
 16973  30000B  E0                 	db	224
 16974                           
 16975                           ;Config register CONFIG7L @ 0x30000C
 16976                           ;	Table Read Protection bit
 16977                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 16978                           ;	Table Read Protection bit
 16979                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 16980                           ;	Table Read Protection bit
 16981                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 16982                           ;	Table Read Protection bit
 16983                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 16984  30000C                     	org	3145740
 16985  30000C  0F                 	db	15
 16986                           
 16987                           ;Config register CONFIG7H @ 0x30000D
 16988                           ;	Boot Block Table Read Protection bit
 16989                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 16990  30000D                     	org	3145741
 16991  30000D  40                 	db	64
 16992                           tosu	equ	0xFFF
 16993                           tosh	equ	0xFFE
 16994                           tosl	equ	0xFFD
 16995                           stkptr	equ	0xFFC
 16996                           pclatu	equ	0xFFB
 16997                           pclath	equ	0xFFA
 16998                           pcl	equ	0xFF9
 16999                           tblptru	equ	0xFF8
 17000                           tblptrh	equ	0xFF7
 17001                           tblptrl	equ	0xFF6
 17002                           tablat	equ	0xFF5
 17003                           prodh	equ	0xFF4
 17004                           prodl	equ	0xFF3
 17005                           indf0	equ	0xFEF
 17006                           postinc0	equ	0xFEE
 17007                           postdec0	equ	0xFED
 17008                           preinc0	equ	0xFEC
 17009                           plusw0	equ	0xFEB
 17010                           fsr0h	equ	0xFEA
 17011                           fsr0l	equ	0xFE9
 17012                           wreg	equ	0xFE8
 17013                           indf1	equ	0xFE7
 17014                           postinc1	equ	0xFE6
 17015                           postdec1	equ	0xFE5
 17016                           preinc1	equ	0xFE4
 17017                           plusw1	equ	0xFE3
 17018                           fsr1h	equ	0xFE2
 17019                           fsr1l	equ	0xFE1
 17020                           bsr	equ	0xFE0
 17021                           indf2	equ	0xFDF
 17022                           postinc2	equ	0xFDE
 17023                           postdec2	equ	0xFDD
 17024                           preinc2	equ	0xFDC
 17025                           plusw2	equ	0xFDB
 17026                           fsr2h	equ	0xFDA
 17027                           fsr2l	equ	0xFD9
 17028                           status	equ	0xFD8

Data Sizes:
    Strings     113
    Constant    3903
    Data        11
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     18     150
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> sms(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[3]), STR_18(CODE[5]), STR_17(CODE[6]), STR_16(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[6]), STR_4(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[3]), STR_18(CODE[5]), STR_17(CODE[6]), STR_16(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[6]), STR_4(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[3]), STR_18(CODE[5]), STR_17(CODE[6]), STR_16(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[6]), STR_4(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> sms(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1944_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> sms(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> sms(BANK0[10]), 

    MFRC522_Clear_UID@u_i	PTR unsigned char  size(2) Largest target is 10
		 -> UID(BANK0[10]), 

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(2) Largest target is 10
		 -> UID(BANK0[10]), 

    MFRC522_isCard@TagType	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 10
		 -> UID(BANK0[10]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(2) Largest target is 4
		 -> MFRC522_Halt@buff(COMRAM[4]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(2) Largest target is 4
		 -> MFRC522_Halt@buff(COMRAM[4]), 

    MFRC522_Request@TagType	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), MFRC522_Halt@buff(COMRAM[4]), UID(BANK0[10]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), MFRC522_Halt@buff(COMRAM[4]), UID(BANK0[10]), 

    UART_Print@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> STR_19(CODE[5]), sms(BANK0[10]), 

    UART_Println@buffer	PTR unsigned char  size(2) Largest target is 29
		 -> STR_21(CODE[29]), sms(BANK0[10]), STR_1(CODE[7]), 

    OLED_SPuts@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> STR_15(CODE[5]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[4]), STR_10(CODE[5]), sms(BANK0[10]), STR_2(CODE[10]), 

    OLED_NPuts@buffer	PTR unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[18]), 

    TagType	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_CHECK_TAG
    _set_RTC->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _UART_Begin->___flge
    ___flsub->___fladd
    ___flge->___flsub
    _Print_config->_OLED_SPuts
    _OLED_SPuts->_OLEDsetCursor
    _OLED_NPuts->___wmul
    _OLEDClear->_OLEDsetCursor
    _OLEDsetCursor->_ssd1306_command
    _OLED_Init->_ssd1306_command
    _ssd1306_command->_I2C_Send
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _Registro_busqueda->_EEPROM_getRegistro
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _UART_Println->_UART_Write
    _UART_Print->_UART_Write
    _New_Line->_UART_Write
    _Font_Normal->_UART_Write
    _Font_Big->_UART_Write
    _Muestra_ID->_EEPROM_Read
    _MFRC522_isCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_Halt->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Set_Bit
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _Guarda_ID->_EEPROM_getRegistro
    _EEPROM_setRegistro->_EEPROM_Write
    _EEPROM_Write->___lwdiv
    _EEPROM_getRegistro->_EEPROM_Read
    _EEPROM_Read->___wmul

Critical Paths under _scr in COMRAM

    None.

Critical Paths under _main in BANK0

    _Print_Mes->_sprintf
    _Print_Dia->_sprintf
    _Print_Anio->_sprintf
    _Print_Segundo->_sprintf
    _Print_Minuto->_sprintf
    _Print_Hora->_sprintf
    _CHECK_TAG->_Print_Ticket
    _Print_Ticket->_sprintf

Critical Paths under _scr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _scr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _scr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _scr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _scr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _scr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _scr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _scr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  339443
                                             91 COMRAM     2     2      0
                          _CHECK_TAG
                        _EEPROM_Read
                       _EEPROM_Write
                 _EEPROM_getRegistro
                 _EEPROM_setRegistro
                       _MFRC522_Init
                          _OLED_Init
                         _Print_Menu
                        _Timer1_Init
                         _UART_Begin
                          _UART_Init
                       _UART_Println
                            _get_RTC
                            _get_key
 ---------------------------------------------------------------------------------
 (1) _get_key                                              2     2      0   85536
                                             87 COMRAM     2     2      0
                         _Print_Anio
                          _Print_Dia
                         _Print_Hora
                          _Print_Mes
                       _Print_Minuto
                       _Print_config
                            _set_RTC
 ---------------------------------------------------------------------------------
 (2) _set_RTC                                              1     1      0    3702
                                             11 COMRAM     1     1      0
                       _I2C_Start_DS
                        _I2C_Stop_DS
                       _I2C_Write_DS
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (3) _decimal_to_bcd                                       3     3      0    3680
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _get_RTC                                              0     0      0   93361
                        _I2C_Read_DS
              _I2C_Repeated_Start_DS
                       _I2C_Start_DS
                        _I2C_Stop_DS
                       _I2C_Write_DS
                         _Print_Anio
                          _Print_Dia
                         _Print_Hora
                          _Print_Mes
                       _Print_Minuto
                      _Print_Segundo
 ---------------------------------------------------------------------------------
 (2) _Print_Mes                                            0     0      0   15549
                         _OLED_SPuts
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Print_Dia                                            0     0      0   15549
                         _OLED_SPuts
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Print_Anio                                           0     0      0   15549
                         _OLED_SPuts
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_DS                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop_DS                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start_DS                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start_DS                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_DS                                          3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Begin                                          12     8      4    8293
                                             36 COMRAM    12     8      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2737
                                             16 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1703
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Print_Menu                                           0     0      0   60814
                          _OLEDClear
                         _OLED_NPuts
                         _OLED_SPuts
                      _OLEDsetCursor
                         _Print_Hora
                       _Print_Minuto
                      _Print_Segundo
                       _Print_config
 ---------------------------------------------------------------------------------
 (2) _Print_config                                         0     0      0    4089
                         _OLED_SPuts
 ---------------------------------------------------------------------------------
 (2) _Print_Segundo                                        0     0      0   15549
                         _OLED_SPuts
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Print_Minuto                                         0     0      0   15549
                         _OLED_SPuts
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Print_Hora                                           0     0      0   15549
                         _OLED_SPuts
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _OLED_SPuts                                          19    13      6    4089
                                              6 COMRAM    19    13      6
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                      _OLEDsetCursor
 ---------------------------------------------------------------------------------
 (2) _OLED_NPuts                                           9     7      2    4483
                                              6 COMRAM     9     7      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _OLEDClear                                            2     2      0     787
                                              6 COMRAM     2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                      _OLEDsetCursor
 ---------------------------------------------------------------------------------
 (4) _OLEDsetCursor                                        4     0      4     719
                                              2 COMRAM     4     0      4
                    _ssd1306_command
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0      89
                           _I2C_Init
                           _I2C_Stop
                    _ssd1306_command
 ---------------------------------------------------------------------------------
 (5) _ssd1306_command                                      2     2      0      67
                                              1 COMRAM     1     1      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         0     0      0    7318
                 _MFRC522_AntennaOff
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        0     0      0    1453
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    1     1      0    2174
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff                                   0     0      0    2238
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (1) _CHECK_TAG                                            4     4      0   75705
                                             87 COMRAM     4     4      0
                 _EEPROM_getRegistro
                          _Guarda_ID
                  _MFRC522_Clear_UID
                       _MFRC522_Halt
             _MFRC522_ReadCardSerial
                     _MFRC522_isCard
                         _Muestra_ID
                       _Print_Ticket
                  _Registro_busqueda
 ---------------------------------------------------------------------------------
 (2) _Registro_busqueda                                    7     5      2    7504
                                             16 COMRAM     7     5      2
                        _EEPROM_Read
                 _EEPROM_getRegistro
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _Print_Ticket                                         2     0      2   12356
                                             16 BANK0      2     0      2
                           _Font_Big
                        _Font_Normal
                           _New_Line
                         _UART_Print
                       _UART_Println
                         _UART_Write
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8    7824
                                              0 BANK0     16     8      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _bcd_to_decimal                                       2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1816
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1820
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Println                                         2     0      2     371
                                              1 COMRAM     2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Print                                           2     0      2     295
                                              1 COMRAM     2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _New_Line                                             0     0      0      22
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _Font_Normal                                          0     0      0      22
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _Font_Big                                             0     0      0      22
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Muestra_ID                                           2     0      2    5979
                                              9 COMRAM     2     0      2
                        _EEPROM_Read
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MFRC522_isCard                                       2     0      2    9288
                                             37 COMRAM     2     0      2
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Request                                      6     4      2    9190
                                             31 COMRAM     6     4      2
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_ReadCardSerial                               3     1      2   11685
                                             39 COMRAM     3     1      2
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntiColl                                     8     6      2   11542
                                             31 COMRAM     8     6      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Halt                                         6     6      0   16118
                                             31 COMRAM     6     6      0
                        _MFRC522_CRC
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
 ---------------------------------------------------------------------------------
 (4) _MFRC522_ToCard                                      19    12      7    7479
                                             12 COMRAM    19    12      7
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_CRC                                          7     2      5    6252
                                             12 COMRAM     7     2      5
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Set_Bit                                      3     2      1    2010
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Clear_Bit                                    3     2      1    2238
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Wr                                           4     3      1    1453
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Rd                                           9     9      0     163
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Clear_UID                                    4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Guarda_ID                                            2     2      0   10923
                                             16 COMRAM     2     2      0
                       _EEPROM_Write
                 _EEPROM_getRegistro
                 _EEPROM_setRegistro
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4203
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _EEPROM_setRegistro                                   2     0      2    2885
                                             11 COMRAM     2     0      2
                       _EEPROM_Write
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         4     1      3    2064
                                              7 COMRAM     4     1      3
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _EEPROM_getRegistro                                   7     5      2    1527
                                              9 COMRAM     7     5      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          3     1      2    1480
                                              6 COMRAM     3     1      2
                           _I2C_Read
                        _I2C_Restart
                           _I2C_Send
                          _I2C_Start
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      22
                                              0 COMRAM     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             1     1      0      23
                                              0 COMRAM     1     1      0
                           _I2C_Stop
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Wait                                             0     0      0       0
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _scr                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CHECK_TAG
     _EEPROM_getRegistro
       _EEPROM_Read
         _I2C_Read
           _I2C_Stop
           _I2C_Wait
             _I2C_Stop
         _I2C_Restart
         _I2C_Send
           _I2C_Wait
         _I2C_Start
         ___wmul (ARG)
     _Guarda_ID
       _EEPROM_Write
         _I2C_Send
         _I2C_Start
         _I2C_Stop
         ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       _EEPROM_getRegistro
       _EEPROM_setRegistro
         _EEPROM_Write
         ___lwdiv
         ___lwmod
       ___wmul
     _MFRC522_Clear_UID
     _MFRC522_Halt
       _MFRC522_CRC
         _MFRC522_Clear_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Rd
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Wr
       _MFRC522_Clear_Bit
       _MFRC522_ToCard
         _MFRC522_Clear_Bit
         _MFRC522_Rd
         _MFRC522_Set_Bit
         _MFRC522_Wr
     _MFRC522_ReadCardSerial
       _MFRC522_AntiColl
         _MFRC522_Clear_Bit
         _MFRC522_ToCard
         _MFRC522_Wr
     _MFRC522_isCard
       _MFRC522_Request
         _MFRC522_ToCard
         _MFRC522_Wr
     _Muestra_ID
       _EEPROM_Read
       ___wmul
     _Print_Ticket
       _Font_Big
         _UART_Write
       _Font_Normal
         _UART_Write
       _New_Line
         _UART_Write
       _UART_Print
         _UART_Write
       _UART_Println
         _UART_Write
       _UART_Write
       ___awdiv
       ___awmod
       _bcd_to_decimal
       _sprintf
         ___awdiv (ARG)
         ___awmod (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _Registro_busqueda
       _EEPROM_Read
       _EEPROM_getRegistro
       ___wmul
   _EEPROM_Read
   _EEPROM_Write
   _EEPROM_getRegistro
   _EEPROM_setRegistro
   _MFRC522_Init
     _MFRC522_AntennaOff
       _MFRC522_Clear_Bit
     _MFRC522_AntennaOn
       _MFRC522_Rd
       _MFRC522_Set_Bit
     _MFRC522_Reset
       _MFRC522_Wr
     _MFRC522_Wr
   _OLED_Init
     _I2C_Init
     _I2C_Stop
     _ssd1306_command
       _I2C_Send
       _I2C_Start
       _I2C_Stop
   _Print_Menu
     _OLEDClear
       _I2C_Send
       _I2C_Start
       _I2C_Stop
       _OLEDsetCursor
         _ssd1306_command
     _OLED_NPuts
       _I2C_Send
       _I2C_Start
       _I2C_Stop
       ___wmul
     _OLED_SPuts
       _I2C_Send
       _I2C_Start
       _I2C_Stop
       _OLEDsetCursor
     _OLEDsetCursor
     _Print_Hora
       _OLED_SPuts
       ___awdiv
       ___awmod
       _sprintf
     _Print_Minuto
       _OLED_SPuts
       ___awdiv
       ___awmod
       _sprintf
     _Print_Segundo
       _OLED_SPuts
       ___awdiv
       ___awmod
       _sprintf
     _Print_config
       _OLED_SPuts
   _Timer1_Init
   _UART_Begin
     ___fladd
     ___fldiv
     ___flge
       ___flsub (ARG)
         ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flsub
     ___fltol
     ___xxtofl
   _UART_Init
   _UART_Println
   _get_RTC
     _I2C_Read_DS
     _I2C_Repeated_Start_DS
     _I2C_Start_DS
     _I2C_Stop_DS
     _I2C_Write_DS
     _Print_Anio
       _OLED_SPuts
       ___awdiv
       ___awmod
       _sprintf
     _Print_Dia
       _OLED_SPuts
       ___awdiv
       ___awmod
       _sprintf
     _Print_Hora
     _Print_Mes
       _OLED_SPuts
       ___awdiv
       ___awmod
       _sprintf
     _Print_Minuto
     _Print_Segundo
   _get_key
     _Print_Anio
     _Print_Dia
     _Print_Hora
     _Print_Mes
     _Print_Minuto
     _Print_config
     _set_RTC
       _I2C_Start_DS
       _I2C_Stop_DS
       _I2C_Write_DS
       _decimal_to_bcd
         ___awdiv
         ___awmod

 _scr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F4      20        0.0%
DATA                 0      0      F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 20:04:39 2021

                   ___fldiv@aexp 0019                     ___fldiv@bexp 0018  
                   ___fldiv@sign 0011                      MFRC522_Rd@i 0008  
             __size_of_I2C_Start 0012               __size_of_CHECK_TAG 00F4  
                   MFRC522_CRC@i 0013                     MFRC522_CRC@n 0012  
                    MFRC522_Wr@i 0004                      _SSPSTATbits 000FC7  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0003  
                 _decimal_to_bcd 370A                              l201 2150  
                            l204 3AC6                              l301 2BFE  
                            l222 0BC6                              l207 3740  
                            l304 398C                              l312 2946  
                            l216 2256                              l225 0BB8  
                            l322 1D70                              l410 38EE  
                            l219 2D38                              l180 3140  
                            l228 0CDE                              l413 38F0  
                            l421 38C4                              l253 0DE8  
                            l510 2B56                              l174 34E6  
                            l422 38C6                              l271 3B32  
                            l327 3494                              l183 30D8  
                            l431 2D3C                              l415 3914  
                            l407 38C8                              l239 0CD0  
                            l352 3B00                              l504 2AD6  
                            l520 2EA6                              l440 2DC6  
                            l416 3916                              l192 3070  
                            l256 0DF6                              l361 3B16  
                            l521 2EC4                              l513 2E5C  
                            l177 31A8                              l433 2D60  
                            l409 38EC                              l425 384C  
                            l506 2AEA                              l602 3778  
                            l274 39B2                              l530 3A4E  
                            l346 393E                              l434 2D62  
                            l186 3008                              l371 39FA  
                            l355 3B04                              l507 2AEC  
                            l515 2E70                              l259 18EE  
                            l419 38A0                              l427 3870  
                            l364 3B24                              l380 37EA  
                            l508 2B16                              l516 2E72  
                            l524 3A68                              l268 2554  
                            l436 2D86                              l428 3874  
                            l349 3AF2                              l509 2B50  
                            l517 2E90                              l277 3390  
                            l533 3AEE                              l437 2D8A  
                            l189 2FA0                              l382 37F8  
                            l358 3B12                              l374 3A70  
                            l518 2EC0                              l462 1144  
                            l367 39DA                              l383 3804  
                            l519 2EA4                              l527 3A9A  
                            l551 0EE2                              l471 3ADC  
                            l463 117A                              l640 3848  
                            l608 3708                              l480 2E3A  
                            l536 3B3E                              l369 39E8  
                            l377 3A82                              l465 124E  
                            l386 3818                              l562 102A  
                            l570 320E                              l298 3A18  
                            l643 389E                              l555 1082  
                            l483 2E48                              l539 33E8  
                            l619 3A34                              l459 3AB0  
                            l652 1760                              l468 3ACE  
                            l900 2886                              l573 3210  
                            l477 2E28                              l661 1EB8  
                            l646 37B0                              l583 2C9E  
                            l567 1084                              l655 1A7C  
                            l649 3582                              l593 29FA  
                            l489 3334                              l913 2AAA  
                            l665 1EDA                              l586 3440  
                            l579 2C52                              l669 39D8  
                            l589 29F8                              l597 3966  
                            l934 241A                              l783 1C04  
                            l939 2460                              l796 203E  
                            l966 235C                              _PEN 007E2A  
                            _SEN 007E28                              _UID 00CF  
                            _Aux 0088                              _add 00EB  
           __size_of_I2C_Read_DS 008E                              _abs 3654  
                            _dia 00F0                              _pad 26FE  
                            _mes 00F1                              _scr 0008  
                            _sms 00C5                     ___awmod@sign 0006  
                            wreg 000FE8             __size_of_I2C_Restart 0012  
                 ??_MFRC522_Halt 0020                   ??_MFRC522_Init 000D  
           __size_of_I2C_Stop_DS 0028                     ___fltol@exp1 000A  
                           ?_abs 0013                             l1214 031A  
                           l1206 04D0                             l1223 03EA  
                           l1160 2F30                             l1224 03D8  
                           l1170 326C                             l1251 086A  
                           l1331 133E                             l1412 15B6  
                           l1324 12A6                             l1405 0B4C  
                           l1253 06CA                             l1262 0710  
                           l1167 2F38                             l1423 368A  
                           l1239 35C8                             l1327 1402  
                           l1264 0788                             l1256 068E  
                           l4001 2F1A                             l1177 3274  
                           l1265 0776                             l1426 3692  
                           l1418 32CE                             l1338 139A  
                           l4003 2F22                             l4011 3224  
                           l1419 32D6                             l1347 3538  
                           l4005 2F24                             l4021 3260  
                           l4013 322C                             l4101 1D3C  
                           l1197 0200                             l1438 26FC  
                           l1446 3652                             l1374 2744  
                           l1198 01EE                             l4007 2F2A  
                           l4023 3266                             l4015 3234  
                           l1455 37E6                             l4031 32B2  
                           l4111 350A                             l4103 1D40  
                           l1199 01B4                             l4017 3242  
                           l4009 3212                             l4201 29A0  
                           l4041 2E24                             l4033 2DC8  
                           l1449 3B4C                             l1377 2786  
                           l1385 090C                             l4025 3276  
                           l4113 3526                             l4105 34E8  
                           l5001 3A1A                             l4121 370C  
                           l4051 378E                             l4019 3258  
                           l4211 29C4                             l4203 29B0  
                           l4043 2E36                             l4035 2DCC  
                           l1379 27C2                             l1387 0914  
                           l4027 327E                             l4107 34FA  
                           l5003 3A22                             l5011 3A9C  
                           l4131 385A                             l4053 37A8  
                           l4045 353A                             l4221 39B4  
                           l4213 29C6                             l4141 32DC  
                           l4037 2DF0                             l4117 3AB4  
                           l3501 1BE4                             l4029 328C  
                           l4109 3502                             l5101 34E2  
                           l5005 3A2A                             l4301 014A  
                           l5021 110A                             l5013 1086  
                           l4125 38C8                             l4133 38A0  
                           l4047 377A                             l4223 39D0  
                           l4215 29D6                             l4151 31AC  
                           l4143 3300                             l4039 2DF4  
                           l3511 1F0E                             l3431 2680  
                           l3423 2634                             l5103 3392  
                           l5031 2B58                             l4071 1C4A  
                           l5007 3A30                             l4311 019C  
                           l4303 014E                             l4231 002C  
                           l5023 110C                             l5015 1096  
                           l4127 38D6                             l4135 38AE  
                           l5111 0B6A                             l4049 377A  
                           l3601 2B18                             l4217 29F4  
                           l4209 29B4                             l4161 320A  
                           l4153 31B6                             l4137 3B26  
                           l4145 3304                             l3521 1F66  
                           l3513 1F12                             l3505 1EDC  
                           l3433 26B6                             l3425 2646  
                           l3441 361C                             l5105 33A0  
                           l5041 2B74                             l5033 2B5E  
                           l4081 1CC0                             l4073 1C50  
                           l4065 1C26                             l4057 1C06  
                           l5009 3A32                             l4401 0414  
                           l4321 01E0                             l4313 01AC  
                           l4305 0152                             l4241 0060  
                           l4233 002E                             l5025 1146  
                           l5017 10BC                             l4129 384C  
                           l5201 0D46                             l5121 0B88  
                           l5113 0B6C                             l3603 2B1E  
                           l4171 2C2E                             l4155 31C2  
                           l4147 398E                             l4139 32D8  
                           l3531 1FE8                             l3523 1F7A  
                           l3515 1F20                             l3507 1EE0  
                           l3427 2658                             l3443 362E  
                           l3451 37C2                             l5051 2B92  
                           l5043 2B7A                             l5035 2B62  
                           l4091 1CF4                             l4075 1C56  
                           l4067 1C32                             l4059 1C1E  
                           l4411 0490                             l4403 044E  
                           l4323 01E2                             l4315 01C2  
                           l4307 0156                             l4251 0092  
                           l4235 003E                             l4243 0068  
                           l4227 0012                             l5027 123E  
                           l5019 10F0                             l5203 0D58  
                           l5211 0D74                             l5131 0BE4  
                           l5123 0B8A                             l5115 0B7C  
                           l5107 0B4E                             l3437 3B14  
                           l3605 2B36                             l3613 2E4C  
                           l4181 2C5A                             l4173 2C32  
                           l4165 2C00                             l4157 31E6  
                           l4149 3336                             l3461 1A7E  
                           l3525 1F88                             l3533 1FEE  
                           l3517 1F40                             l3509 1EEE  
                           l3429 2662                             l3445 3632  
                           l3453 37DA                             l3541 26FE  
                           l3701 0B0C                             l5301 2504  
                           l5061 2BB0                             l5053 2B98  
                           l5045 2B80                             l5037 2B68  
                           l4093 1D10                             l4077 1C78  
                           l4069 1C46                             l4501 20AA  
                           l4421 04B0                             l4413 0494  
                           l4405 0450                             l4341 026A  
                           l4333 0232                             l4325 01EC  
                           l4317 01CE                             l4309 0180  
                           l4261 00C8                             l4253 0098  
                           l4245 0078                             l4237 004E  
                           l4229 001E                             l5029 124A  
                           l5213 0D86                             l5221 0DA2  
                           l5205 0D6A                             l5141 0C12  
                           l5133 0BE8                             l5125 0BA0  
                           l5117 0B80                             l5109 0B5C  
                           l3607 2B38                             l3631 2E7C  
                           l3623 2E6A                             l3615 2E50  
                           l4183 2C5C                             l4175 2C34  
                           l4167 2C14                             l4191 294C  
                           l4159 31F6                             l3471 1AC2  
                           l3463 1A82                             l3535 1FFE  
                           l3527 1FB6                             l3519 1F5E  
                           l3439 3610                             l3447 37B2  
                           l3551 2750                             l3543 270E  
                           l3703 0B14                             l5311 2544  
                           l5303 2518                             l3711 39FE  
                           l5071 2BCE                             l5063 2BB6  
                           l5055 2B9E                             l5047 2B86  
                           l5039 2B6E                             l4431 3456  
                           l4095 1D14                             l4087 1CC8  
                           l4079 1C84                             l4511 2122  
                           l4503 20C6                             l4423 04BE  
                           l4415 04A2                             l4407 0460  
                           l4343 026E                             l4335 0242  
                           l4327 020E                             l4351 028E  
                           l4319 01D2                             l4271 0104  
                           l4263 00D8                             l4255 00A6  
                           l4247 007E                             l4239 005E  
                           l5223 0DB4                             l5231 0DD0  
                           l5215 0D98                             l5207 0D6E  
                           l5151 0C40                             l5143 0C16  
                           l5135 0BF8                             l5127 0BA2  
                           l5119 0B84                             l3457 39DA  
                           l3721 3B02                             l3801 3896  
                           l3609 2B54                             l3641 2EAC  
                           l3633 2E8C                             l3625 2E74  
                           l3617 2E58                             l4185 2C6C  
                           l4177 2C46                             l4169 2C1C  
                           l4193 2956                             l3481 1B18  
                           l3473 1AE2                             l3465 1A90  
                           l3537 201E                             l3529 1FD6  
                           l3449 37BE                             l3553 2764  
                           l3545 2722                             l3705 0B24  
                           l4601 18D6                             l5305 251C  
                           l5313 2550                             l3713 3A02  
                           l5081 2BEC                             l5073 2BD4  
                           l5065 2BBC                             l5057 2BA4  
                           l5049 2B8C                             l4441 346E  
                           l4433 345A                             l4097 1D18  
                           l4089 1CF0                             l4513 2134  
                           l4505 20D8                             l4425 04C0  
                           l4417 04A8                             l4409 0470  
                           l4353 02B4                             l4361 030A  
                           l4345 027C                             l4337 0250  
                           l4329 021E                             l4281 0122  
                           l4273 0112                             l4265 00DA  
                           l4257 00A8                             l4249 0090  
                           l4521 2F84                             l5241 21A4  
                           l5233 2152                             l5225 0DC6  
                           l5217 0D9C                             l5209 0D70  
                           l5161 0C6E                             l5153 0C44  
                           l5145 0C26                             l5137 0BFC  
                           l5129 0BD4                             l3459 39F6  
                           l3731 3812                             l3723 37E8  
                           l3571 3A7E                             l3803 389C  
                           l3811 3824                             l3643 2EAE  
                           l3627 2E78                             l4187 2C7A  
                           l4179 2C50                             l4195 2962  
                           l4611 3940                             l3491 1B9A  
                           l3483 1B2C                             l3475 1AE6  
                           l3467 1AB0                             l3563 3654  
                           l3555 2768                             l3547 2730  
                           l3651 08B4                             l4603 18DA  
                           l5307 252C                             l3715 3A08  
                           l5083 2BF2                             l5075 2BDA  
                           l5067 2BC2                             l5059 2BAA  
                           l4443 3474                             l4435 3460  
                           l4451 288C                             l4099 1D34  
                           l4507 20F4                             l5091 34B6  
                           l4419 04AA                             l4371 035E  
                           l4363 0330                             l4355 02E8  
                           l4347 027E                             l4339 025E  
                           l4291 0136                             l4283 0126  
                           l4275 0116                             l4259 00B8  
                           l4267 00E2                             l4531 2D3C  
                           l4523 300A                             l4515 2FA2  
                           l5251 21D8                             l5243 21B8  
                           l5235 218A                             l5227 0DCA  
                           l5219 0D9E                             l5171 0C9C  
                           l5163 0C72                             l5155 0C54  
                           l5147 0C2A                             l5139 0C00  
                           l5331 2562                             l3733 3816  
                           l3725 37FC                             l3813 382A  
                           l4701 36D0                             l3581 2ACE  
                           l3573 2AAE                             l3645 2EB0  
                           l3637 2E9E                             l3629 2E7A  
                           l3741 3A5A                             l4197 2972  
                           l4189 2948                             l4613 395E  
                           l3493 1B9C                             l3485 1B3A  
                           l3477 1AF2                             l3469 1AB4  
                           l3565 366E                             l3557 2796  
                           l3549 273C                             l3661 091C  
                           l3653 08D4                             l4605 18DE  
                           l5309 2538                             l3717 3A0E  
                           l3709 39FE                             l5085 2BF8  
                           l5077 2BE0                             l5069 2BC8  
                           l3821 3968                             l4445 3478  
                           l4429 3442                             l4461 28D2  
                           l4453 2892                             l4509 2106  
                           l5093 34CA                             l4381 0388  
                           l4373 036C                             l4365 0340  
                           l4357 02EA                             l4349 0288  
                           l4293 013A                             l4285 012A  
                           l4277 011A                             l4269 00F2  
                           l4541 2DC2                             l4533 2D4A  
                           l4525 3054                             l4517 2FEC  
                           l5261 2200                             l5253 21DC  
                           l5245 21BC                             l5237 219C  
                           l5229 0DCC                             l5181 0CEC  
                           l5173 0CA0                             l5165 0C82  
                           l5157 0C58                             l5149 0C2E  
                           l5341 258E                             l5333 2564  
                           l5325 2556                             ?_pad 0011  
                           l3727 3800                             l3567 3AF0  
                           l3815 3830                             l3807 381A  
                           l4711 36EC                             l3591 2AF4  
                           l3575 2AB6                             l3639 2EA8  
                           l3743 3A86                             l4199 297C  
                           l4623 3742                             l3823 3ACA  
                           l3911 27D6                             l3495 1BAE  
                           l3487 1B4C                             l3479 1B10  
                           l3559 27AA                             l3671 0952  
                           l3663 092E                             l3655 08E4  
                           l3647 086C                             l3751 1428  
                           l4607 18E2                             l3719 3A14  
                           l5079 2BE6                             l4447 3490  
                           l4471 2906                             l4455 289C  
                           l5095 34D6                             l5087 3496  
                           l4391 03BA                             l4383 0398  
                           l4375 036E                             l4359 02FA  
                           l4295 013E                             l4287 012E  
                           l4279 011E                             l4535 2D70  
                           l4527 38F0                             l4519 2F3A  
                           l5271 2232                             l5263 2212  
                           l5255 21E2                             l5247 21C0  
                           l5239 21A0                             l4551 2CE8  
                           l5183 0CFC                             l5191 0D18  
                           l5175 0CB0                             l5167 0C86  
                           l5159 0C5C                             l5351 25CC  
                           l5343 25A4                             l5335 2566  
                           l5327 255E                             l3729 3802  
                           l3569 3A6C                             l3817 3836  
                           l3809 381E                             l3593 2AFC  
                           l3577 2AB8                             l3737 3A52  
                           l3745 3A86                             l3841 0E98  
                           l3833 0E22                             l3825 0DFA  
                           l4721 3436                             l4713 33EA  
                           l4625 3750                             l3921 27FC  
                           l3913 27DE                             l3489 1B7A  
                           l3497 1BB4                             l3673 0958  
                           l3681 0A4A                             l3665 093C  
                           l3657 08E6                             l3649 088C  
                           l3761 1494                             l3753 1436  
                           l4609 18E8                             l4641 1D7E  
                           l5281 2462                             l4473 2922  
                           l4457 28AA                             l4449 2888  
                           l4481 318C                             l5097 34DA  
                           l5089 349A                             l4393 03D0  
                           l4377 037C                             l4369 0354  
                           l4385 039A                             l4297 0142  
                           l4289 0132                             l4537 2D98  
                           l4529 38FE                             l5273 2236  
                           l5265 2216                             l5257 21EC  
                           l5249 21D4                             l4561 2D0C  
                           l4553 2CEE                             l4545 2CA0  
                           l5193 0D2A                             l5185 0D0E  
                           l5177 0CB4                             l5169 0C8A  
                           l5361 260C                             l5353 25D8  
                           l5345 25A8                             l5337 256E  
                           l5329 2560                             l3819 383A  
                           l4707 36D8                             l3595 2B0E  
                           l3587 2AE4                             l3579 2ABA  
                           l3739 3A52                             l3747 3A8E  
                           l3851 0EDE                             l3843 0E9C  
                           l3835 0E4C                             l3827 0E0A  
                           l4715 33F2                             l4635 3776  
                           l4627 3760                             l4619 3964  
                           l3931 2834                             l3923 2804  
                           l3915 27E2                             l3907 27C4  
                           l3499 1BC4                             l3683 0A64  
                           l3691 0AC6                             l3675 09DA  
                           l3667 0942                             l3659 0900  
                           l3771 1546                             l3763 14DC  
                           l3755 1448                             l4571 1762  
                           l4651 1DFE                             l4643 1D8A  
                           l5291 24AA                             l5283 247E  
                           l4731 3936                             l4723 391A  
                           l4467 28DA                             l4459 28B6  
                           l4475 2926                             l4483 30DA  
                           l4491 2040                             l5099 34DE  
                           l4811 0652                             l4803 0608  
                           l4379 0384                             l4387 03A8  
                           l4299 0146                             l4539 2DAE  
                           l5275 224A                             l5267 221A  
                           l5259 21F6                             l4563 2D14  
                           l4555 2CF6                             l4547 2CDE  
                           l5195 0D3C                             l5187 0D12  
                           l5179 0CB8                             l5363 261E  
                           l5355 25EC                             l5347 25AC  
                           l5339 2582                             l4709 36E8  
                           l3589 2AEE                             l3861 0F24  
                           l3853 0EEA                             l3845 0EB8  
                           l3837 0E76                             l3829 0E16  
                           l4717 340A                             l4629 3770  
                           l3941 2860                             l3933 283A  
                           l3925 2816                             l3917 27F0  
                           l3909 27C8                             l3693 0AD8  
                           l3685 0A82                             l3677 09E0  
                           l3669 094A                             l3773 155A  
                           l3757 144C                             l3749 1404  
                           l4581 1826                             l4573 1782  
                           l4661 1E98                             l4653 1E24  
                           l4645 1DB0                             l5293 24C6  
                           l5285 249A                             l4741 3ADE  
                           l4733 393A                             l4725 391E  
                           l4477 2942                             l4469 2902  
                           l4485 3124                             l4493 2050  
                           l4821 0698                             l4813 065A  
                           l4805 0622                             l4901 23FA  
                           l4397 03FA                             l4389 03AC  
                           l5277 224E                             l5269 222E  
                           l4565 2D1C                             l4557 2CFE  
                           l4549 2CE2                             l5197 0D40  
                           l5189 0D14                             l5365 2622  
                           l5357 25F8                             l5349 25B0  
                           l3791 3876                             l3871 0F72  
                           l3863 0F2E                             l3855 0EF0  
                           l3847 0EC2                             l3839 0E82  
                           l4719 3414                             l3935 2850  
                           l3927 281E                             l3943 2866  
                           l3919 27F8                             l3951 29FC  
                           l3695 0AE8                             l3687 0A9C  
                           l3679 09E6                             l3767 1514  
                           l3759 1470                             l3783 1580  
                           l4591 1890                             l4583 1832  
                           l4575 1786                             l4663 1EAC  
                           l4655 1E38                             l4647 1DC4  
                           l4639 1D72                             l5295 24CA  
                           l4743 3B34                             l4735 3A36  
                           l4727 392E                             l4479 3142  
                           l4487 3072                             l4495 206C  
                           l4831 06F0                             l4823 06B6  
                           l4815 066A                             l4807 0632  
                           l4751 04EE                             l4903 2408  
                           l4399 0406                             l4911 2258  
                           l5279 2252                             l4567 2D24  
                           l4559 2D06                             l5199 0D42  
                           l5367 2628                             l5359 25FC  
                           l3793 387A                             l4681 1614  
                           l4673 15B8                             l3881 0FEE  
                           l3873 0F76                             l3865 0F40  
                           l3857 0F02                             l3849 0ED4  
                           l3945 2876                             l3937 2858  
                           l3929 2826                             l3961 2A28  
                           l3953 2A00                             l3697 0AEE  
                           l3689 0AB6                             l3785 15A4  
                           l3769 1538                             l3777 1566  
                           l4593 189C                             l4585 187C  
                           l4577 17D0                             l4657 1E5E  
                           l4649 1DEA                             l4665 1EB8  
                           l5297 24E6                             l4737 3A42  
                           l4729 3934                             l4489 30BC  
                           l4497 207C                             l4841 072E  
                           l4833 06F6                             l4825 06B8  
                           l4817 067E                             l4809 0642  
                           l4753 04FE                             l4761 0528  
                           l4745 04D2                             l4905 2458  
                           l4921 22AE                             l4913 226E  
                           l4569 2D28                             l3795 3880  
                           l4691 16DC                             l4683 163C  
                           l4675 15C4                             l3891 1036  
                           l3883 1002                             l3875 0F88  
                           l3867 0F5A                             l3859 0F10  
                           l3947 287E                             l3939 285A  
                           l3971 2A60                             l3963 2A30  
                           l3955 2A0E                             l3699 0B00  
                           l3779 1574                             l4595 18BA  
                           l4587 1888                             l4579 17DC  
                           l4659 1E72                             l4667 1EBC  
                           l5299 24F2                             l4739 3A4C  
                           l4499 2098                             l4851 0798  
                           l4843 0732                             l4835 0700  
                           l4827 06C8                             l4819 068C  
                           l4771 0554                             l4763 0538  
                           l4755 050E                             l4747 04DE  
                           l4907 245E                             l4923 22BE  
                           l3797 3886                             l4693 1704  
                           l4685 1664                             l4677 15C8  
                           l3893 104A                             l3885 1012  
                           l3877 0F9A                             l3869 0F5E  
                           l5389 0E36                             l3981 2A9A  
                           l3973 2A76                             l3965 2A42  
                           l3957 2A16                             l4597 18C6  
                           l4589 188C                             l4669 1ED2  
                           l4861 07FA                             l4853 07A4  
                           l4845 0740                             l4837 070E  
                           l4829 06DA                             l4773 0564  
                           l4781 058E                             l4765 053E  
                           l4757 051E                             l4749 04EC  
                           l4933 22E8                             l4925 22C2  
                           l4917 2282                             l3799 388C  
                           l3991 2EE0                             l4695 172C  
                           l4687 168C                             l4679 15EC  
                           l3895 104E                             l3887 1016  
                           l3879 0FAA                             l3983 2AA2  
                           l3975 2A7E                             l3967 2A4A  
                           l3959 2A1A                             l4599 18CA  
                           l4871 0858                             l4863 0810  
                           l4855 07B2                             l4847 076E  
                           l4839 0720                             l4791 05D0  
                           l4783 059E                             l4775 0574  
                           l4767 0544                             l4759 0520  
                           l4951 234C                             l4943 2310  
                           l4935 22F2                             l4927 22D0  
                           l4919 22AC                             l3993 2EE8  
                           l4697 1754                             l4689 16B4  
                           l3897 106A                             l3889 1026  
                           l3977 2A84                             l3969 2A52  
                           l4873 085E                             l4865 082A  
                           l4857 07DC                             l4785 05B4  
                           l4777 0584                             l4769 0552  
                           l4945 231C                             l4937 22FC  
                           l4961 12B6                             l3995 2EF0  
                           l3987 2EC6                             l3899 107E  
                           l4699 18F0                             l3979 2A8A  
                           l4875 0860                             l4867 0846  
                           l4859 07E0                             l4787 05C4  
                           l4795 05E4                             l4779 0586  
                           l4891 238C                             l4883 3584  
                           l4947 232C                             l4971 12F4  
                           l4963 12CC                             l4955 1252  
                           l3997 2EFE                             l3989 2ECE  
                           l4869 084A                             l4797 05F4  
                           l4789 05CC                             l4893 239C  
                           l4885 3594                             l4949 233C  
                           l4981 137C                             l4973 1326  
                           l4957 1262                             l3999 2F04  
                           l4799 05F4                             l4895 23CA  
                           l4991 13D2                             l4983 138A  
                           l4975 1328                             l4967 12E0  
                           l4959 1270                             l4897 23DA  
                           l4889 235E                             l4993 13E2  
                           l4985 13A8                             l4977 1334  
                           l4969 12E8                             l4899 23E8  
                           l4995 13F0                             l4987 13AA  
                           l4979 1370                             ?_scr 0001  
                           l4997 13F2                             l4989 13AE  
                           STR_1 7FC7                             STR_2 7FBD  
                           STR_3 7FAB                             STR_4 7FD4  
                           STR_5 7FD4                             STR_6 7FEE  
                           STR_7 7FEE                             STR_8 7FCE  
                           STR_9 7FCE                             u3000 1FFE  
                           u3001 1FFA                             u3010 270E  
                           u3011 270A                             u3100 2B30  
                           u3020 2730                             u3101 2B28  
                           u3021 272C                             u3110 2B50  
                           u3030 2786                             u3111 2B4C  
                           u3031 2782                             u3120 2E6A  
                           u3040 2796                             u3200 0900  
                           u4000 003E                             u3121 2E66  
                           u3041 2792                             u3201 08FC  
                           u4001 003A                             u3130 2E8C  
                           u3050 366E                             u3210 092E  
                           u4010 004E                             u3131 2E88  
                           u3051 366A                             u3211 092A  
                           u4011 004A                             u3060 3B00  
                           u3108 2B32                             u3140 2E9E  
                           u3300 0B00                             u3220 093C  
                           u4100 019A                             u4020 0090  
                           u3061 3AFC                             u3141 2E9A  
                           u3301 0AFC                             u3221 0938  
                           u4021 008C                             u3310 3B12  
                           u3070 3A7E                             u3150 2EC0  
                           u3230 0A64                             u4110 01C2  
                           u4030 00A6                             u3311 3B0E  
                           u3071 3A7A                             u3151 2EBC  
                           u3231 0A60                             u4111 01BE  
                           u4031 00A2                             u3320 37F8  
                           u3080 2AE4                             u3400 0ED4  
                           u3240 0A82                             u3160 089C  
                           u4200 02FA                             u4120 01E0  
                           u4040 00B8                             u5000 232C  
                           u3321 37F4                             u3081 2AE0  
                           u3401 0ED0                             u3241 0A7E  
                           u3161 0896                             u4201 02F6  
                           u4121 01DC                             u4041 00B4  
                           u5001 2328                             u3330 3812  
                           u3090 2B0E                             u3410 0F02  
                           u3250 0A9C                             u3170 089E  
                           u4210 0330                             u4130 0200  
                           u4050 00C8                             u5010 233C  
                           u3331 380E                             u3091 2B0A  
                           u3411 0EFE                             u3251 0A98  
                           u4211 032C                             u4131 01FC  
                           u4051 00C4                             u5011 2338  
                           u3500 1026                             u3420 0F10  
                           u3260 0AB6                             u3180 08B4  
                           u3340 1428                             u4300 03FA  
                           u4220 0340                             u4140 020E  
                           u4060 0104                             u5100 13E2  
                           u5020 1262                             u3501 1022  
                           u3421 0F0C                             u3261 0AB2  
                           u3181 08B0                             u3341 1424  
                           u4301 03F6                             u4221 033C  
                           u4141 020A                             u4061 0100  
                           u5101 13DE                             u5021 125E  
                           u3510 106A                             u3430 0F24  
                           u3270 0AC6                             u3190 08E4  
                           u3350 1470                             u4310 0414  
                           u4230 036C                             u4150 021E  
                           u4070 0112                             u5110 13F0  
                           u5030 1270                             u3511 1066  
                           u3431 0F20                             u3271 0AC2  
                           u3191 08E0                             u3351 146C  
                           u4311 0410                             u4231 0368  
                           u4151 021A                             u4071 010E  
                           u5111 13EC                             u5031 126C  
                           u3440 0F40                             u3520 27D6  
                           u3600 2A42                             u2800 2658  
                           u3280 0AD8                             u3360 1494  
                           u4400 2942                             u4320 044E  
                           u4240 037C                             u4160 0250  
                           u4080 0180                             u5040 12CC  
                           u5120 110A                             u5200 0BF8  
                           u3441 0F3C                             u3521 27D2  
                           u3601 2A3E                             u2801 2654  
                           u3281 0AD4                             u3361 1490  
                           u4401 293E                             u4321 044A  
                           u4241 0378                             u4161 024C  
                           u4081 017C                             u5041 12C8  
                           u5121 1106                             u5201 0BF4  
                           u3450 0F5A                             u3530 27F0  
                           u3610 2A60                             u2810 2680  
                           u3290 0AE8                             u3370 1538  
                           u4410 2050                             u4330 0460  
                           u4250 0398                             u4170 025E  
                           u4090 0198                             u5050 1322  
                           u5130 123E                             u5210 0C12  
                           u3451 0F56                             u3531 27EC  
                           u3611 2A5C                             u2811 267C  
                           u3291 0AE4                             u3371 1534  
                           u4411 204C                             u4331 045C  
                           u4251 0394                             u4171 025A  
                           u4091 0192                             u5051 131E  
                           u5131 123A                             u5211 0C0E  
                           u3460 0F72                             u3380 3ADC  
                           u3540 2816                             u3620 2A76  
                           u2820 26B6                             u3700 32CE  
                           u4420 207C                             u4340 0470  
                           u4260 03A8                             u4180 027C  
                           u5060 136C                             u4500 2D60  
                           u5300 0CEC                             u5220 0C26  
                           u5140 0B5C                             u3461 0F6E  
                           u3381 3AD8                             u3541 2812  
                           u3621 2A72                             u2901 1AEC  
                           u2821 26B2                             u3701 32CA  
                           u4421 2078                             u4341 046C  
                           u4261 03A4                             u4181 0278  
                           u5061 1368                             u4501 2D5C  
                           u5301 0CE8                             u5221 0C22  
                           u5141 0B58                             u2830 3B24  
                           u3470 0F88                             u3390 0EB8  
                           u3710 2DEC                             u3550 2834  
                           u3630 2A9A                             u2910 1B10  
                           u4430 20AA                             u4350 0490  
                           u4270 03BA                             u4190 02B4  
                           u5070 138A                             u4510 2D70  
                           u5310 0CFC                             u5230 0C40  
                           u5150 0B6A                             u2831 3B20  
                           u3471 0F84                             u3391 0EB4  
                           u3551 2830                             u3631 2A96  
                           u2911 1B0C                             u4431 20A6  
                           u4351 048C                             u4271 03B6  
                           u4191 02B0                             u5071 1386  
                           u4511 2D6C                             u5311 0CF8  
                           u5231 0C3C                             u5151 0B66  
                           u3640 2EE0                             u3480 0FAA  
                           u3720 2E14                             u3560 2850  
                           u2920 1B3A                             u2840 3652  
                           u4600 1DFE                             u3800 1D60  
                           u4440 20D8                             u4360 04A2  
                           u4280 03D0                             u5080 139A  
                           u4520 2D86                             u5400 0DC6  
                           u5320 0D0E                             u5240 0C54  
                           u5160 0B7C                             u3641 2EDC  
                           u3481 0FA6                             u3561 284C  
                           u2921 1B36                             u2841 364E  
                           u4601 1DFA                             u4441 20D4  
                           u4361 049E                             u4281 03CC  
                           u5081 1396                             u4521 2D82  
                           u5401 0DC2                             u5321 0D0A  
                           u5241 0C50                             u5161 0B78  
                           u3650 2EFE                             u3490 1012  
                           u3730 2E24                             u3570 2876  
                           u2930 1B7A                             u2850 37DA  
                           u4610 1E38                             u3810 1D70  
                           u4450 2106                             u4370 04BE  
                           u4290 03E6                             u5090 13A8  
                           u4530 2D98                             u5410 0DF6  
                           u5330 0D2A                             u5250 0C6E  
                           u5170 0BC6                             u3651 2EFA  
                           u3491 100E                             u3731 2E20  
                           u3571 2872                             u2931 1B76  
                           u2851 37D6                             u4611 1E34  
                           u3811 1D6C                             u4451 2102  
                           u4371 04BA                             u4291 03E2  
                           u5091 13A4                             u4531 2D94  
                           u5411 0DF2                             u5331 0D26  
                           u5251 0C6A                             u5171 0BC2  
                           u2860 39E8                             u3660 2F1A  
                           u3900 3334                             u3740 2E36  
                           u3580 2A0E                             u2940 1BC4  
                           u4620 1E72                             u5500 24E6  
                           u4380 3490                             u4460 2134  
                           u4700 0552                             u4540 2DAE  
                           u3820 38D6                             u5420 219C  
                           u5340 0D3C                             u5260 0C82  
                           u5180 0BD4                             u2861 39E4  
                           u3661 2F16                             u3901 3330  
                           u3741 2E32                             u3717 2DE2  
                           u3581 2A0A                             u2941 1BC0  
                           u4621 1E6E                             u5501 24E2  
                           u4381 348C                             u4461 2130  
                           u4701 054E                             u4541 2DAA  
                           u3821 38D2                             u5421 2198  
                           u5341 0D38                             u5261 0C7E  
                           u5181 0BD0                             u2870 39F6  
                           u3670 3224                             u3910 31F6  
                           u3750 2E48                             u3590 2A28  
                           u2950 1EEE                             u2790 2646  
                           u4630 1EAC                             u5510 2504  
                           u4390 2922                             u4710 0564  
                           u4550 2DC0                             u4470 38FE  
                           u3830 38EC                             u5430 21B8  
                           u5350 0D58                             u5270 0C9C  
                           u5190 0BE4                             u2871 39F2  
                           u3671 3220                             u3911 31F2  
                           u3751 2E44                             u3727 2E0A  
                           u3591 2A24                             u2951 1EEA  
                           u2791 2642                             u4631 1EA8  
                           u5511 2500                             u4391 291E  
                           u3807 1D56                             u4711 0560  
                           u4551 2DBA                             u4471 38FA  
                           u3831 38E8                             u5431 21B4  
                           u5351 0D54                             u5271 0C98  
                           u5191 0BE0                             u3680 3242  
                           u3920 320A                             u2880 1A90  
                           u2960 1F20                             u4640 1ED2  
                           u3760 1C76                             u4800 070E  
                           u4720 0574                             u4480 3914  
                           u3840 385A                             u5440 21D4  
                           u5360 0D6A                             u5280 0CB0  
                           u3681 323E                             u3921 3206  
                           u2881 1A8C                             u2961 1F1C  
                           u4641 1ECE                             u4801 070A  
                           u4721 0570                             u4481 3910  
                           u3841 3856                             u5441 21D0  
                           u5361 0D66                             u5281 0CAC  
                           u3690 3258                             u4650 3708  
                           u3930 2C46                             u4570 395E  
                           u2890 1AC2                             u2970 1F5E  
                           u4810 072E                             u4730 05B4  
                           u4490 2D4A                             u3850 3870  
                           u5450 2212                             u5370 0D86  
                           u5290 0CDE                             u3691 3254  
                           u4651 3704                             u3931 2C42  
                           u4571 395A                             u2891 1ABE  
                           u2971 1F5A                             u4811 072A  
                           u4731 05B0                             u4491 2D46  
                           u3851 386C                             u5451 220E  
                           u5371 0D82                             u5291 0CDA  
                           u3940 2C6C                             u4580 3770  
                           u2980 1F88                             u4660 392E  
                           u3780 1D10                             u4820 0740  
                           u4740 05F4                             u4900 238C  
                           u3860 38AE                             u5460 222E  
                           u5380 0D98                             u5540 25CC  
                           _RCEN 007E2B                             u3941 2C68  
                           u4581 376C                             u2981 1F84  
                           u4661 392A                             u3781 1D0C  
                           u4821 073C                             u4741 05F0  
                           u4901 2388                             u4565 2DC2  
                           u3861 38AA                             u5461 222A  
                           u5381 0D94                             u5541 25C8  
                           u3950 2C7A                             u2990 1FB6  
                           u4590 1DC4                             u3790 1D34  
                           u4830 076E                             u4750 066A  
                           u4670 04EC                             u4910 23CA  
                           u3870 38C4                             u5470 224A  
                           u5390 0DB4                             u5550 260C  
                           u3951 2C76                             u2991 1FB2  
                           u4591 1DC0                             u3791 1D30  
                           u3775 1CA8                             u3767 1C6C  
                           u4831 076A                             u4751 0666  
                           u4671 04E8                             u4911 23C6  
                           u3871 38C0                             u5471 2246  
                           u5391 0DB0                             u5607 0CC2  
                           u5551 2608                             u3960 29B0  
                           u3880 32FC                             u5480 247E  
                           u4840 0784                             u4760 068C  
                           u4680 04FE                             u4920 23E8  
                           u5560 261E                             u3961 29AC  
                           u5481 247A                             u4841 0780  
                           u4761 0688                             u4681 04FA  
                           u4921 23E4                             u5617 0DDA  
                           u5561 261A                             u3970 29D6  
                           u3890 3324                             u5490 249A  
                           u4850 0798                             u4770 06B6  
                           u4690 050E                             u4930 2408  
                           u3971 29D2                             u5491 2496  
                           u4851 0794                             u4771 06B2  
                           u4691 050A                             u4931 2404  
                           u5627 2D2E                             u3980 29F4  
                           u4860 07B2                             u4780 06DA  
                           u4940 2458                             u5637 3840  
                           u3981 29F0                             u4861 07AE  
                           u4781 06D6                             u4941 2454  
                           u4870 07FA                             u4790 06F0  
                           u3990 002C                             u4950 226E  
                    ?_OLED_NPuts 0007                             u3887 32F2  
                           u4871 07F6                             u4791 06EC  
                           u3991 0028                             u4951 226A  
                           u4880 082A                             u4960 22A2  
                           u3897 331A                             u4881 0826  
                           u5577 2598                             u4890 0858  
                           u4970 22D0                             u4891 0854  
                           u4971 22CC                             u5587 0B94  
                           u4980 22E4                             u4981 22E0  
                           u4965 2298                             u5597 0BAC  
                           u4990 230C                             u4991 2308  
                           _TMR1 000FCE                             _RSEN 007E29  
                    ?_OLED_SPuts 0007                    ??_Font_Normal 0002  
                           _Hora 00F5                             abs@a 0013  
                           _dbuf 00A5                             _diax 00ED  
                           _anio 00F2                             _main 2556  
                           _dtoa 086C                             _mesx 00EE  
                           _prec 0096                 __end_of_I2C_Init 3940  
               __end_of_I2C_Read 381A            MFRC522_AntiColl@unLen 0024  
                           _nout 0092                             pad@i 0018  
                           pad@p 0015                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
               __end_of_I2C_Send 3A84                             btemp 005F  
               __end_of_I2C_Wait 39FC                 __end_of_I2C_Stop 3B26  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                 _MFRC522_AntiColl 2948  
                ___fldiv@new_exp 0012                  EEPROM_Write@add 0008  
             UART_Println@buffer 0002                     ___param_bank 000000  
             __size_of_OLEDClear 0054                  ??_MFRC522_Reset 0005  
                          ??_abs 0015               __size_of_OLED_Init 00A8  
           __end_of_EEPROM_Write 384A                            ??_pad 0017  
         __end_of_decimal_to_bcd 3742            __size_of_I2C_Start_DS 0028  
                          ??_scr 0001                    ___fltol@sign1 0009  
          __size_of_I2C_Write_DS 002C                  __end_of___aodiv 1C06  
                __end_of___fladd 04D2                            ?_main 0001  
                          ?_dtoa 001C                  __end_of___aomod 2040  
                          _ACKEN 007E2C                            _ACKDT 007E2D  
                __end_of___fldiv 086C                  __end_of___awdiv 2888  
        ?_MFRC522_ReadCardSerial 0028                            STR_10 7FDA  
                          STR_11 7FF7                            STR_20 7FF0  
                          STR_12 7FE4                            STR_13 7FF3  
                          STR_21 7F8E                            STR_14 7FFB  
                          STR_15 7FE9                            STR_16 7FD4  
                          STR_17 7FD4                            STR_18 7FEE  
                          STR_19 7FDF                  __end_of___awmod 2AAC  
                __end_of___flsub 35CA                  __end_of___fltol 235E  
                ___awdiv@divisor 0003               _EEPROM_getRegistro 377A  
                __end_of___lwdiv 2F3A                  __end_of___lwmod 3276  
                          _FOUNT 00A4                            i2l158 3602  
                          i2l159 360C                  ___awdiv@counter 0005  
                   vfpfcnvrt@fmt 0042                      ?_UART_Begin 0025  
                          _SPBRG 000FAF                            _TRISE 000F96  
                          _TXREG 000FAD               MFRC522_Clear_UID@j 0003  
                __end_of_get_RTC 2258              __size_of_MFRC522_Rd 00AC  
                          _Horax 00A3                      ?_UART_Print 0002  
            __size_of_MFRC522_Wr 007C                      ?_UART_Write 0001  
             __size_of_UART_Init 0016                  __end_of_get_key 0DF8  
                          _aniox 00EF                            _flags 0098  
            ?_EEPROM_getRegistro 000A                            _fputc 2634  
                          _fputs 3610           MFRC522_AntiColl@serNum 0020  
                          pad@fp 0011                            _width 0094  
                          _putch 3B4C                            dtoa@d 001E  
                          dtoa@i 003E                            dtoa@n 0036  
                          dtoa@p 0030                            dtoa@s 0034  
                          dtoa@w 0032                  __end_of_set_RTC 2D3A  
              __end_of_I2C_Start 3B02                __end_of_CHECK_TAG 2556  
                          tablat 000FF5                _MFRC522_Clear_UID 36D0  
              _MFRC522_Clear_Bit 3A50                            ttemp5 0060  
                          ttemp6 0063                            ttemp7 0067  
                          status 000FD8                            wtemp8 0060  
                __end_of_sprintf 353A               ?_MFRC522_Clear_UID 0001  
             ?_MFRC522_Clear_Bit 000A                __end_of_BIG_FONTS 7C2F  
               EEPROM_Write@data 000A                     _I2C_Start_DS 38C8  
        ??_I2C_Repeated_Start_DS 0001       __size_of_Registro_busqueda 016A  
           __size_of_EEPROM_Read 002A                _MFRC522_AntennaOn 3ADE  
                __initialization 3694              __end_of_Font_Normal 3392  
       __size_of_ssd1306_command 001E                     _I2C_Write_DS 384A  
           ??_EEPROM_getRegistro 000C                     __end_of_main 2634  
            ??_MFRC522_Clear_UID 0003                     __end_of_dtoa 0B4E  
             ?_MFRC522_AntennaOn 0001              ??_MFRC522_Clear_Bit 000B  
               __end_of_Font_Big 39B4        MFRC522_ReadCardSerial@str 0028  
                ?_decimal_to_bcd 0001                 __end_of_New_Line 3B34  
 __end_of_MFRC522_ReadCardSerial 377A                 ??_MFRC522_ToCard 0014  
       __size_of_MFRC522_Set_Bit 0018                 OLED_SPuts@buffer 000B  
            __size_of_OLED_NPuts 00C0              __size_of_OLED_SPuts 016C  
       __size_of_MFRC522_Request 0068                           ??_main 005C  
                         ??_dtoa 0026              ??_MFRC522_AntennaOn 000D  
                  __activetblptr 000002                  MFRC522_ToCard@i 001D  
                MFRC522_ToCard@n 001F                 ??_MFRC522_isCard 0028  
          MFRC522_ToCard@backLen 0012               MFRC522_Rd@ucResult 0006  
     EEPROM_getRegistro@registro 000F       EEPROM_setRegistro@registro 000C  
                         _ADCON1 000FC1                  MFRC522_Wr@value 0001  
      __end_of_MFRC522_Clear_UID 370A        __end_of_MFRC522_Clear_Bit 3A6A  
          MFRC522_ToCard@_status 0019            MFRC522_ToCard@command 001C  
                         ?_fputc 0001                           ?_fputs 000A  
              __end_of_OLEDClear 3496                 ___awdiv@dividend 0001  
                         ?_putch 0001                __end_of_OLED_Init 2C00  
                         i2l5321 35F6                           i2l5323 360A  
                         i2l5315 35CC                           i2l5317 35DA  
                         i2l5319 35E0            MFRC522_ToCard@sendLen 000F  
             __size_of_Guarda_ID 01AA            MFRC522_ToCard@waitIRq 0018  
                         _SSPADD 000FC8                           _SSPBUF 000FC9  
               __end_of___xxtofl 1404        __end_of_MFRC522_AntennaOn 3AF0  
           __size_of_MFRC522_CRC 00A0                    ??_Timer1_Init 0001  
            __size_of_UART_Begin 01CA                           _Minuto 00F4  
                   vfprintf@cfmt 0056                __end_of_UART_Init 3AB2  
                         ___flge 235E              __size_of_UART_Print 005E  
            __size_of_UART_Write 0016                        ??___aodiv 0011  
                      ??___fladd 0009                        ??___aomod 0011  
                         ___wmul 39B4             __end_of_MFRC522_Halt 3442  
                     _Muestra_ID 18F0                        ??___fldiv 0009  
                      ??___awdiv 0005             __end_of_MFRC522_Init 33EA  
                      ??___awmod 0005                           _barras 7F86  
                      ??___flsub 0019                        ??___fltol 0005  
        MFRC522_AntiColl@_status 0026                        ??___lwdiv 0005  
                      ??___lwmod 0005                           clear_0 36BA  
               ___awdiv@quotient 0007                       _Print_Anio 300A  
                ___awmod@divisor 0003           Registro_busqueda@datox 0015  
                     _Print_Hora 3142                       _Print_Menu 3496  
                         isa$std 000001                        ??_get_RTC 0058  
                    OLED_NPuts@c 000B                      OLED_NPuts@i 000E  
                ___awmod@counter 0005                      OLED_NPuts@x 000C  
                         pad@buf 0013                           dtoa@fp 001C  
                      ??_get_key 0058                           _strlen 37B2  
                    OLED_SPuts@c 0013                      OLED_SPuts@i 0016  
                    OLED_SPuts@j 0018                      OLED_SPuts@x 0007  
                    OLED_SPuts@y 0009                           fputc@c 0001  
             __size_of_Print_Dia 0068                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ?_I2C_Init 0001               __size_of_Print_Mes 0068  
                      ?_I2C_Read 0001                        ?_I2C_Send 0001  
                      ?_I2C_Wait 0001                        ?_I2C_Stop 0001  
                      ??_set_RTC 000C                     __mediumconst 704E  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                           putch@c 0001  
               __end_of_vfprintf 32D8                        ??_sprintf 0058  
                 UART_Begin@baud 0025                   UART_Begin@aux2 0029  
                     ___flge@ff1 0019                       ___flge@ff2 001D  
                   ___xxtofl@arg 000B                     ___xxtofl@exp 000A  
                   ___xxtofl@val 0001                       __accesstop 0060  
        __end_of__initialization 36C2                      _Font_Normal 3336  
                  ___rparam_used 000001           MFRC522_Request@TagType 0020  
                   ??_MFRC522_Rd 0001                       ___fltol@f1 0001  
                   ??_MFRC522_Wr 0002               _MFRC522_AntennaOff 3B34  
                Muestra_ID@valor 000A            MFRC522_isCard@TagType 0026  
          __size_of_EEPROM_Write 0030                   __pcstackCOMRAM 0001  
          __end_of_Print_Segundo 30DA                     __pidataBANK0 3B40  
            ?_MFRC522_AntennaOff 0001                    __end_of_fputc 26FE  
                  __end_of_fputs 3654                    __end_of_putch 3B4E  
            __end_of_Timer1_Init 3A36                 MFRC522_Halt@buff 0020  
         MFRC522_Request@_status 0023                ??_ssd1306_command 0002  
              __end_of_Guarda_ID 1762                 MFRC522_Rd@ucAddr 0004  
             _EEPROM_setRegistro 353A           MFRC522_Request@reqMode 0022  
                     ??_I2C_Init 0001                       ??_I2C_Read 0001  
                     ??_I2C_Send 0001                       ??_I2C_Wait 0001  
                     ??_I2C_Stop 0001         __end_of_MFRC522_AntiColl 29FC  
              ??_MFRC522_Set_Bit 000B               __end_of_MFRC522_Rd 2B58  
             __end_of_MFRC522_Wr 2EC6                ??_MFRC522_Request 0022  
     __size_of_MFRC522_Clear_UID 003A       __size_of_MFRC522_Clear_Bit 001A  
                        ??_fputc 0005                          ??_fputs 000E  
            ?_EEPROM_setRegistro 000C             ??_MFRC522_AntennaOff 000D  
                        ??_putch 0001                     ??_OLED_NPuts 0009  
                   _EEPROM_Write 381A                       __pbssBANK0 0060  
                   ??_OLED_SPuts 000D                        ?_Font_Big 0001  
                      ?_New_Line 0001           MFRC522_ToCard@backData 0010  
     __size_of_MFRC522_AntennaOn 0012                __end_of_Print_Dia 300A  
              __end_of_Print_Mes 2FA2                MFRC522_CRC@dataIn 000D  
             MFRC522_Set_Bit@tmp 000B                     I2C_Read@temp 0001  
                        ?___flge 0019                MFRC522_CRC@length 000F  
               MFRC522_Wr@ucAddr 0003                      ?_Muestra_ID 000A  
                 OLEDsetCursor@x 0003                   OLEDsetCursor@y 0005  
                        ?___wmul 0001             ??_EEPROM_setRegistro 000E  
                 I2C_Read_DS@ack 0002        Registro_busqueda@registro 0013  
                  ??_I2C_Read_DS 0001                       CHECK_TAG@i 005A  
                    ?_Print_Anio 0001                      ?_Print_Hora 0001  
                    ?_Print_Menu 0001           __size_of_OLEDsetCursor 0026  
                   I2C_Send@data 0001           MFRC522_ToCard@lastBits 001A  
             __end_of_OLED_NPuts 2948                          ?_strlen 0001  
             __end_of_OLED_SPuts 1D72                    ??_I2C_Restart 0001  
                   ??_UART_Begin 0029                        ?___xxtofl 0001  
                  ??_I2C_Stop_DS 0001           MFRC522_ToCard@sendData 000D  
                   ??_UART_Print 0004                     ??_UART_Write 0001  
             __size_of_vfpfcnvrt 01B4          __size_of_bcd_to_decimal 0016  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7                       ??_Font_Big 0002  
                     ??_New_Line 0002               Registro_busqueda@i 0016  
           MFRC522_Clear_UID@u_i 0001                        _I2C_Start 3AF0  
                      _CHECK_TAG 2462            __size_of_MFRC522_Halt 0058  
          __size_of_MFRC522_Init 0058                    ?_UART_Println 0002  
                        _TagType 009E                 ??_decimal_to_bcd 0009  
                        __Hparam 0000                      _Timer1_Init 3A1A  
                        _Minutox 00A2                          __Lparam 0000  
                        _Segundo 00F3                    ?_Print_Minuto 0001  
           MFRC522_Clear_Bit@tmp 000B   __size_of_I2C_Repeated_Start_DS 0028  
             __end_of_UART_Begin 1250                          _Valores 008D  
                  ?_Print_Ticket 00E9    __end_of_I2C_Repeated_Start_DS 3918  
                      _BIG_FONTS 704F                  __size_of___flge 0104  
                        ___aodiv 1A7E                          ___fladd 0012  
                        ___aomod 1EDC                          ___fldiv 04D2  
             __end_of_UART_Print 3336                          ___awdiv 27C4  
                        ___awmod 29FC                          ___flsub 3584  
                        ___fltol 2258                  __size_of___wmul 0026  
             __end_of_UART_Write 3ADE                          ___lwdiv 2EC6  
                        ___lwmod 3212                        ?_vfprintf 0050  
                  ?_Print_config 0001                          __pcinit 3694  
          __end_of_MFRC522_Reset 3A50                          __ramtop 0800  
                        _get_RTC 2152                          _flag_t1 00A0  
             __end_of_TINY_FONTS 7F86                          __ptext0 2556  
                        __ptext1 0B4E                          __ptext2 2CA0  
                        __ptext3 370A                          __ptext4 2152  
                        __ptext5 2F3A                          __ptext6 2FA2  
                        __ptext7 300A                          __ptext8 384A  
                        __ptext9 38A0                          _get_key 0B4E  
                __size_of_strlen 0036                        _T1CONbits 000FCD  
                   __size_of_abs 0040                     __size_of_pad 00C6  
                   __size_of_scr 3608                       ??___xxtofl 0005  
               ___awmod@dividend 0001                          _set_RTC 2CA0  
            __end_of_I2C_Read_DS 2DC8                          _valores 0060  
                        _sprintf 34E8                     _MFRC522_Halt 33EA  
            __end_of_I2C_Restart 3B14                     _MFRC522_Init 3392  
                 __pintcode_body 35CA             end_of_initialization 36C2  
            __size_of_Muestra_ID 018E              __end_of_I2C_Stop_DS 38C8  
                   OLED_SPuts@xi 0014                    _OLEDsetCursor 3968  
                  ??_EEPROM_Read 0009                          fputc@fp 0003  
                  __Lmediumconst 704E                          int_func 35CA  
            __size_of_Print_Anio 0068                          fputs@fp 000C  
                      _OLEDClear 3442              __size_of_Print_Hora 0068  
            __size_of_Print_Menu 0052                        _OLED_Init 2B58  
                     ?_I2C_Start 0001                   ??_UART_Println 0004  
                     ?_CHECK_TAG 0001                   ??_Print_Minuto 0058  
  MFRC522_ReadCardSerial@_status 002A                   ??_Print_Ticket 0058  
              __end_of_vfpfcnvrt 15B8                        _RCSTAbits 000FAB  
                        postdec1 000FE5                          postdec2 000FDD  
    __size_of_EEPROM_getRegistro 0038                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                 ??_Print_config 001A                       ??_vfprintf 0056  
                        strlen@a 0003                          strlen@s 0001  
                      _UART_Init 3A9C                        _PORTDbits 000F83  
                      _PORTEbits 000F84                   UART_Write@data 0001  
                    ___fladd@grs 0010                    ___xxtofl@sign 0009  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                      _TRISDbits 000F95                __size_of_I2C_Init 0028  
              __size_of_I2C_Read 0032                      ___fldiv@grs 0014  
                    ___fldiv@rem 000D                __size_of_I2C_Send 001A  
              __size_of_I2C_Wait 0022                __size_of_I2C_Stop 0012  
                 ?_OLEDsetCursor 0003                    ??_MFRC522_CRC 0012  
                   ?_Font_Normal 0001                       ?_OLEDClear 0001  
                      _TXSTAbits 000FAC                       ?_OLED_Init 0001  
                _ssd1306_command 39FC                MFRC522_Rd@Address 0003  
            __end_of_EEPROM_Read 38A0                   __end_of___flge 2462  
                _MFRC522_Set_Bit 3A84          MFRC522_Request@backBits 0024  
            MFRC522_ToCard@irqEn 001B                      vfpfcnvrt@ap 0044  
                    vfpfcnvrt@fp 0040                      vfpfcnvrt@ll 0048  
                 __end_of___wmul 39DA                  _MFRC522_Request 31AA  
                 __end_of_barras 7F8E                      _BAUDCONbits 000FB8  
                     ?_UART_Init 0001                      _I2C_Read_DS 2D3A  
                    _I2C_Restart 3B02                   __end_of_strlen 37E8  
            start_initialization 3694                   _bcd_to_decimal 3AB2  
              MFRC522_Halt@unLen 0024                      _I2C_Stop_DS 38A0  
              ?_MFRC522_AntiColl 0020                MFRC522_AntiColl@i 0027  
                      _Guarda_ID 15B8                      __end_of_abs 3694  
                    __end_of_pad 27C4                      __end_of_scr 3610  
                 CHECK_TAG@valor 0058          __size_of_MFRC522_ToCard 028E  
             ??_MFRC522_AntiColl 0022                  OLED_SPuts@valve 0011  
        __size_of_MFRC522_isCard 0028                __size_of_Font_Big 0026  
                    ??_I2C_Start 0001                      ??_CHECK_TAG 0058  
              __size_of_New_Line 000E                       OLEDClear@i 0007  
       ??_MFRC522_ReadCardSerial 002A                      vfprintf@fmt 0052  
            __end_of_MFRC522_CRC 2CA0                         ??___flge 0021  
                   ??_Muestra_ID 000C                         ??___wmul 0005  
                      _Print_Dia 2FA2             I2C_Write_DS@i2c_data 0002  
                      _Print_Mes 2F3A                      __pdataBANK0 00EB  
                   ??_Print_Anio 0058                     ??_Print_Hora 0058  
                   ??_Print_Menu 0058                         ??_strlen 0003  
         __end_of_bcd_to_decimal 3AC8                        ___fladd@a 0005  
                  UART_Begin@aux 002D                        ___fladd@b 0001  
                      ___fldiv@a 0005                        ___fldiv@b 0001  
           __end_of_UART_Println 2E4A                      __pbssCOMRAM 005E  
                      ___flsub@a 0015                        ___flsub@b 0011  
                  __pcstackBANK0 00D9                       ?_Guarda_ID 0001  
              MFRC522_Wr@Address 0002                 ___aodiv@dividend 0001  
           __end_of_Print_Minuto 3142             __end_of_Print_Ticket 18F0  
              __size_of___xxtofl 01B4                  ??_OLEDsetCursor 0007  
         __size_of_Print_Segundo 0068      __size_of_MFRC522_AntennaOff 000C  
           __end_of_Print_config 2152          __end_of_ssd1306_command 3A1A  
             __end_of_Muestra_ID 1A7E           ssd1306_command@command 0002  
                    ??_OLEDClear 0007                      _EEPROM_Read 3876  
                    ??_OLED_Init 0003               __end_of_Print_Anio 3072  
                  ?_I2C_Start_DS 0001               __end_of_Print_Hora 31AA  
             __end_of_Print_Menu 34E8          __end_of_MFRC522_Set_Bit 3A9C  
                   ?_Timer1_Init 0001               MFRC522_CRC@dataOut 0010  
        __end_of_MFRC522_Request 3212                 ___lwdiv@dividend 0001  
                      _dtoa$2017 002E              MFRC522_Set_Bit@addr 000C  
                  ?_I2C_Write_DS 0001              MFRC522_Set_Bit@mask 000A  
                  I2C_Init@speed 0001                        __pintcode 0008  
                  __pmediumconst 704E                         ?___aodiv 0001  
                       ?___fladd 0001                         ?___aomod 0001  
                       ?___fldiv 0001                         ?___awdiv 0001  
               ___aodiv@quotient 0013                         ?___awmod 0001  
                     ?_Print_Dia 0001                         ?___flsub 0011  
                       ?___fltol 0001                       ?_Print_Mes 0001  
    __size_of_EEPROM_setRegistro 004A                         ?___lwdiv 0001  
                       ?___lwmod 0001                      ??_UART_Init 0001  
                I2C_Read_DS@data 0003                         ?_get_RTC 0001  
              __size_of_vfprintf 0062                         ?_get_key 0001  
                ?_bcd_to_decimal 0001                         _I2C_Init 3918  
                       _I2C_Read 37E8                         _I2C_Send 3A6A  
                       _I2C_Wait 39DA                         _I2C_Stop 3B14  
                       ?_set_RTC 0001                 ___lwdiv@quotient 0005  
                       ?_sprintf 00D9                   __size_of_fputc 00CA  
                 __size_of_fputs 0044             bcd_to_decimal@number 0002  
                 __size_of_putch 0002                      _MFRC522_CRC 2C00  
                 ___wmul@product 0005                   ??_I2C_Start_DS 0001  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _PIE1bits 000F9D             __size_of_Font_Normal 005C  
               UART_Print@buffer 0002                   ??_I2C_Write_DS 0001  
                       _PIR1bits 000F9E                         i2u552_40 35DA  
                       i2u552_41 35D6                         i2u553_40 35F6  
                       i2u553_41 35F2  __size_of_MFRC522_ReadCardSerial 0038  
                  _Print_Segundo 3072            _I2C_Repeated_Start_DS 38F0  
                      _vfpfcnvrt 1404                ___wmul@multiplier 0001  
                    _contador_t1 009C              __end_of_SMALL_FONTS 7E69  
                    ??_Guarda_ID 0011                   _MFRC522_ToCard 0DF8  
                      copy_data0 36A8                         _Font_Big 398E  
               ?_ssd1306_command 0001                   _MFRC522_isCard 3940  
                       _New_Line 3B26           __size_of_MFRC522_Reset 001A  
               ?_MFRC522_Set_Bit 000A                         __Hrparam 0000  
     __end_of_EEPROM_getRegistro 37B2            MFRC522_Clear_Bit@addr 000C  
                       _Segundox 00A1                 ?_MFRC522_Request 0020  
          MFRC522_Clear_Bit@mask 000A                       vfprintf@ap 0054  
                       __Lrparam 0000                       vfprintf@fp 0050  
                 ?_Print_Segundo 0001                      ??_Print_Dia 0058  
                    ??_Print_Mes 0058                 __size_of___aodiv 0188  
               __size_of___fladd 04C0                 __size_of___aomod 0164  
               __size_of___fldiv 039A                 __size_of___awdiv 00C4  
               __size_of___awmod 00B0                 __size_of___flsub 0046  
               __size_of___fltol 0106            __size_of_UART_Println 0082  
                     ?_vfpfcnvrt 0040                 __size_of___lwdiv 0074  
               __size_of___lwmod 0064                     ?_I2C_Read_DS 0001  
                ___aodiv@divisor 0009            __size_of_Print_Minuto 0068  
                ___aodiv@counter 0011            __size_of_Print_Ticket 018E  
        __size_of_decimal_to_bcd 0038                 __size_of_get_RTC 0106  
                   ?_I2C_Restart 0001                 __size_of_get_key 02AA  
                     sprintf@fmt 00DB                         ___xxtofl 1250  
         __end_of_MFRC522_ToCard 1086                     ?_I2C_Stop_DS 0001  
          __size_of_Print_config 0112           _MFRC522_ReadCardSerial 3742  
                ___lwdiv@divisor 0003                 __size_of_set_RTC 009A  
                ___lwdiv@counter 0007                         __ptext10 38C8  
                       __ptext11 38F0                         __ptext20 04D2  
                       __ptext12 2D3A                         __ptext21 3A1A  
                       __ptext13 3A9C                         __ptext30 3968  
                       __ptext22 3496                         __ptext14 1086  
                       __ptext31 2B58                         __ptext23 2040  
                       __ptext15 1250                         __ptext40 1762  
                       __ptext32 39FC                         __ptext24 3072  
                       __ptext16 2258                         __ptext41 34E8  
                       __ptext33 3918                         __ptext25 30DA  
                       __ptext17 3584                         __ptext50 3654  
                       __ptext42 3276                         __ptext34 3392  
                       __ptext26 3142                         __ptext18 0012  
                       __ptext51 1EDC                         __ptext43 1404  
                       __ptext35 3A36                         __ptext27 1C06  
                       __ptext19 235E                         __ptext60 398E  
                       __ptext52 1A7E                         __ptext44 086C  
                       __ptext36 3ADE                         __ptext28 2888  
                       __ptext61 3AC8                         __ptext53 3AB2  
                       __ptext45 26FE                         __ptext37 3B34  
                       __ptext29 3442                         __ptext70 3A84  
                       __ptext62 18F0                         __ptext54 29FC  
                       __ptext46 37B2                         __ptext38 2462  
                       __ptext71 3A50                         __ptext63 3940  
                       __ptext55 27C4                         __ptext47 3610  
                       __ptext39 1D72                         __ptext80 381A  
                       __ptext72 2E4A                         __ptext64 31AA  
                       __ptext56 2DC8                         __ptext48 2634  
                       __ptext81 377A                         __ptext73 2AAC  
                       __ptext65 3742                         __ptext57 32D8  
                       __ptext49 3B4C                         __ptext82 3876  
                       __ptext74 36D0                         __ptext66 2948  
                       __ptext58 3B26                         __ptext83 3AF0  
                       __ptext75 15B8                         __ptext67 33EA  
                       __ptext59 3336                         __ptext84 3A6A  
                       __ptext76 39B4                         __ptext68 0DF8  
                       __ptext85 3B02                         __ptext77 353A  
                       __ptext69 2C00                         __ptext86 37E8  
                       __ptext78 3212                         __ptext87 39DA  
                       __ptext79 2EC6                         __ptext88 3B14  
         __end_of_MFRC522_isCard 3968                    ?_EEPROM_Write 0008  
    MFRC522_AntiColl@serNumCheck 0023                 __size_of_sprintf 0052  
                  __size_of_main 00DE                    __size_of_dtoa 02E2  
                     _MFRC522_Rd 2AAC                       _MFRC522_Wr 2E4A  
      __size_of_MFRC522_AntiColl 00B4                         _registro 009A  
                   _UART_Println 2DC8                     _Print_Minuto 30DA  
                       isa$xinst 000000                     _Print_Ticket 1762  
         ?_I2C_Repeated_Start_DS 0001             __size_of_Timer1_Init 001C  
           decimal_to_bcd@number 000B                         int$flags 005F  
                       _vfprintf 3276                Guarda_ID@registro 0011  
                    _SMALL_FONTS 7C2F                     _Print_config 2040  
                  _MFRC522_Reset 3A36                 ___aomod@dividend 0001  
           __end_of_I2C_Start_DS 38F0                       _INTCONbits 000FF2  
                ?_MFRC522_ToCard 000D             __end_of_I2C_Write_DS 3876  
                 ??_EEPROM_Write 000B                  ?_MFRC522_isCard 0026  
                       intlevel2 0000                        sprintf@ap 00E1  
                     _OLED_NPuts 2888                       _OLED_SPuts 1C06  
               ___lwmod@dividend 0001                     ?_EEPROM_Read 0007  
                ??_Print_Segundo 0058                _Registro_busqueda 1D72  
               ??_bcd_to_decimal 0001               ?_Registro_busqueda 0011  
                ___aomod@divisor 0009                      ??_vfpfcnvrt 0046  
                ___aomod@counter 0011                   ?_MFRC522_Reset 0001  
                  _configuracion 005E                         sprintf@f 00E3  
                       sprintf@s 00D9                       _UART_Begin 1086  
                ___lwmod@divisor 0003              ??_Registro_busqueda 0013  
                ___lwmod@counter 0005                       _UART_Print 32D8  
                     _UART_Write 3AC8       __end_of_MFRC522_AntennaOff 3B40  
                    _SSPCON2bits 000FC5                    ?_MFRC522_Halt 0001  
                  ?_MFRC522_Init 0001                    ___fladd@signs 000D  
                     _TINY_FONTS 7E69                     ___aodiv@sign 0012  
          __end_of_OLEDsetCursor 398E                 OLED_NPuts@buffer 0007  
                   ?_MFRC522_CRC 000D                     ___fladd@aexp 000E  
                   ___fladd@bexp 000F                Print_Ticket@valor 00E9  
                    ?_MFRC522_Rd 0001                      ?_MFRC522_Wr 0001  
                EEPROM_Read@temp 0009                     ___aomod@sign 0012  
      __end_of_Registro_busqueda 1EDC                   EEPROM_Read@add 0007  
     __end_of_EEPROM_setRegistro 3584  
